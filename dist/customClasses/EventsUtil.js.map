{"version":3,"file":"EventsUtil.js","names":["ModelsHelper","EventsUtil","ManagedObject","constructor","applyToFragment","oSuggestionsData","modelsHelper","getInstance","eventsListFactory","sId","oBindingContext","that","sContextPath","getPath","oEvent","getObject","oListItem","CustomListItem","addStyleClass","oGrid","Grid","defaultSpan","addContent","oFragmentHeader","byId","clone","observation","oContainerObservation","pot","oContainerPot","soil","oContainerSoil","iCols","getContent","length","sColsImageContainerL","sColsContainer","oContainerOneImage","oContainerImages","bindAggregation","path","template","templateShareable","setLayoutData","GridData","span","deleteEventsTableRow","oSelectedEvent","oEventsModel","oCurrentPlant","aEvents","getProperty","id","iIndex","indexOf","MessageToast","show","splice","refresh","_getObservationData","oEventEditData","segments","oObservationDataClone","JSON","parse","stringify","height","undefined","stem_max_diameter","diseases","observation_notes","_getPotData","oView","oPotDataClone","getSelected","shape_side","Error","shape_top","_getSoilData","oSoilDataClone","description","_loadSoils","sUrl","Util","getServiceUrl","oSoilsModel","getModel","JSONModel","setModel","loadData","_addEvent","aEventsCurrentPlant","oDialog","oNewEventModel","oNewEventData","getData","assertCorrectDate","date","_assertNoDuplicateOnDate","oNewEventSave","getClonedObject","oNewObservation","oNewPot","oNewSoil","oNewEvent","event_notes","plant_id","images","push","updateBindings","close","sDate","found","find","element","_editEvent","oEditEventModel","oldEvent","oOldEvent","oEditedObservation","oEditedPot","oEditedSoil","iOldObservationId","addOrEditEvent","dDataNew","sMode","mode","sPathEventsModel","editEvent","iCurrentPlantId","_initEditSelectedEvent","bind","setTitle","setText","dEventEdit","_getInitialEvent","diameter_width","material","setSelected","destroy","oModel","open","oPot","name","oObservation","oSoil","soil_name","mix","oEventEditDataSegments","getToday","openDialogEditSoil","dEditedSoil","dialog_title","btn_text","new","oEditedSoilModel","bindElement","model","addDependent","openDialogNewSoil","dNewSoil","oNewSoilModel","_saveNewSoil","aSoils","SoilsCollection","existing_soil_found","newSoil","startBusyDialog","$","ajax","url","type","contentType","data","context","done","_cbSavedNewSoil","fail","onReceiveErrorGeneric","_updateExistingSoil","oSoilData","updatedSoil","_cbUpdatedExistingSoil","updateOrCreateSoil","oSOil","stopBusyDialog","_instance"],"sources":["../../src/customClasses/EventsUtil.ts"],"sourcesContent":["import * as Util from \"plants/ui/customClasses/Util\";\r\nimport MessageToast from \"sap/m/MessageToast\"\r\nimport JSONModel from \"sap/ui/model/json/JSONModel\"\r\nimport Grid from \"sap/ui/layout/Grid\"\r\nimport GridData from \"sap/ui/layout/GridData\"\r\nimport CustomListItem from \"sap/m/CustomListItem\"\r\nimport ManagedObject from \"sap/ui/base/ManagedObject\"\r\nimport View from \"sap/ui/core/mvc/View\";\r\nimport Dialog from \"sap/m/Dialog\";\r\nimport Button from \"sap/m/Button\";\r\nimport {\r\n\tEventEditData, EventEditDataSegments, EventInEventsModel, InitialSoil, SoilEditData\r\n} from \"../definitions/EventsLocal\";\r\nimport { PRPot,  PEvent, PRObservation, PResultsUpdateCreateSoil, PRSoil, PEvents, } from \"../definitions/EventsFromBackend\";\r\nimport RadioButton from \"sap/m/RadioButton\";\r\nimport ModelsHelper from \"../model/ModelsHelper\";\r\nimport { PPlant } from \"../definitions/PlantsFromBackend\";\r\nimport { LSuggestions } from \"../definitions/PlantsLocal\";\r\nimport Context from \"sap/ui/model/Context\";\r\nimport Controller from \"sap/ui/core/mvc/Controller\";\r\nimport VBox from \"sap/m/VBox\";\r\nimport GridListItem from \"sap/f/GridListItem\";\r\nimport GridList from \"sap/f/GridList\";\r\nimport { PImage } from \"../definitions/ImageFromBackend\";\r\n\r\n/**\r\n * @namespace plants.ui.customClasses\r\n */\r\nexport default class EventsUtil extends ManagedObject {\r\n\tprivate static _instance: EventsUtil;\r\n\tprivate applyToFragment: Function;\r\n\tprivate oSuggestionsData;\r\n\tprivate modelsHelper: ModelsHelper\r\n\r\n\tpublic static getInstance(applyToFragment?: Function, oSuggestionsData?: LSuggestions): EventsUtil {\r\n\t\tif (!EventsUtil._instance && applyToFragment && oSuggestionsData) {\r\n\t\t\tEventsUtil._instance = new EventsUtil(applyToFragment, oSuggestionsData);\r\n\t\t}\r\n\t\treturn EventsUtil._instance;\r\n\t}\r\n\r\n\tprivate constructor(applyToFragment: Function, oSuggestionsData: LSuggestions) {\r\n\t\tsuper();\r\n\t\tthis.modelsHelper = ModelsHelper.getInstance();\r\n\t\tthis.applyToFragment = applyToFragment;\r\n\t\tthis.oSuggestionsData = oSuggestionsData;\r\n\t}\r\n\r\n\teventsListFactory(sId: string, oBindingContext: Context) {\r\n\t\t//executed in Detail Controller Context\r\n\t\tlet that: Controller = this as unknown as Controller\r\n\r\n\t\tvar sContextPath = oBindingContext.getPath();\r\n\t\tvar oEvent = <PEvent>oBindingContext.getObject();\r\n\t\tvar oListItem = new CustomListItem({});\r\n\t\toListItem.addStyleClass('sapUiTinyMarginBottom');\r\n\t\tvar oGrid = new Grid({\r\n\t\t\tdefaultSpan: \"XL3 L3 M6 S12\"\r\n\t\t});\r\n\t\toListItem.addContent(oGrid);\r\n\r\n\t\tvar oFragmentHeader = <VBox>that.byId(\"eventHeader\").clone(sId);\r\n\t\toGrid.addContent(oFragmentHeader);\r\n\r\n\t\tif (!!oEvent.observation) {\r\n\t\t\tvar oContainerObservation = <VBox>that.byId(\"eventObservation\").clone(sId);\r\n\t\t\toGrid.addContent(oContainerObservation);\r\n\t\t}\r\n\r\n\t\tif (!!oEvent.pot) {\r\n\t\t\tvar oContainerPot = <VBox>that.byId(\"eventPot\").clone(sId);\r\n\t\t\toGrid.addContent(oContainerPot);\r\n\t\t}\r\n\r\n\t\tif (!!oEvent.soil) {\r\n\t\t\tvar oContainerSoil = that.byId(\"eventSoil\").clone(sId);\r\n\t\t\toGrid.addContent(<VBox>oContainerSoil);\r\n\t\t}\r\n\r\n\t\t// we want the images item to get the rest of the row or the whole next row if current row is almost full \r\n\t\t// calculate number of cols in grid layout for images container in screen sizes xl/l\r\n\t\t// todo: switch from grid layout to the new (with 1.60) gridlist, where the following is probably\r\n\t\t// not required\r\n\t\tvar iCols = (oGrid.getContent().length * 3) - 1;\r\n\t\tif ((12 - iCols) < 3) {\r\n\t\t\tvar sColsImageContainerL = \"XL12 L12\";\r\n\t\t} else {\r\n\t\t\tsColsImageContainerL = \"XL\" + (12 - iCols) + \" L\" + (12 - iCols);\r\n\t\t}\r\n\t\tvar sColsContainer = sColsImageContainerL + \" M6 S12\";\r\n\r\n\t\tvar oContainerOneImage = <GridListItem>that.byId(\"eventImageListItem\").clone(sId);\r\n\r\n\t\t// add items aggregation binding\r\n\t\tvar oContainerImages = <GridList>that.byId(\"eventImageContainer\").clone(sId);\r\n\t\toContainerImages.bindAggregation('items',\r\n\t\t\t{\r\n\t\t\t\tpath: \"events>\" + sContextPath + \"/images\",\r\n\t\t\t\ttemplate: oContainerOneImage,\r\n\t\t\t\ttemplateShareable: false\r\n\t\t\t});\r\n\r\n\t\t// add layoutData aggregation binding to set number of columns in outer grid\r\n\t\toContainerImages.setLayoutData(new GridData({ span: sColsContainer }));\r\n\t\toGrid.addContent(oContainerImages);\r\n\r\n\t\treturn oListItem;\r\n\t}\r\n\r\n\tdeleteEventsTableRow(oSelectedEvent: PEvent, oEventsModel: JSONModel, oCurrentPlant: PPlant) {\r\n\t\t// deleting row from events table\r\n\r\n\t\tvar aEvents = oEventsModel.getProperty('/PlantsEventsDict/' + oCurrentPlant.id);\r\n\r\n\t\t// delete the item from array\r\n\t\tvar iIndex = aEvents.indexOf(oSelectedEvent);\r\n\t\tif (iIndex < 0) {\r\n\t\t\tMessageToast.show('An error happended in internal processing of deletion.');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\taEvents.splice(iIndex, 1);\r\n\t\toEventsModel.refresh();\r\n\t}\r\n\r\n\tprivate _getObservationData(oEventEditData: EventEditData): PRObservation|null {\r\n\t\t//returns the cleansed observation data from the event edit data\r\n\t\tif (!oEventEditData.segments.observation)\r\n\t\t\treturn null;\r\n\r\n\t\tconst oObservationDataClone = JSON.parse(JSON.stringify(oEventEditData.observation));\r\n\t\t// if height or diameter are 0, reset them to undefined\r\n\t\tif (oObservationDataClone.height === 0.0) {\r\n\t\t\toObservationDataClone.height = undefined;\r\n\t\t}\r\n\t\tif (oObservationDataClone.stem_max_diameter === 0.0) {\r\n\t\t\toObservationDataClone.stem_max_diameter = undefined;\r\n\t\t}\r\n\t\tif (!oObservationDataClone.diseases || oObservationDataClone.diseases.length === 0) {\r\n\t\t\toObservationDataClone.diseases = undefined;\r\n\t\t}\r\n\t\tif (!oObservationDataClone.observation_notes || oObservationDataClone.observation_notes === 0) {\r\n\t\t\toObservationDataClone.observation_notes = undefined;\r\n\t\t}\r\n\t\treturn <PRObservation>oObservationDataClone;\r\n\t}\r\n\t\r\n\tprivate _getPotData(oEventEditData: EventEditData, oView: View): PRPot|null {\r\n\t\t//loads, parses, and cleanses the pot data from the the dialog control\r\n\t\tif (!oEventEditData.segments.pot)\r\n\t\t\treturn null;\r\n\t\tconst oPotDataClone = <PRPot>JSON.parse(JSON.stringify(oEventEditData.pot));\r\n\r\n\t\tif ((<RadioButton>oView.byId('idPotHeight0')).getSelected()) {\r\n\t\t\toPotDataClone.shape_side = 'very flat';\r\n\t\t} else if ((<RadioButton>oView.byId('idPotHeight1')).getSelected()) {\r\n\t\t\toPotDataClone.shape_side = 'flat';\r\n\t\t} else if ((<RadioButton>oView.byId('idPotHeight2')).getSelected()) {\r\n\t\t\toPotDataClone.shape_side = 'high';\r\n\t\t} else if ((<RadioButton>oView.byId('idPotHeight3')).getSelected()) {\r\n\t\t\toPotDataClone.shape_side = 'very high';\r\n\t\t} else {\r\n\t\t\tthrow new Error('Pot height not selected');\r\n\t\t}\r\n\r\n\t\tif ((<RadioButton>oView.byId('idPotShape0')).getSelected()) {\r\n\t\t\toPotDataClone.shape_top = 'square';\r\n\t\t} else if ((<RadioButton>oView.byId('idPotShape1')).getSelected()) {\r\n\t\t\toPotDataClone.shape_top = 'round';\r\n\t\t} else if ((<RadioButton>oView.byId('idPotShape2')).getSelected()) {\r\n\t\t\toPotDataClone.shape_top = 'oval';\r\n\t\t} else if ((<RadioButton>oView.byId('idPotShape3')).getSelected()) {\r\n\t\t\toPotDataClone.shape_top = 'hexagonal';\r\n\t\t} else {\r\n\t\t\tthrow new Error('Pot shape not selected');\r\n\t\t}\r\n\r\n\t\treturn oPotDataClone;\r\n\t}\r\n\r\n\tprivate _getSoilData(oEventEditData: EventEditData, oView: View): PRSoil|null {\r\n\t\t//loads, parses, and cleanses the soil data from the the dialog control\r\n\t\t//note: we submit the whole soil object to the backend, but the backend does only care about the id\r\n\t\t//      for modifying or creating a soil, there's a separate service\r\n\t\t//      however, we parse the whole object here to make sure we have the correct data\r\n\t\tif (!oEventEditData.segments.soil)\r\n\t\t\treturn null;\r\n\t\t\r\n\t\tconst oSoilDataClone = <PRSoil>JSON.parse(JSON.stringify(oEventEditData.soil));\r\n\t\tif (!oSoilDataClone.description || oSoilDataClone.description.length == 0) {\r\n\t\t\toSoilDataClone.description = undefined;\r\n\t\t}\r\n\t\treturn oSoilDataClone;\r\n\t}\r\n\r\n\tpublic _loadSoils(oView: View) {\r\n\t\t// triggered when opening dialog to add/edit event\r\n\t\t// get soils collection from backend proposals resource\r\n\t\tvar sUrl = Util.getServiceUrl('events/soils');\r\n\t\tlet oSoilsModel = <JSONModel>oView.getModel('soils');\r\n\t\tif (!oSoilsModel) {\r\n\t\t\toSoilsModel = new JSONModel(sUrl);\r\n\t\t\toView.setModel(oSoilsModel, 'soils');\r\n\t\t} else {\r\n\t\t\toSoilsModel.loadData(sUrl);\r\n\t\t}\r\n\t}\r\n\r\n\t//triggered by addOrEditEvent\r\n\tprivate _addEvent(oView: View, oEventsModel: JSONModel, aEventsCurrentPlant: EventInEventsModel[]) {\r\n\t\t//triggered by add button in add/edit event dialog\r\n\t\t//validates and filters data to be saved\r\n\r\n\t\t// get new event data\r\n\t\tconst oDialog = <Dialog>oView.byId('dialogEvent');\r\n\t\tconst oNewEventModel = <JSONModel>oDialog.getModel(\"editOrNewEvent\");\r\n\t\tconst oNewEventData = <EventEditData>oNewEventModel.getData();\r\n\r\n\t\t// assert date matches pattern \"YYYY-MM-DD\"\r\n\t\tUtil.assertCorrectDate(oNewEventData.date);\r\n\t\tthis._assertNoDuplicateOnDate(aEventsCurrentPlant, oNewEventData.date);\r\n\r\n\t\t// clone the data so we won't change the original new model\r\n\t\tconst oNewEventSave = <EventEditData>Util.getClonedObject(oNewEventData);\r\n\r\n\t\tif (oNewEventSave.segments.soil && (!oNewEventSave.soil || !oNewEventSave.soil.id)){\r\n\t\t\tMessageToast.show('Please choose soil first.');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// get the data in the dialog's segments\r\n\t\tconst oNewObservation = <PRObservation | undefined>this._getObservationData(oNewEventSave);\r\n\t\tconst oNewPot = <PRPot | undefined>this._getPotData(oNewEventSave, oView);\r\n\t\tconst oNewSoil = <PRSoil | undefined>this._getSoilData(oNewEventSave, oView);\r\n\r\n\t\tconst oNewEvent: EventInEventsModel = {\r\n\t\t\t// id: number; no id, yet\r\n\t\t\tdate: oNewEventSave.date,\r\n\t\t\tevent_notes: <string|undefined>(oNewEventSave.event_notes && oNewEventSave.event_notes.length > 0 ? oNewEventSave.event_notes : undefined),\r\n\t\t\tobservation: oNewObservation,\r\n\t\t\tpot: oNewPot,\r\n\t\t\tsoil: oNewSoil,\r\n\t\t\tplant_id: oNewEventSave.plant_id,\r\n\t\t\timages: <PImage[]>[]\r\n\t\t}\r\n\r\n\t\t// actual saving is done upon hitting save button\r\n\t\t// here, we only update the events model\r\n\t\taEventsCurrentPlant.push(oNewEvent);\r\n\t\toEventsModel.updateBindings(false);\r\n\t\toDialog.close();\r\n\t}\r\n\r\n\tprivate _assertNoDuplicateOnDate(aEventsCurrentPlant: EventInEventsModel[], sDate: string, oEvent?: PEvent) {\r\n\t\t// make sure there's only one event per day and plant (otherwise backend problems would occur)\r\n\t\t// if new event data is supplied, we're editing an event and need to make sure we're not comparing the event to itself\r\n\t\tconst found = aEventsCurrentPlant.find(function (element) {\r\n\t\t\treturn (element.date === sDate && element !== oEvent);\r\n\t\t});\r\n\t\tif (!!found) {\r\n\t\t\tMessageToast.show('Duplicate event on that date.');\r\n\t\t\tthrow new Error('Duplicate event on that date.');\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _editEvent(oView: View, oEventsModel: JSONModel, aEventsCurrentPlant: PEvent[]): void {\r\n\t\t//triggered by addOrEditEvent\r\n\t\t//triggered by button in add/edit event dialog\r\n\t\t//validates and filters data to be saved and triggers saving\r\n\r\n\t\t// get new event data\r\n\t\tconst oDialog = <Dialog>oView.byId('dialogEvent');\r\n\t\tconst oEditEventModel = <JSONModel>oDialog.getModel(\"editOrNewEvent\");\r\n\t\tconst oEventEditData = <EventEditData>oEditEventModel.getData();\r\n\r\n\t\t// old record (which we are updating as it is a pointer to the events model itself) is hidden as a property in the new model\r\n\t\tif (!oEventEditData.oldEvent) {\r\n\t\t\tMessageToast.show(\"Can't determine old record. Aborting.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst oOldEvent: PEvent = oEventEditData.oldEvent;\r\n\r\n\t\t// assert date matches pattern \"YYYY-MM-DD\"\r\n\t\tUtil.assertCorrectDate(oEventEditData.date);\r\n\t\tthis._assertNoDuplicateOnDate(aEventsCurrentPlant, oEventEditData.date, oOldEvent);\r\n\r\n\t\tif (oOldEvent.plant_id !== oEventEditData.plant_id) {\r\n\t\t\tMessageToast.show('Plant ID cannot be changed.');\r\n\t\t\tthrow new Error('Plant ID cannot be changed.');\r\n\t\t}\r\n\r\n\t\tif (oEventEditData.segments.soil && (!oEventEditData.soil || !oEventEditData.soil.id)){\r\n\t\t\tMessageToast.show('Please choose soil first.');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// get the data in the dialog's segments\r\n\t\tconst oEditedObservation = <PRObservation>this._getObservationData(oEventEditData);\r\n\t\tconst oEditedPot = <PRPot>this._getPotData(oEventEditData, oView);\r\n\t\tconst oEditedSoil = <PRSoil>this._getSoilData(oEventEditData, oView);\r\n\r\n\t\t// update each attribute from the new model into the old event\r\n\t\toOldEvent.date = <string>oEventEditData.date;\r\n\t\toOldEvent.event_notes = <string|undefined>(oEventEditData.event_notes && oEventEditData.event_notes.length > 0 ? oEventEditData.event_notes : undefined);\r\n\t\t\r\n\t\tconst iOldObservationId = oEditedObservation ? <int|undefined>oEditedObservation.id: undefined;\r\n\t\toOldEvent.observation = <PRObservation>oEditedObservation;\r\n\t\tif (oOldEvent.observation)\r\n\t\t\toOldEvent.observation.id = <int|undefined>iOldObservationId;\r\n\r\n\t\toOldEvent.pot = <PRPot|undefined>oEditedPot;\r\n\t\toOldEvent.soil = <PRSoil|undefined>oEditedSoil;\r\n\r\n\t\t// have events factory function in details controller regenerate the events list\r\n\t\toEventsModel.updateBindings(false);  // we updated a proprety of that model\r\n\t\toEventsModel.refresh(true);\r\n\t\toDialog.close();\r\n\t}\r\n\r\n\taddOrEditEvent(oView: View, oCurrentPlant: PPlant) {\r\n\t\tvar oDialog = oView.byId('dialogEvent');\r\n\t\tvar oNewEventModel = <JSONModel>oDialog.getModel(\"editOrNewEvent\");\r\n\t\tvar dDataNew = <EventEditData>oNewEventModel.getData();\r\n\t\tvar sMode = dDataNew.mode; //edit or new\r\n\r\n\t\tvar oEventsModel = <JSONModel>oView.getModel('events');\r\n\t\tvar sPathEventsModel = '/PlantsEventsDict/' + oCurrentPlant.id + '/';\r\n\t\tvar aEventsCurrentPlant = oEventsModel.getProperty(sPathEventsModel);\r\n\r\n\t\tif (sMode === 'edit') {\r\n\t\t\tthis._editEvent(oView, oEventsModel, aEventsCurrentPlant);\r\n\t\t} else {  //'new'\r\n\t\t\tthis._addEvent(oView, oEventsModel, aEventsCurrentPlant);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic editEvent(oSelectedEvent: PEvent, oView: View, iCurrentPlantId: int) {\r\n\t\tthis.applyToFragment('dialogEvent', this._initEditSelectedEvent.bind(this, oSelectedEvent, oView, iCurrentPlantId));\r\n\t}\r\n\r\n\tprivate _initEditSelectedEvent(oSelectedEvent: PEvent, oView: View, iCurrentPlantId: int, oDialog: Dialog) {\r\n\t\t// get soils collection from backend proposals resource\r\n\t\tthis._loadSoils(oView);\r\n\r\n\t\t// update dialog title and save/update button\r\n\t\toDialog.setTitle('Edit Event (' + oSelectedEvent.date + ')');\r\n\t\t(<Button>oView.byId('btnEventUpdateSave')).setText('Update');\r\n\r\n\t\t// there is some logic involved in mapping the dialog controls and the events model, additionally\r\n\t\t// we don't want to update the events model entity immediately from the dialog but only upon\r\n\t\t// hitting update button, therefore we generate a edit model, fill it with our event's data,\r\n\t\t// and, upon hitting update button, do it the other way around\r\n\t\tvar dEventEdit: EventEditData = this._getInitialEvent(iCurrentPlantId);\r\n\t\tdEventEdit.mode = 'edit';\r\n\t\tdEventEdit.date = oSelectedEvent.date;\r\n\t\tdEventEdit.event_notes = oSelectedEvent.event_notes;\r\n\r\n\t\t// we need to remember the old record\r\n\t\tdEventEdit.oldEvent = oSelectedEvent;\r\n\t\tif (oSelectedEvent.pot && oSelectedEvent.pot.id) {\r\n\t\t\tdEventEdit.pot!.id = oSelectedEvent.pot.id;\r\n\t\t}\r\n\t\tif (oSelectedEvent.observation && oSelectedEvent.observation.id) {\r\n\t\t\tdEventEdit.observation!.id = oSelectedEvent.observation.id;\r\n\t\t}\r\n\r\n\t\t// observation segment\r\n\t\tif (!!oSelectedEvent.observation) {\r\n\t\t\t// activate observation tab if there is an observation\r\n\t\t\tdEventEdit.segments.observation = true;\r\n\t\t\tdEventEdit.observation!.diseases = oSelectedEvent.observation.diseases;\r\n\t\t\tdEventEdit.observation!.height = oSelectedEvent.observation.height;\r\n\t\t\tdEventEdit.observation!.observation_notes = oSelectedEvent.observation.observation_notes;\r\n\t\t\tdEventEdit.observation!.stem_max_diameter = oSelectedEvent.observation.stem_max_diameter;\r\n\t\t} else {\r\n\t\t\tdEventEdit.segments.observation = false;\r\n\t\t}\r\n\r\n\t\t// pot segment\r\n\t\tif (!!oSelectedEvent.pot) {\r\n\t\t\tdEventEdit.segments.pot = true;\r\n\t\t\tdEventEdit.pot!.diameter_width = oSelectedEvent.pot.diameter_width;\r\n\t\t\tdEventEdit.pot!.material = oSelectedEvent.pot.material;\r\n\t\t\t// the shape attributes are not set via model\r\n\t\t\tswitch (oSelectedEvent.pot.shape_side) {\r\n\t\t\t\tcase 'very flat':\r\n\t\t\t\t\t(<RadioButton>oView.byId('idPotHeight0')).setSelected(true); break;\r\n\t\t\t\tcase 'flat':\r\n\t\t\t\t\t(<RadioButton>oView.byId('idPotHeight1')).setSelected(true); break;\r\n\t\t\t\tcase 'high':\r\n\t\t\t\t\t(<RadioButton>oView.byId('idPotHeight2')).setSelected(true); break;\r\n\t\t\t\tcase 'very high':\r\n\t\t\t\t\t(<RadioButton>oView.byId('idPotHeight3')).setSelected(true); break;\r\n\t\t\t}\r\n\r\n\t\t\tswitch (oSelectedEvent.pot.shape_top) {\r\n\t\t\t\tcase 'square':\r\n\t\t\t\t\t(<RadioButton>oView.byId('idPotShape0')).setSelected(true); break;\r\n\t\t\t\tcase 'round':\r\n\t\t\t\t\t(<RadioButton>oView.byId('idPotShape1')).setSelected(true); break;\r\n\t\t\t\tcase 'oval':\r\n\t\t\t\t\t(<RadioButton>oView.byId('idPotShape2')).setSelected(true); break;\r\n\t\t\t\tcase 'hexagonal':\r\n\t\t\t\t\t(<RadioButton>oView.byId('idPotShape3')).setSelected(true); break;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tdEventEdit.segments.pot = false;\r\n\t\t}\r\n\r\n\t\t// soil segment\r\n\t\tif (!!oSelectedEvent.soil) {\r\n\t\t\tdEventEdit.segments.soil = true;\r\n\t\t\tdEventEdit.soil = Util.getClonedObject(oSelectedEvent.soil);\r\n\t\t} else {\r\n\t\t\tdEventEdit.segments.soil = false;\r\n\t\t}\r\n\r\n\t\t// set model and open dialog\r\n\t\tif (oDialog.getModel(\"editOrNewEvent\")) {\r\n\t\t\toDialog.getModel(\"editOrNewEvent\").destroy();\r\n\t\t}\r\n\t\tvar oModel = new JSONModel(dEventEdit);\r\n\t\toDialog.setModel(oModel, \"editOrNewEvent\");\r\n\t\toDialog.open();\r\n\t}\r\n\r\n\tpublic _getInitialEvent(iCurrentPlantId: int): EventEditData {\r\n\t\t// create initial data for the Create/Edit Event Dialog (we don't use the \r\n\t\t// actual data there in case of editing an event)\r\n\t\t// called by both function to add and to edit event\r\n\t\tconst oPot = <PRPot>{\r\n\t\t\t'diameter_width': 4,\r\n\t\t\t'material': this.oSuggestionsData['potMaterialCollection'][0].name\r\n\t\t};\r\n\r\n\t\tconst oObservation = <PRObservation>{\r\n\t\t\t'height': 0,\r\n\t\t\t'stem_max_diameter': 0,\r\n\t\t\t'diseases': '',\r\n\t\t\t'observation_notes': ''\r\n\t\t}\r\n\r\n\t\tconst oSoil: InitialSoil = {\r\n\t\t\tid: undefined,\r\n\t\t\tsoil_name: undefined,\r\n\t\t\tmix: undefined,\r\n\t\t\tdescription: undefined,\r\n\t\t}\r\n\r\n\t\tconst oEventEditDataSegments = <EventEditDataSegments>{\r\n\t\t\t// defaults to inactive segments\r\n\t\t\tobservation: false,\r\n\t\t\tpot: false,\r\n\t\t\tsoil: false,\r\n\t\t}\r\n\r\n\t\tconst oEventEditData = <EventEditData>{\r\n\t\t\tplant_id: iCurrentPlantId, \r\n\t\t\tdate: Util.getToday(),\r\n\t\t\tevent_notes: '',\r\n\t\t\tpot: oPot,\r\n\t\t\tobservation: oObservation,\r\n\t\t\tsoil: oSoil,\r\n\t\t\tsegments: oEventEditDataSegments,\r\n\t\t\tmode: \"new\",  // will be overwritten in case of editing\r\n\t\t};\t\t\r\n\t\treturn oEventEditData;\r\n\t}\r\n\r\n\topenDialogEditSoil(oView: View, oSoil: PRSoil): void {\r\n\t\tvar dEditedSoil = <SoilEditData>{\r\n\t\t\tdialog_title: 'Edit Soil (ID ' + oSoil.id + ')',\r\n\t\t\tbtn_text: 'Update',\r\n\t\t\tnew: false,\r\n\t\t\tid: oSoil.id,\r\n\t\t\tsoil_name: oSoil.soil_name,\r\n\t\t\tdescription: oSoil.description,\r\n\t\t\tmix: oSoil.mix\r\n\t\t}\r\n\t\tvar oEditedSoilModel = new JSONModel(dEditedSoil);\r\n\r\n\t\tthis.applyToFragment('dialogEditSoil', (oDialog: Dialog) => {\r\n\t\t\toDialog.setModel(oEditedSoilModel, 'editedSoil');\r\n\t\t\toDialog.bindElement({\r\n\t\t\t\tpath: '/',\r\n\t\t\t\tmodel: \"editedSoil\"\r\n\t\t\t});\r\n\t\t\toView.addDependent(oDialog);\r\n\t\t\toDialog.open();\r\n\t\t});\r\n\t}\r\n\r\n\topenDialogNewSoil(oView: View): void {\r\n\t\tvar dNewSoil = <SoilEditData>{\r\n\t\t\tdialog_title: 'New Soil',\r\n\t\t\tbtn_text: 'Create',\r\n\t\t\tnew: true,\r\n\t\t\tid: undefined,\r\n\t\t\tsoil_name: '',\r\n\t\t\tdescription: '',\r\n\t\t\tmix: ''\r\n\t\t}\r\n\t\tvar oNewSoilModel = new JSONModel(dNewSoil);\r\n\r\n\t\tthis.applyToFragment('dialogEditSoil', (oDialog: Dialog) => {\r\n\t\t\toDialog.setModel(oNewSoilModel, 'editedSoil');\r\n\t\t\toDialog.bindElement({\r\n\t\t\t\tpath: '/',\r\n\t\t\t\tmodel: \"editedSoil\"\r\n\t\t\t});\r\n\t\t\toView.addDependent(oDialog);\r\n\t\t\toDialog.open();\r\n\t\t});\r\n\t}\r\n\r\n\tprivate _saveNewSoil(oNewSoil: SoilEditData, oSoilsModel: JSONModel): void {\r\n\r\n\t\t// check if there's already a same-named soil\r\n\t\tvar aSoils = <PRSoil[]>oSoilsModel.getData().SoilsCollection;\r\n\t\tvar existing_soil_found = aSoils.find(function (element) {\r\n\t\t\treturn element.soil_name === oNewSoil.soil_name;\r\n\t\t});\r\n\t\tif (existing_soil_found) {\r\n\t\t\tMessageToast.show(\"Soil name already exists.\")\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar newSoil = {\r\n\t\t\tid: undefined,\r\n\t\t\tsoil_name: oNewSoil.soil_name,\r\n\t\t\tdescription: oNewSoil.description,\r\n\t\t\tmix: oNewSoil.mix\r\n\t\t}\r\n\r\n\t\tUtil.startBusyDialog('Saving new soil...');\r\n\t\t$.ajax({\r\n\t\t\turl: Util.getServiceUrl('events/soils'),\r\n\t\t\ttype: 'POST',\r\n\t\t\tcontentType: \"application/json\",\r\n\t\t\tdata: JSON.stringify(newSoil),\r\n\t\t\tcontext: this\r\n\t\t})\r\n\t\t\t.done(this._cbSavedNewSoil.bind(this, oSoilsModel))\r\n\t\t\t.fail(this.modelsHelper.onReceiveErrorGeneric.bind(this, 'Save New Soil'));\r\n\t}\r\n\r\n\tprivate _updateExistingSoil(oSoilData: SoilEditData, oSoilsModel: JSONModel) {\r\n\t\tvar updatedSoil = {\r\n\t\t\tid: oSoilData.id,\r\n\t\t\tsoil_name: oSoilData.soil_name,\r\n\t\t\tdescription: oSoilData.description,\r\n\t\t\tmix: oSoilData.mix\r\n\t\t}\r\n\r\n\t\tUtil.startBusyDialog('Saving updated soil...');\r\n\t\t$.ajax({\r\n\t\t\turl: Util.getServiceUrl('events/soils'),\r\n\t\t\ttype: 'PUT',\r\n\t\t\tcontentType: \"application/json\",\r\n\t\t\tdata: JSON.stringify(updatedSoil),\r\n\t\t\tcontext: this\r\n\t\t})\r\n\t\t\t.done(this._cbUpdatedExistingSoil.bind(this, oSoilsModel))\r\n\t\t\t.fail(this.modelsHelper.onReceiveErrorGeneric.bind(this, 'Save New Soil'));\r\n\t}\r\n\r\n\tpublic updateOrCreateSoil(oEditedSoil: SoilEditData, oSoilsModel: JSONModel) {\r\n\t\t//make sure soil has a name and a mix\r\n\t\tif (oEditedSoil.soil_name === \"\" || oEditedSoil.mix === \"\") {\r\n\t\t\tMessageToast.show('Enter soil mix name and mix ingredients.');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// new soil\r\n\t\tif (oEditedSoil.new) {\r\n\t\t\tif (oEditedSoil.id) {\r\n\t\t\t\tMessageToast.show(\"Unexpected ID found.\")\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t// _cbSavedNewSoil will be called asynchronously, closing dialogue\r\n\t\t\tthis._saveNewSoil(oEditedSoil, oSoilsModel);\r\n\r\n\t\t\t// update existing soil\r\n\t\t} else {\r\n\t\t\t// _cbUpdatedExistingSoil will be called asynchronously, closing dialogue\r\n\t\t\tthis._updateExistingSoil(oEditedSoil, oSoilsModel);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _cbUpdatedExistingSoil(oSoilsModel: JSONModel, data: PResultsUpdateCreateSoil) {\r\n\t\t// callback for request updating existing soil \r\n\t\tif (!data.soil.id) {\r\n\t\t\tMessageToast.show(\"Unexpected backend error - No Soil ID\")\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar aSoils = <PRSoil[]>oSoilsModel.getData().SoilsCollection;\r\n\t\tvar oSOil = aSoils.find(function (element) {\r\n\t\t\treturn element.id === data.soil.id;\r\n\t\t});\r\n\t\tif (!oSOil) {\r\n\t\t\tMessageToast.show(\"Updated soil not found in Model\")\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\toSOil.soil_name = data.soil.soil_name\r\n\t\toSOil.description = data.soil.description\r\n\t\toSOil.mix = data.soil.mix\r\n\r\n\t\toSoilsModel.updateBindings(false);\r\n\r\n\t\t// busy dialog was started before ajax call\r\n\t\tUtil.stopBusyDialog();\r\n\t\tthis.applyToFragment('dialogEditSoil', (oDialog: Dialog) => oDialog.close(),);\r\n\r\n\t\t// todo also update in current plant events list (currently requires a reload)\r\n\t}\r\n\r\n\tprivate _cbSavedNewSoil(oSoilsModel: JSONModel, data: PResultsUpdateCreateSoil) {\r\n\t\t// callback for request saving new soil \r\n\t\tif (!data.soil.id) {\r\n\t\t\tMessageToast.show(\"Unexpected backend error - No Soil ID\")\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar aSoils = oSoilsModel.getData().SoilsCollection;\r\n\t\tvar oNewSoil = {\r\n\t\t\tid: data.soil.id,\r\n\t\t\tsoil_name: data.soil.soil_name,\r\n\t\t\tdescription: data.soil.description,\r\n\t\t\tmix: data.soil.mix\r\n\t\t}\r\n\t\taSoils.push(oNewSoil);\r\n\t\toSoilsModel.updateBindings(false);\r\n\r\n\t\t// busy dialog was started before ajax call\r\n\t\tUtil.stopBusyDialog();\r\n\t\tthis.applyToFragment('dialogEditSoil', (oDialog: Dialog) => oDialog.close(),);\r\n\t}\r\n\r\n}"],"mappings":";;;;QAeOA,YAAY;EAUnB;AACA;AACA;EAFA,MAGqBC,UAAU,GAASC,aAAa;IAa5CC,WAAW,wBAACC,eAAyB,EAAEC,gBAA8B,EAAE;MAC9E;MACA,IAAI,CAACC,YAAY,GAAGN,YAAY,CAACO,WAAW,EAAE;MAC9C,IAAI,CAACH,eAAe,GAAGA,eAAe;MACtC,IAAI,CAACC,gBAAgB,GAAGA,gBAAgB;IACzC,CAAC;IAEDG,iBAAiB,8BAACC,GAAW,EAAEC,eAAwB,EAAE;MACxD;MACA,IAAIC,IAAgB,GAAG,IAA6B;MAEpD,IAAIC,YAAY,GAAGF,eAAe,CAACG,OAAO,EAAE;MAC5C,IAAIC,MAAM,GAAWJ,eAAe,CAACK,SAAS,EAAE;MAChD,IAAIC,SAAS,GAAG,IAAIC,cAAc,CAAC,CAAC,CAAC,CAAC;MACtCD,SAAS,CAACE,aAAa,CAAC,uBAAuB,CAAC;MAChD,IAAIC,KAAK,GAAG,IAAIC,IAAI,CAAC;QACpBC,WAAW,EAAE;MACd,CAAC,CAAC;MACFL,SAAS,CAACM,UAAU,CAACH,KAAK,CAAC;MAE3B,IAAII,eAAe,GAASZ,IAAI,CAACa,IAAI,CAAC,aAAa,CAAC,CAACC,KAAK,CAAChB,GAAG,CAAC;MAC/DU,KAAK,CAACG,UAAU,CAACC,eAAe,CAAC;MAEjC,IAAI,CAAC,CAACT,MAAM,CAACY,WAAW,EAAE;QACzB,IAAIC,qBAAqB,GAAShB,IAAI,CAACa,IAAI,CAAC,kBAAkB,CAAC,CAACC,KAAK,CAAChB,GAAG,CAAC;QAC1EU,KAAK,CAACG,UAAU,CAACK,qBAAqB,CAAC;MACxC;MAEA,IAAI,CAAC,CAACb,MAAM,CAACc,GAAG,EAAE;QACjB,IAAIC,aAAa,GAASlB,IAAI,CAACa,IAAI,CAAC,UAAU,CAAC,CAACC,KAAK,CAAChB,GAAG,CAAC;QAC1DU,KAAK,CAACG,UAAU,CAACO,aAAa,CAAC;MAChC;MAEA,IAAI,CAAC,CAACf,MAAM,CAACgB,IAAI,EAAE;QAClB,IAAIC,cAAc,GAAGpB,IAAI,CAACa,IAAI,CAAC,WAAW,CAAC,CAACC,KAAK,CAAChB,GAAG,CAAC;QACtDU,KAAK,CAACG,UAAU,CAAOS,cAAc,CAAC;MACvC;;MAEA;MACA;MACA;MACA;MACA,IAAIC,KAAK,GAAIb,KAAK,CAACc,UAAU,EAAE,CAACC,MAAM,GAAG,CAAC,GAAI,CAAC;MAC/C,IAAK,EAAE,GAAGF,KAAK,GAAI,CAAC,EAAE;QACrB,IAAIG,oBAAoB,GAAG,UAAU;MACtC,CAAC,MAAM;QACNA,oBAAoB,GAAG,IAAI,IAAI,EAAE,GAAGH,KAAK,CAAC,GAAG,IAAI,IAAI,EAAE,GAAGA,KAAK,CAAC;MACjE;MACA,IAAII,cAAc,GAAGD,oBAAoB,GAAG,SAAS;MAErD,IAAIE,kBAAkB,GAAiB1B,IAAI,CAACa,IAAI,CAAC,oBAAoB,CAAC,CAACC,KAAK,CAAChB,GAAG,CAAC;;MAEjF;MACA,IAAI6B,gBAAgB,GAAa3B,IAAI,CAACa,IAAI,CAAC,qBAAqB,CAAC,CAACC,KAAK,CAAChB,GAAG,CAAC;MAC5E6B,gBAAgB,CAACC,eAAe,CAAC,OAAO,EACvC;QACCC,IAAI,EAAE,SAAS,GAAG5B,YAAY,GAAG,SAAS;QAC1C6B,QAAQ,EAAEJ,kBAAkB;QAC5BK,iBAAiB,EAAE;MACpB,CAAC,CAAC;;MAEH;MACAJ,gBAAgB,CAACK,aAAa,CAAC,IAAIC,QAAQ,CAAC;QAAEC,IAAI,EAAET;MAAe,CAAC,CAAC,CAAC;MACtEjB,KAAK,CAACG,UAAU,CAACgB,gBAAgB,CAAC;MAElC,OAAOtB,SAAS;IACjB,CAAC;IAED8B,oBAAoB,iCAACC,cAAsB,EAAEC,YAAuB,EAAEC,aAAqB,EAAE;MAC5F;;MAEA,IAAIC,OAAO,GAAGF,YAAY,CAACG,WAAW,CAAC,oBAAoB,GAAGF,aAAa,CAACG,EAAE,CAAC;;MAE/E;MACA,IAAIC,MAAM,GAAGH,OAAO,CAACI,OAAO,CAACP,cAAc,CAAC;MAC5C,IAAIM,MAAM,GAAG,CAAC,EAAE;QACfE,YAAY,CAACC,IAAI,CAAC,wDAAwD,CAAC;QAC3E;MACD;MACAN,OAAO,CAACO,MAAM,CAACJ,MAAM,EAAE,CAAC,CAAC;MACzBL,YAAY,CAACU,OAAO,EAAE;IACvB,CAAC;IAEOC,mBAAmB,+BAACC,cAA6B,EAAsB;MAC9E;MACA,IAAI,CAACA,cAAc,CAACC,QAAQ,CAACnC,WAAW,EACvC,OAAO,IAAI;MAEZ,MAAMoC,qBAAqB,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACL,cAAc,CAAClC,WAAW,CAAC,CAAC;MACpF;MACA,IAAIoC,qBAAqB,CAACI,MAAM,KAAK,GAAG,EAAE;QACzCJ,qBAAqB,CAACI,MAAM,GAAGC,SAAS;MACzC;MACA,IAAIL,qBAAqB,CAACM,iBAAiB,KAAK,GAAG,EAAE;QACpDN,qBAAqB,CAACM,iBAAiB,GAAGD,SAAS;MACpD;MACA,IAAI,CAACL,qBAAqB,CAACO,QAAQ,IAAIP,qBAAqB,CAACO,QAAQ,CAACnC,MAAM,KAAK,CAAC,EAAE;QACnF4B,qBAAqB,CAACO,QAAQ,GAAGF,SAAS;MAC3C;MACA,IAAI,CAACL,qBAAqB,CAACQ,iBAAiB,IAAIR,qBAAqB,CAACQ,iBAAiB,KAAK,CAAC,EAAE;QAC9FR,qBAAqB,CAACQ,iBAAiB,GAAGH,SAAS;MACpD;MACA,OAAsBL,qBAAqB;IAC5C,CAAC;IAEOS,WAAW,uBAACX,cAA6B,EAAEY,KAAW,EAAc;MAC3E;MACA,IAAI,CAACZ,cAAc,CAACC,QAAQ,CAACjC,GAAG,EAC/B,OAAO,IAAI;MACZ,MAAM6C,aAAa,GAAUV,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACL,cAAc,CAAChC,GAAG,CAAC,CAAC;MAE3E,IAAkB4C,KAAK,CAAChD,IAAI,CAAC,cAAc,CAAC,CAAEkD,WAAW,EAAE,EAAE;QAC5DD,aAAa,CAACE,UAAU,GAAG,WAAW;MACvC,CAAC,MAAM,IAAkBH,KAAK,CAAChD,IAAI,CAAC,cAAc,CAAC,CAAEkD,WAAW,EAAE,EAAE;QACnED,aAAa,CAACE,UAAU,GAAG,MAAM;MAClC,CAAC,MAAM,IAAkBH,KAAK,CAAChD,IAAI,CAAC,cAAc,CAAC,CAAEkD,WAAW,EAAE,EAAE;QACnED,aAAa,CAACE,UAAU,GAAG,MAAM;MAClC,CAAC,MAAM,IAAkBH,KAAK,CAAChD,IAAI,CAAC,cAAc,CAAC,CAAEkD,WAAW,EAAE,EAAE;QACnED,aAAa,CAACE,UAAU,GAAG,WAAW;MACvC,CAAC,MAAM;QACN,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;MAC3C;MAEA,IAAkBJ,KAAK,CAAChD,IAAI,CAAC,aAAa,CAAC,CAAEkD,WAAW,EAAE,EAAE;QAC3DD,aAAa,CAACI,SAAS,GAAG,QAAQ;MACnC,CAAC,MAAM,IAAkBL,KAAK,CAAChD,IAAI,CAAC,aAAa,CAAC,CAAEkD,WAAW,EAAE,EAAE;QAClED,aAAa,CAACI,SAAS,GAAG,OAAO;MAClC,CAAC,MAAM,IAAkBL,KAAK,CAAChD,IAAI,CAAC,aAAa,CAAC,CAAEkD,WAAW,EAAE,EAAE;QAClED,aAAa,CAACI,SAAS,GAAG,MAAM;MACjC,CAAC,MAAM,IAAkBL,KAAK,CAAChD,IAAI,CAAC,aAAa,CAAC,CAAEkD,WAAW,EAAE,EAAE;QAClED,aAAa,CAACI,SAAS,GAAG,WAAW;MACtC,CAAC,MAAM;QACN,MAAM,IAAID,KAAK,CAAC,wBAAwB,CAAC;MAC1C;MAEA,OAAOH,aAAa;IACrB,CAAC;IAEOK,YAAY,wBAAClB,cAA6B,EAAEY,KAAW,EAAe;MAC7E;MACA;MACA;MACA;MACA,IAAI,CAACZ,cAAc,CAACC,QAAQ,CAAC/B,IAAI,EAChC,OAAO,IAAI;MAEZ,MAAMiD,cAAc,GAAWhB,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACL,cAAc,CAAC9B,IAAI,CAAC,CAAC;MAC9E,IAAI,CAACiD,cAAc,CAACC,WAAW,IAAID,cAAc,CAACC,WAAW,CAAC9C,MAAM,IAAI,CAAC,EAAE;QAC1E6C,cAAc,CAACC,WAAW,GAAGb,SAAS;MACvC;MACA,OAAOY,cAAc;IACtB,CAAC;IAEME,UAAU,sBAACT,KAAW,EAAE;MAC9B;MACA;MACA,IAAIU,IAAI,GAAGC,IAAI,CAACC,aAAa,CAAC,cAAc,CAAC;MAC7C,IAAIC,WAAW,GAAcb,KAAK,CAACc,QAAQ,CAAC,OAAO,CAAC;MACpD,IAAI,CAACD,WAAW,EAAE;QACjBA,WAAW,GAAG,IAAIE,SAAS,CAACL,IAAI,CAAC;QACjCV,KAAK,CAACgB,QAAQ,CAACH,WAAW,EAAE,OAAO,CAAC;MACrC,CAAC,MAAM;QACNA,WAAW,CAACI,QAAQ,CAACP,IAAI,CAAC;MAC3B;IACD,CAAC;IAGOQ,SAAS,qBAAClB,KAAW,EAAExB,YAAuB,EAAE2C,mBAAyC,EAAE;MAClG;MACA;;MAEA;MACA,MAAMC,OAAO,GAAWpB,KAAK,CAAChD,IAAI,CAAC,aAAa,CAAC;MACjD,MAAMqE,cAAc,GAAcD,OAAO,CAACN,QAAQ,CAAC,gBAAgB,CAAC;MACpE,MAAMQ,aAAa,GAAkBD,cAAc,CAACE,OAAO,EAAE;;MAE7D;MACAZ,IAAI,CAACa,iBAAiB,CAACF,aAAa,CAACG,IAAI,CAAC;MAC1C,IAAI,CAACC,wBAAwB,CAACP,mBAAmB,EAAEG,aAAa,CAACG,IAAI,CAAC;;MAEtE;MACA,MAAME,aAAa,GAAkBhB,IAAI,CAACiB,eAAe,CAACN,aAAa,CAAC;MAExE,IAAIK,aAAa,CAACtC,QAAQ,CAAC/B,IAAI,KAAK,CAACqE,aAAa,CAACrE,IAAI,IAAI,CAACqE,aAAa,CAACrE,IAAI,CAACsB,EAAE,CAAC,EAAC;QAClFG,YAAY,CAACC,IAAI,CAAC,2BAA2B,CAAC;QAC9C;MACD;;MAEA;MACA,MAAM6C,eAAe,GAA8B,IAAI,CAAC1C,mBAAmB,CAACwC,aAAa,CAAC;MAC1F,MAAMG,OAAO,GAAsB,IAAI,CAAC/B,WAAW,CAAC4B,aAAa,EAAE3B,KAAK,CAAC;MACzE,MAAM+B,QAAQ,GAAuB,IAAI,CAACzB,YAAY,CAACqB,aAAa,EAAE3B,KAAK,CAAC;MAE5E,MAAMgC,SAA6B,GAAG;QACrC;QACAP,IAAI,EAAEE,aAAa,CAACF,IAAI;QACxBQ,WAAW,EAAqBN,aAAa,CAACM,WAAW,IAAIN,aAAa,CAACM,WAAW,CAACvE,MAAM,GAAG,CAAC,GAAGiE,aAAa,CAACM,WAAW,GAAGtC,SAAU;QAC1IzC,WAAW,EAAE2E,eAAe;QAC5BzE,GAAG,EAAE0E,OAAO;QACZxE,IAAI,EAAEyE,QAAQ;QACdG,QAAQ,EAAEP,aAAa,CAACO,QAAQ;QAChCC,MAAM,EAAY;MACnB,CAAC;;MAED;MACA;MACAhB,mBAAmB,CAACiB,IAAI,CAACJ,SAAS,CAAC;MACnCxD,YAAY,CAAC6D,cAAc,CAAC,KAAK,CAAC;MAClCjB,OAAO,CAACkB,KAAK,EAAE;IAChB,CAAC;IAEOZ,wBAAwB,oCAACP,mBAAyC,EAAEoB,KAAa,EAAEjG,MAAe,EAAE;MAC3G;MACA;MACA,MAAMkG,KAAK,GAAGrB,mBAAmB,CAACsB,IAAI,CAAC,UAAUC,OAAO,EAAE;QACzD,OAAQA,OAAO,CAACjB,IAAI,KAAKc,KAAK,IAAIG,OAAO,KAAKpG,MAAM;MACrD,CAAC,CAAC;MACF,IAAI,CAAC,CAACkG,KAAK,EAAE;QACZzD,YAAY,CAACC,IAAI,CAAC,+BAA+B,CAAC;QAClD,MAAM,IAAIoB,KAAK,CAAC,+BAA+B,CAAC;MACjD;IACD,CAAC;IAEOuC,UAAU,sBAAC3C,KAAW,EAAExB,YAAuB,EAAE2C,mBAA6B,EAAQ;MAC7F;MACA;MACA;;MAEA;MACA,MAAMC,OAAO,GAAWpB,KAAK,CAAChD,IAAI,CAAC,aAAa,CAAC;MACjD,MAAM4F,eAAe,GAAcxB,OAAO,CAACN,QAAQ,CAAC,gBAAgB,CAAC;MACrE,MAAM1B,cAAc,GAAkBwD,eAAe,CAACrB,OAAO,EAAE;;MAE/D;MACA,IAAI,CAACnC,cAAc,CAACyD,QAAQ,EAAE;QAC7B9D,YAAY,CAACC,IAAI,CAAC,uCAAuC,CAAC;QAC1D;MACD;MACA,MAAM8D,SAAiB,GAAG1D,cAAc,CAACyD,QAAQ;;MAEjD;MACAlC,IAAI,CAACa,iBAAiB,CAACpC,cAAc,CAACqC,IAAI,CAAC;MAC3C,IAAI,CAACC,wBAAwB,CAACP,mBAAmB,EAAE/B,cAAc,CAACqC,IAAI,EAAEqB,SAAS,CAAC;MAElF,IAAIA,SAAS,CAACZ,QAAQ,KAAK9C,cAAc,CAAC8C,QAAQ,EAAE;QACnDnD,YAAY,CAACC,IAAI,CAAC,6BAA6B,CAAC;QAChD,MAAM,IAAIoB,KAAK,CAAC,6BAA6B,CAAC;MAC/C;MAEA,IAAIhB,cAAc,CAACC,QAAQ,CAAC/B,IAAI,KAAK,CAAC8B,cAAc,CAAC9B,IAAI,IAAI,CAAC8B,cAAc,CAAC9B,IAAI,CAACsB,EAAE,CAAC,EAAC;QACrFG,YAAY,CAACC,IAAI,CAAC,2BAA2B,CAAC;QAC9C;MACD;;MAEA;MACA,MAAM+D,kBAAkB,GAAkB,IAAI,CAAC5D,mBAAmB,CAACC,cAAc,CAAC;MAClF,MAAM4D,UAAU,GAAU,IAAI,CAACjD,WAAW,CAACX,cAAc,EAAEY,KAAK,CAAC;MACjE,MAAMiD,WAAW,GAAW,IAAI,CAAC3C,YAAY,CAAClB,cAAc,EAAEY,KAAK,CAAC;;MAEpE;MACA8C,SAAS,CAACrB,IAAI,GAAWrC,cAAc,CAACqC,IAAI;MAC5CqB,SAAS,CAACb,WAAW,GAAsB7C,cAAc,CAAC6C,WAAW,IAAI7C,cAAc,CAAC6C,WAAW,CAACvE,MAAM,GAAG,CAAC,GAAG0B,cAAc,CAAC6C,WAAW,GAAGtC,SAAU;MAExJ,MAAMuD,iBAAiB,GAAGH,kBAAkB,GAAkBA,kBAAkB,CAACnE,EAAE,GAAEe,SAAS;MAC9FmD,SAAS,CAAC5F,WAAW,GAAkB6F,kBAAkB;MACzD,IAAID,SAAS,CAAC5F,WAAW,EACxB4F,SAAS,CAAC5F,WAAW,CAAC0B,EAAE,GAAkBsE,iBAAiB;MAE5DJ,SAAS,CAAC1F,GAAG,GAAoB4F,UAAU;MAC3CF,SAAS,CAACxF,IAAI,GAAqB2F,WAAW;;MAE9C;MACAzE,YAAY,CAAC6D,cAAc,CAAC,KAAK,CAAC,CAAC,CAAE;MACrC7D,YAAY,CAACU,OAAO,CAAC,IAAI,CAAC;MAC1BkC,OAAO,CAACkB,KAAK,EAAE;IAChB,CAAC;IAEDa,cAAc,2BAACnD,KAAW,EAAEvB,aAAqB,EAAE;MAClD,IAAI2C,OAAO,GAAGpB,KAAK,CAAChD,IAAI,CAAC,aAAa,CAAC;MACvC,IAAIqE,cAAc,GAAcD,OAAO,CAACN,QAAQ,CAAC,gBAAgB,CAAC;MAClE,IAAIsC,QAAQ,GAAkB/B,cAAc,CAACE,OAAO,EAAE;MACtD,IAAI8B,KAAK,GAAGD,QAAQ,CAACE,IAAI,CAAC,CAAC;;MAE3B,IAAI9E,YAAY,GAAcwB,KAAK,CAACc,QAAQ,CAAC,QAAQ,CAAC;MACtD,IAAIyC,gBAAgB,GAAG,oBAAoB,GAAG9E,aAAa,CAACG,EAAE,GAAG,GAAG;MACpE,IAAIuC,mBAAmB,GAAG3C,YAAY,CAACG,WAAW,CAAC4E,gBAAgB,CAAC;MAEpE,IAAIF,KAAK,KAAK,MAAM,EAAE;QACrB,IAAI,CAACV,UAAU,CAAC3C,KAAK,EAAExB,YAAY,EAAE2C,mBAAmB,CAAC;MAC1D,CAAC,MAAM;QAAG;QACT,IAAI,CAACD,SAAS,CAAClB,KAAK,EAAExB,YAAY,EAAE2C,mBAAmB,CAAC;MACzD;IACD,CAAC;IAEMqC,SAAS,uBAACjF,cAAsB,EAAEyB,KAAW,EAAEyD,eAAoB,EAAE;MAC3E,IAAI,CAAC7H,eAAe,CAAC,aAAa,EAAE,IAAI,CAAC8H,sBAAsB,CAACC,IAAI,CAAC,IAAI,EAAEpF,cAAc,EAAEyB,KAAK,EAAEyD,eAAe,CAAC,CAAC;IACpH,CAAC;IAEOC,sBAAsB,kCAACnF,cAAsB,EAAEyB,KAAW,EAAEyD,eAAoB,EAAErC,OAAe,EAAE;MAC1G;MACA,IAAI,CAACX,UAAU,CAACT,KAAK,CAAC;;MAEtB;MACAoB,OAAO,CAACwC,QAAQ,CAAC,cAAc,GAAGrF,cAAc,CAACkD,IAAI,GAAG,GAAG,CAAC;MACnDzB,KAAK,CAAChD,IAAI,CAAC,oBAAoB,CAAC,CAAE6G,OAAO,CAAC,QAAQ,CAAC;;MAE5D;MACA;MACA;MACA;MACA,IAAIC,UAAyB,GAAG,IAAI,CAACC,gBAAgB,CAACN,eAAe,CAAC;MACtEK,UAAU,CAACR,IAAI,GAAG,MAAM;MACxBQ,UAAU,CAACrC,IAAI,GAAGlD,cAAc,CAACkD,IAAI;MACrCqC,UAAU,CAAC7B,WAAW,GAAG1D,cAAc,CAAC0D,WAAW;;MAEnD;MACA6B,UAAU,CAACjB,QAAQ,GAAGtE,cAAc;MACpC,IAAIA,cAAc,CAACnB,GAAG,IAAImB,cAAc,CAACnB,GAAG,CAACwB,EAAE,EAAE;QAChDkF,UAAU,CAAC1G,GAAG,CAAEwB,EAAE,GAAGL,cAAc,CAACnB,GAAG,CAACwB,EAAE;MAC3C;MACA,IAAIL,cAAc,CAACrB,WAAW,IAAIqB,cAAc,CAACrB,WAAW,CAAC0B,EAAE,EAAE;QAChEkF,UAAU,CAAC5G,WAAW,CAAE0B,EAAE,GAAGL,cAAc,CAACrB,WAAW,CAAC0B,EAAE;MAC3D;;MAEA;MACA,IAAI,CAAC,CAACL,cAAc,CAACrB,WAAW,EAAE;QACjC;QACA4G,UAAU,CAACzE,QAAQ,CAACnC,WAAW,GAAG,IAAI;QACtC4G,UAAU,CAAC5G,WAAW,CAAE2C,QAAQ,GAAGtB,cAAc,CAACrB,WAAW,CAAC2C,QAAQ;QACtEiE,UAAU,CAAC5G,WAAW,CAAEwC,MAAM,GAAGnB,cAAc,CAACrB,WAAW,CAACwC,MAAM;QAClEoE,UAAU,CAAC5G,WAAW,CAAE4C,iBAAiB,GAAGvB,cAAc,CAACrB,WAAW,CAAC4C,iBAAiB;QACxFgE,UAAU,CAAC5G,WAAW,CAAE0C,iBAAiB,GAAGrB,cAAc,CAACrB,WAAW,CAAC0C,iBAAiB;MACzF,CAAC,MAAM;QACNkE,UAAU,CAACzE,QAAQ,CAACnC,WAAW,GAAG,KAAK;MACxC;;MAEA;MACA,IAAI,CAAC,CAACqB,cAAc,CAACnB,GAAG,EAAE;QACzB0G,UAAU,CAACzE,QAAQ,CAACjC,GAAG,GAAG,IAAI;QAC9B0G,UAAU,CAAC1G,GAAG,CAAE4G,cAAc,GAAGzF,cAAc,CAACnB,GAAG,CAAC4G,cAAc;QAClEF,UAAU,CAAC1G,GAAG,CAAE6G,QAAQ,GAAG1F,cAAc,CAACnB,GAAG,CAAC6G,QAAQ;QACtD;QACA,QAAQ1F,cAAc,CAACnB,GAAG,CAAC+C,UAAU;UACpC,KAAK,WAAW;YACDH,KAAK,CAAChD,IAAI,CAAC,cAAc,CAAC,CAAEkH,WAAW,CAAC,IAAI,CAAC;YAAE;UAC9D,KAAK,MAAM;YACIlE,KAAK,CAAChD,IAAI,CAAC,cAAc,CAAC,CAAEkH,WAAW,CAAC,IAAI,CAAC;YAAE;UAC9D,KAAK,MAAM;YACIlE,KAAK,CAAChD,IAAI,CAAC,cAAc,CAAC,CAAEkH,WAAW,CAAC,IAAI,CAAC;YAAE;UAC9D,KAAK,WAAW;YACDlE,KAAK,CAAChD,IAAI,CAAC,cAAc,CAAC,CAAEkH,WAAW,CAAC,IAAI,CAAC;YAAE;QAAM;QAGrE,QAAQ3F,cAAc,CAACnB,GAAG,CAACiD,SAAS;UACnC,KAAK,QAAQ;YACEL,KAAK,CAAChD,IAAI,CAAC,aAAa,CAAC,CAAEkH,WAAW,CAAC,IAAI,CAAC;YAAE;UAC7D,KAAK,OAAO;YACGlE,KAAK,CAAChD,IAAI,CAAC,aAAa,CAAC,CAAEkH,WAAW,CAAC,IAAI,CAAC;YAAE;UAC7D,KAAK,MAAM;YACIlE,KAAK,CAAChD,IAAI,CAAC,aAAa,CAAC,CAAEkH,WAAW,CAAC,IAAI,CAAC;YAAE;UAC7D,KAAK,WAAW;YACDlE,KAAK,CAAChD,IAAI,CAAC,aAAa,CAAC,CAAEkH,WAAW,CAAC,IAAI,CAAC;YAAE;QAAM;MAErE,CAAC,MAAM;QACNJ,UAAU,CAACzE,QAAQ,CAACjC,GAAG,GAAG,KAAK;MAChC;;MAEA;MACA,IAAI,CAAC,CAACmB,cAAc,CAACjB,IAAI,EAAE;QAC1BwG,UAAU,CAACzE,QAAQ,CAAC/B,IAAI,GAAG,IAAI;QAC/BwG,UAAU,CAACxG,IAAI,GAAGqD,IAAI,CAACiB,eAAe,CAACrD,cAAc,CAACjB,IAAI,CAAC;MAC5D,CAAC,MAAM;QACNwG,UAAU,CAACzE,QAAQ,CAAC/B,IAAI,GAAG,KAAK;MACjC;;MAEA;MACA,IAAI8D,OAAO,CAACN,QAAQ,CAAC,gBAAgB,CAAC,EAAE;QACvCM,OAAO,CAACN,QAAQ,CAAC,gBAAgB,CAAC,CAACqD,OAAO,EAAE;MAC7C;MACA,IAAIC,MAAM,GAAG,IAAIrD,SAAS,CAAC+C,UAAU,CAAC;MACtC1C,OAAO,CAACJ,QAAQ,CAACoD,MAAM,EAAE,gBAAgB,CAAC;MAC1ChD,OAAO,CAACiD,IAAI,EAAE;IACf,CAAC;IAEMN,gBAAgB,4BAACN,eAAoB,EAAiB;MAC5D;MACA;MACA;MACA,MAAMa,IAAI,GAAU;QACnB,gBAAgB,EAAE,CAAC;QACnB,UAAU,EAAE,IAAI,CAACzI,gBAAgB,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC,CAAC0I;MAC/D,CAAC;MAED,MAAMC,YAAY,GAAkB;QACnC,QAAQ,EAAE,CAAC;QACX,mBAAmB,EAAE,CAAC;QACtB,UAAU,EAAE,EAAE;QACd,mBAAmB,EAAE;MACtB,CAAC;MAED,MAAMC,KAAkB,GAAG;QAC1B7F,EAAE,EAAEe,SAAS;QACb+E,SAAS,EAAE/E,SAAS;QACpBgF,GAAG,EAAEhF,SAAS;QACda,WAAW,EAAEb;MACd,CAAC;MAED,MAAMiF,sBAAsB,GAA0B;QACrD;QACA1H,WAAW,EAAE,KAAK;QAClBE,GAAG,EAAE,KAAK;QACVE,IAAI,EAAE;MACP,CAAC;MAED,MAAM8B,cAAc,GAAkB;QACrC8C,QAAQ,EAAEuB,eAAe;QACzBhC,IAAI,EAAEd,IAAI,CAACkE,QAAQ,EAAE;QACrB5C,WAAW,EAAE,EAAE;QACf7E,GAAG,EAAEkH,IAAI;QACTpH,WAAW,EAAEsH,YAAY;QACzBlH,IAAI,EAAEmH,KAAK;QACXpF,QAAQ,EAAEuF,sBAAsB;QAChCtB,IAAI,EAAE,KAAK,CAAG;MACf,CAAC;;MACD,OAAOlE,cAAc;IACtB,CAAC;IAED0F,kBAAkB,+BAAC9E,KAAW,EAAEyE,KAAa,EAAQ;MACpD,IAAIM,WAAW,GAAiB;QAC/BC,YAAY,EAAE,gBAAgB,GAAGP,KAAK,CAAC7F,EAAE,GAAG,GAAG;QAC/CqG,QAAQ,EAAE,QAAQ;QAClBC,GAAG,EAAE,KAAK;QACVtG,EAAE,EAAE6F,KAAK,CAAC7F,EAAE;QACZ8F,SAAS,EAAED,KAAK,CAACC,SAAS;QAC1BlE,WAAW,EAAEiE,KAAK,CAACjE,WAAW;QAC9BmE,GAAG,EAAEF,KAAK,CAACE;MACZ,CAAC;MACD,IAAIQ,gBAAgB,GAAG,IAAIpE,SAAS,CAACgE,WAAW,CAAC;MAEjD,IAAI,CAACnJ,eAAe,CAAC,gBAAgB,EAAGwF,OAAe,IAAK;QAC3DA,OAAO,CAACJ,QAAQ,CAACmE,gBAAgB,EAAE,YAAY,CAAC;QAChD/D,OAAO,CAACgE,WAAW,CAAC;UACnBpH,IAAI,EAAE,GAAG;UACTqH,KAAK,EAAE;QACR,CAAC,CAAC;QACFrF,KAAK,CAACsF,YAAY,CAAClE,OAAO,CAAC;QAC3BA,OAAO,CAACiD,IAAI,EAAE;MACf,CAAC,CAAC;IACH,CAAC;IAEDkB,iBAAiB,8BAACvF,KAAW,EAAQ;MACpC,IAAIwF,QAAQ,GAAiB;QAC5BR,YAAY,EAAE,UAAU;QACxBC,QAAQ,EAAE,QAAQ;QAClBC,GAAG,EAAE,IAAI;QACTtG,EAAE,EAAEe,SAAS;QACb+E,SAAS,EAAE,EAAE;QACblE,WAAW,EAAE,EAAE;QACfmE,GAAG,EAAE;MACN,CAAC;MACD,IAAIc,aAAa,GAAG,IAAI1E,SAAS,CAACyE,QAAQ,CAAC;MAE3C,IAAI,CAAC5J,eAAe,CAAC,gBAAgB,EAAGwF,OAAe,IAAK;QAC3DA,OAAO,CAACJ,QAAQ,CAACyE,aAAa,EAAE,YAAY,CAAC;QAC7CrE,OAAO,CAACgE,WAAW,CAAC;UACnBpH,IAAI,EAAE,GAAG;UACTqH,KAAK,EAAE;QACR,CAAC,CAAC;QACFrF,KAAK,CAACsF,YAAY,CAAClE,OAAO,CAAC;QAC3BA,OAAO,CAACiD,IAAI,EAAE;MACf,CAAC,CAAC;IACH,CAAC;IAEOqB,YAAY,wBAAC3D,QAAsB,EAAElB,WAAsB,EAAQ;MAE1E;MACA,IAAI8E,MAAM,GAAa9E,WAAW,CAACU,OAAO,EAAE,CAACqE,eAAe;MAC5D,IAAIC,mBAAmB,GAAGF,MAAM,CAAClD,IAAI,CAAC,UAAUC,OAAO,EAAE;QACxD,OAAOA,OAAO,CAACgC,SAAS,KAAK3C,QAAQ,CAAC2C,SAAS;MAChD,CAAC,CAAC;MACF,IAAImB,mBAAmB,EAAE;QACxB9G,YAAY,CAACC,IAAI,CAAC,2BAA2B,CAAC;QAC9C;MACD;MAEA,IAAI8G,OAAO,GAAG;QACblH,EAAE,EAAEe,SAAS;QACb+E,SAAS,EAAE3C,QAAQ,CAAC2C,SAAS;QAC7BlE,WAAW,EAAEuB,QAAQ,CAACvB,WAAW;QACjCmE,GAAG,EAAE5C,QAAQ,CAAC4C;MACf,CAAC;MAEDhE,IAAI,CAACoF,eAAe,CAAC,oBAAoB,CAAC;MAC1CC,CAAC,CAACC,IAAI,CAAC;QACNC,GAAG,EAAEvF,IAAI,CAACC,aAAa,CAAC,cAAc,CAAC;QACvCuF,IAAI,EAAE,MAAM;QACZC,WAAW,EAAE,kBAAkB;QAC/BC,IAAI,EAAE9G,IAAI,CAACE,SAAS,CAACqG,OAAO,CAAC;QAC7BQ,OAAO,EAAE;MACV,CAAC,CAAC,CACAC,IAAI,CAAC,IAAI,CAACC,eAAe,CAAC7C,IAAI,CAAC,IAAI,EAAE9C,WAAW,CAAC,CAAC,CAClD4F,IAAI,CAAC,IAAI,CAAC3K,YAAY,CAAC4K,qBAAqB,CAAC/C,IAAI,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC;IAC5E,CAAC;IAEOgD,mBAAmB,+BAACC,SAAuB,EAAE/F,WAAsB,EAAE;MAC5E,IAAIgG,WAAW,GAAG;QACjBjI,EAAE,EAAEgI,SAAS,CAAChI,EAAE;QAChB8F,SAAS,EAAEkC,SAAS,CAAClC,SAAS;QAC9BlE,WAAW,EAAEoG,SAAS,CAACpG,WAAW;QAClCmE,GAAG,EAAEiC,SAAS,CAACjC;MAChB,CAAC;MAEDhE,IAAI,CAACoF,eAAe,CAAC,wBAAwB,CAAC;MAC9CC,CAAC,CAACC,IAAI,CAAC;QACNC,GAAG,EAAEvF,IAAI,CAACC,aAAa,CAAC,cAAc,CAAC;QACvCuF,IAAI,EAAE,KAAK;QACXC,WAAW,EAAE,kBAAkB;QAC/BC,IAAI,EAAE9G,IAAI,CAACE,SAAS,CAACoH,WAAW,CAAC;QACjCP,OAAO,EAAE;MACV,CAAC,CAAC,CACAC,IAAI,CAAC,IAAI,CAACO,sBAAsB,CAACnD,IAAI,CAAC,IAAI,EAAE9C,WAAW,CAAC,CAAC,CACzD4F,IAAI,CAAC,IAAI,CAAC3K,YAAY,CAAC4K,qBAAqB,CAAC/C,IAAI,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC;IAC5E,CAAC;IAEMoD,kBAAkB,+BAAC9D,WAAyB,EAAEpC,WAAsB,EAAE;MAC5E;MACA,IAAIoC,WAAW,CAACyB,SAAS,KAAK,EAAE,IAAIzB,WAAW,CAAC0B,GAAG,KAAK,EAAE,EAAE;QAC3D5F,YAAY,CAACC,IAAI,CAAC,0CAA0C,CAAC;QAC7D;MACD;;MAEA;MACA,IAAIiE,WAAW,CAACiC,GAAG,EAAE;QACpB,IAAIjC,WAAW,CAACrE,EAAE,EAAE;UACnBG,YAAY,CAACC,IAAI,CAAC,sBAAsB,CAAC;UACzC;QACD;QACA;QACA,IAAI,CAAC0G,YAAY,CAACzC,WAAW,EAAEpC,WAAW,CAAC;;QAE3C;MACD,CAAC,MAAM;QACN;QACA,IAAI,CAAC8F,mBAAmB,CAAC1D,WAAW,EAAEpC,WAAW,CAAC;MACnD;IACD,CAAC;IAEOiG,sBAAsB,kCAACjG,WAAsB,EAAEwF,IAA8B,EAAE;MACtF;MACA,IAAI,CAACA,IAAI,CAAC/I,IAAI,CAACsB,EAAE,EAAE;QAClBG,YAAY,CAACC,IAAI,CAAC,uCAAuC,CAAC;QAC1D;MACD;MAEA,IAAI2G,MAAM,GAAa9E,WAAW,CAACU,OAAO,EAAE,CAACqE,eAAe;MAC5D,IAAIoB,KAAK,GAAGrB,MAAM,CAAClD,IAAI,CAAC,UAAUC,OAAO,EAAE;QAC1C,OAAOA,OAAO,CAAC9D,EAAE,KAAKyH,IAAI,CAAC/I,IAAI,CAACsB,EAAE;MACnC,CAAC,CAAC;MACF,IAAI,CAACoI,KAAK,EAAE;QACXjI,YAAY,CAACC,IAAI,CAAC,iCAAiC,CAAC;QACpD;MACD;MAEAgI,KAAK,CAACtC,SAAS,GAAG2B,IAAI,CAAC/I,IAAI,CAACoH,SAAS;MACrCsC,KAAK,CAACxG,WAAW,GAAG6F,IAAI,CAAC/I,IAAI,CAACkD,WAAW;MACzCwG,KAAK,CAACrC,GAAG,GAAG0B,IAAI,CAAC/I,IAAI,CAACqH,GAAG;MAEzB9D,WAAW,CAACwB,cAAc,CAAC,KAAK,CAAC;;MAEjC;MACA1B,IAAI,CAACsG,cAAc,EAAE;MACrB,IAAI,CAACrL,eAAe,CAAC,gBAAgB,EAAGwF,OAAe,IAAKA,OAAO,CAACkB,KAAK,EAAE,CAAE;;MAE7E;IACD,CAAC;IAEOkE,eAAe,2BAAC3F,WAAsB,EAAEwF,IAA8B,EAAE;MAC/E;MACA,IAAI,CAACA,IAAI,CAAC/I,IAAI,CAACsB,EAAE,EAAE;QAClBG,YAAY,CAACC,IAAI,CAAC,uCAAuC,CAAC;QAC1D;MACD;MAEA,IAAI2G,MAAM,GAAG9E,WAAW,CAACU,OAAO,EAAE,CAACqE,eAAe;MAClD,IAAI7D,QAAQ,GAAG;QACdnD,EAAE,EAAEyH,IAAI,CAAC/I,IAAI,CAACsB,EAAE;QAChB8F,SAAS,EAAE2B,IAAI,CAAC/I,IAAI,CAACoH,SAAS;QAC9BlE,WAAW,EAAE6F,IAAI,CAAC/I,IAAI,CAACkD,WAAW;QAClCmE,GAAG,EAAE0B,IAAI,CAAC/I,IAAI,CAACqH;MAChB,CAAC;MACDgB,MAAM,CAACvD,IAAI,CAACL,QAAQ,CAAC;MACrBlB,WAAW,CAACwB,cAAc,CAAC,KAAK,CAAC;;MAEjC;MACA1B,IAAI,CAACsG,cAAc,EAAE;MACrB,IAAI,CAACrL,eAAe,CAAC,gBAAgB,EAAGwF,OAAe,IAAKA,OAAO,CAACkB,KAAK,EAAE,CAAE;IAC9E;EAAC;EAjmBmB7G,UAAU,CAMhBM,WAAW,YAAXA,WAAW,CAACH,eAA0B,EAAEC,gBAA+B,EAAc;IAClG,IAAI,CAACJ,UAAU,CAACyL,SAAS,IAAItL,eAAe,IAAIC,gBAAgB,EAAE;MACjEJ,UAAU,CAACyL,SAAS,GAAG,IAAIzL,UAAU,CAACG,eAAe,EAAEC,gBAAgB,CAAC;IACzE;IACA,OAAOJ,UAAU,CAACyL,SAAS;EAC5B,CAAC;EAAA,OAXmBzL,UAAU;AAAA"}