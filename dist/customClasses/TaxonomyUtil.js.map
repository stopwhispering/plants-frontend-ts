{"version":3,"file":"TaxonomyUtil.js","names":["MessageUtil","ModelsHelper","TaxonomyUtil","ManagedObject","findSpecies","sSpecies","bIncludeKew","bSearchForGenus","oModelKewSearchResults","length","MessageToast","show","Util","startBusyDialog","dPayload","$","ajax","url","getServiceUrl","type","contentType","data","JSON","stringify","context","done","_onReceivingSpeciesDatabase","bind","fail","getInstance","onReceiveErrorGeneric","sStatus","oResponse","stopBusyDialog","setData","addMessageFromBackend","message","chooseSpecies","oSelectedItem","sCustomName","oDialog","oPlant","oDetailController","oView","oSelectedRowData","getBindingContext","getObject","fqId","startsWith","nameInclAddition","name","trim","source","id","undefined","sServiceUrl","_onReceivingAdditionalSpeciesInformationSaved","close","oPlantsModel","getModel","oModelTaxon","botanical_name","taxon_id","taxon_data","updateBindings","sPathTaxon","getProperty","setProperty","oTaxonDataClone","getOwnerComponent","TaxaDict","getClonedObject","bindElement","path","model","findSpeciesTableSelectedOrDataUpdated","oText","oInputAdditionalName","setText","setEditable","setValue","sNewValueAdditionalName","is_custom","species","getValue","findSpeciesAdditionalNameLiveChange","byId","getSelectedItem","findSpeciesBeforeOpen","sCurrentBotanicalName","refetchGbifImages","gbif_id","oTaxonModel","oCurrentPlant","_onReceivingRefetchdeGbifImages","current_taxon","occurrenceImages","_instance"],"sources":["../../src/customClasses/TaxonomyUtil.ts"],"sourcesContent":["import JSONModel from \"sap/ui/model/json/JSONModel\"\r\nimport MessageToast from \"sap/m/MessageToast\"\r\nimport * as Util from \"plants/ui/customClasses/Util\";\r\nimport MessageUtil from \"plants/ui/customClasses/MessageUtil\"\r\nimport ModelsHelper from \"plants/ui/model/ModelsHelper\"\r\nimport ManagedObject from \"sap/ui/base/ManagedObject\"\r\nimport Dialog from \"sap/m/Dialog\";\r\nimport Input from \"sap/m/Input\";\r\nimport GenericTag from \"sap/m/GenericTag\";\r\nimport Detail from \"../controller/Detail.controller\";\r\nimport View from \"sap/ui/core/mvc/View\";\r\nimport Component from \"../Component\";\r\nimport Table from \"sap/m/Table\";\r\nimport ColumnListItem from \"sap/m/ColumnListItem\";\r\nimport { PPlant } from \"../definitions/PlantsFromBackend\";\r\nimport { PKewSearchResultEntry, PResultsFetchTaxonImages, PResultsSaveTaxonRequest, PResultsTaxonInfoRequest, PTaxon } from \"../definitions/TaxonFromBackend\";\r\nimport { ResponseStatus } from \"../definitions/SharedLocal\";\r\nimport { LTaxonData } from \"../definitions/TaxonLocal\";\r\n\r\n/**\r\n * @namespace plants.ui.customClasses\r\n */\r\nexport default class TaxonomyUtil extends ManagedObject {\r\n\tprivate static _instance: TaxonomyUtil;\r\n\r\n\tpublic static getInstance(): TaxonomyUtil {\r\n\t\tif (!TaxonomyUtil._instance) {\r\n\t\t\tTaxonomyUtil._instance = new TaxonomyUtil();\r\n\t\t}\r\n\t\treturn TaxonomyUtil._instance;\r\n\t}\r\n\r\n\tpublic findSpecies(sSpecies: string, bIncludeKew: boolean, bSearchForGenus: boolean, oModelKewSearchResults: JSONModel){\r\n\t\tif (sSpecies.length === 0) {\r\n\t\t\tMessageToast.show('Enter species first.');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tUtil.startBusyDialog('Retrieving results from species search...');\r\n\t\tvar dPayload = {\r\n\t\t\t// 'args': {\r\n\t\t\t'species': sSpecies,\r\n\t\t\t'includeKew': bIncludeKew,\r\n\t\t\t'searchForGenus': bSearchForGenus\r\n\t\t\t// }\r\n\t\t};\r\n\t\t$.ajax({\r\n\t\t\turl: Util.getServiceUrl('search_external_biodiversity'),\r\n\t\t\ttype: 'POST',\r\n\t\t\tcontentType: \"application/json\",\r\n\t\t\tdata: JSON.stringify(dPayload),\r\n\t\t\tcontext: this,\r\n\t\t\t// async: true\r\n\t\t})\r\n\t\t\t.done(this._onReceivingSpeciesDatabase.bind(this, oModelKewSearchResults))\r\n\t\t\t.fail(ModelsHelper.getInstance().onReceiveErrorGeneric.bind(this, 'search_external_biodiversity (POST)'));\r\n\t}\r\n\r\n\tprivate _onReceivingSpeciesDatabase(oModelKewSearchResults: JSONModel, data: PResultsTaxonInfoRequest, sStatus: ResponseStatus, oResponse: JQueryXHR) {\r\n\t\tUtil.stopBusyDialog();\r\n\t\toModelKewSearchResults.setData(data);\r\n\t\tMessageUtil.getInstance().addMessageFromBackend(data.message);\r\n\t}\r\n\r\n\tpublic chooseSpecies(oSelectedItem: ColumnListItem, sCustomName: string,\r\n\t\toDialog: Dialog, oPlant: PPlant, oDetailController: Detail, oView: View){\r\n\t\t\r\n\t\tif (!oSelectedItem) {\r\n\t\t\tMessageToast.show('Select item from results list first.');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst oSelectedRowData = <PKewSearchResultEntry>oSelectedItem.getBindingContext('kewSearchResults')!.getObject()\r\n\t\tconst fqId = oSelectedRowData.fqId;\r\n\r\n\t\t// optionally, use has set a custom additional name. send full name then.\r\n\t\tif (sCustomName.startsWith('Error')) {\r\n\t\t\tvar nameInclAddition = '';\r\n\t\t} else if (sCustomName === oSelectedRowData.name.trim()) {\r\n\t\t\tnameInclAddition = '';\r\n\t\t} else {\r\n\t\t\tnameInclAddition = sCustomName;\r\n\t\t}\r\n\r\n\t\tvar dPayload = {\r\n\t\t\t'fqId': fqId,\r\n\t\t\t'hasCustomName': (nameInclAddition.length === 0) ? false : true,\r\n\t\t\t'nameInclAddition': nameInclAddition,\r\n\t\t\t'source': oSelectedRowData.source,\r\n\t\t\t// in py interface, null is resolved to empty str in py, undefined is resolved to None\r\n\t\t\t'id': oSelectedRowData.id ? oSelectedRowData.id : undefined,\r\n\t\t\t'plant_id': oPlant.id\r\n\t\t};\r\n\r\n\t\tUtil.startBusyDialog('Retrieving additional species information and saving them to Plants database...');\r\n\t\tconst sServiceUrl = Util.getServiceUrl('download_taxon_details');\r\n\r\n\t\t$.ajax({\r\n\t\t\turl: sServiceUrl,\r\n\t\t\tcontext: this,\r\n\t\t\tcontentType: \"application/json\",\r\n\t\t\ttype: 'POST',\r\n\t\t\tdata: JSON.stringify(dPayload)\r\n\t\t})\r\n\t\t\t.done(this._onReceivingAdditionalSpeciesInformationSaved.bind(this, oDialog, oPlant, oDetailController, oView))\r\n\t\t\t.fail(ModelsHelper.getInstance().onReceiveErrorGeneric.bind(this, 'download_taxon_details (POST)'));\r\n\t}\r\n\r\n\tprivate _onReceivingAdditionalSpeciesInformationSaved(oDialog: Dialog, oPlant: PPlant, oDetailController: Detail, oView: View, data: PResultsSaveTaxonRequest, sStatus: ResponseStatus, oResponse: JQueryXHR) {\r\n\t\t//taxon was saved in database and the taxon id is returned here\r\n\t\t//we assign that taxon id to the plant; this is persisted only upon saving\r\n\t\t//the whole new taxon dictionary is added to the taxon model and it's clone\r\n\t\tUtil.stopBusyDialog();\r\n\t\tMessageToast.show(data.message.message);\r\n\t\tMessageUtil.getInstance().addMessageFromBackend(data.message);\r\n\t\toDialog.close();\r\n\r\n\t\tconst oPlantsModel = <JSONModel> oView.getModel('plants');\r\n\t\tconst oModelTaxon = <JSONModel> oView.getModel('taxon');\r\n\r\n\t\toPlant.botanical_name = data.botanical_name;\r\n\t\toPlant.taxon_id = data.taxon_data.id;\r\n\t\toPlantsModel.updateBindings(false);\r\n\r\n\t\t// add taxon to model if new \r\n\t\tvar sPathTaxon = '/TaxaDict/' + data.taxon_data.id;\r\n\t\tif (oModelTaxon.getProperty(sPathTaxon) === undefined) {\r\n\t\t\toModelTaxon.setProperty(sPathTaxon, data.taxon_data);\r\n\t\t}\r\n\r\n\t\t//add taxon to model's clone if new\r\n\t\tvar oTaxonDataClone = <LTaxonData> (<Component> oDetailController.getOwnerComponent()).oTaxonDataClone;\r\n\t\tif (oTaxonDataClone.TaxaDict[data.taxon_data.id] === undefined) {\r\n\t\t\toTaxonDataClone.TaxaDict[data.taxon_data.id] = Util.getClonedObject(data.taxon_data);\r\n\t\t}\r\n\r\n\t\t// bind received taxon to view (otherwise applied upon switching plant in detail view)\r\n\t\toView.bindElement({\r\n\t\t\tpath: \"/TaxaDict/\" + data.taxon_data.id,\r\n\t\t\tmodel: \"taxon\"\r\n\t\t});\r\n\t}\r\n\r\n\tpublic findSpeciesTableSelectedOrDataUpdated(oText: GenericTag, oInputAdditionalName: Input, oSelectedItem?: ColumnListItem) {\r\n\t\tif (oSelectedItem === undefined || oSelectedItem === null) {\r\n\t\t\toText.setText('');\r\n\t\t\toInputAdditionalName.setEditable(false);\r\n\t\t\toInputAdditionalName.setValue('');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar oSelectedRowData = <PKewSearchResultEntry>oSelectedItem.getBindingContext('kewSearchResults')!.getObject()\r\n\r\n\t\t//reset additional name\r\n\t\tvar sNewValueAdditionalName;\r\n\t\tif (oSelectedRowData.is_custom) {\r\n\t\t\t// if selected botanical name is a custom one, adding a(nother) suffix is forbidden\r\n\t\t\toInputAdditionalName.setValue('');\r\n\t\t\toInputAdditionalName.setEditable(false);\r\n\t\t\tsNewValueAdditionalName = '';\r\n\r\n\t\t} else if (oSelectedRowData.species === null || oSelectedRowData.species === undefined) {\r\n\t\t\t// if a genus is selected, not a (sub)species, we add a 'spec.' as a default\r\n\t\t\toInputAdditionalName.setValue('spec.');\r\n\t\t\tsNewValueAdditionalName = 'spec.';\r\n\t\t\toInputAdditionalName.setEditable(true);\r\n\r\n\t\t} else {\r\n\t\t\t//default case: selected a species with an official taxon name\r\n\t\t\tif (sNewValueAdditionalName === 'spec.') {\r\n\t\t\t\toInputAdditionalName.setValue('');\r\n\t\t\t\tsNewValueAdditionalName = '';\r\n\t\t\t} else {\r\n\t\t\t\tsNewValueAdditionalName = oInputAdditionalName.getValue();\r\n\t\t\t}\r\n\t\t\toInputAdditionalName.setEditable(true);\r\n\t\t}\r\n\r\n\t\toText.setText(oSelectedRowData.name + ' ' + sNewValueAdditionalName);\r\n\t}\r\n\r\n\tfindSpeciesAdditionalNameLiveChange(oView: View) {\r\n\t\tconst oSelectedItem = <ColumnListItem> (<Table> oView.byId('tableFindSpeciesResults')).getSelectedItem();\r\n\t\tconst oSelectedRowData = <PKewSearchResultEntry>oSelectedItem.getBindingContext('kewSearchResults')!.getObject()\r\n\t\tconst oText = <GenericTag> oView.byId('textFindSpeciesAdditionalName');\r\n\t\tconst sNewValueAdditionalName = (<Input>oView.byId('inputFindSpeciesAdditionalName')).getValue();\r\n\r\n\t\tif (!oSelectedItem) {\r\n\t\t\toText.setText('Error: Select item from table first.');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\toText.setText(oSelectedRowData.name + ' ' + sNewValueAdditionalName);\r\n\t}\r\n\r\n\tfindSpeciesBeforeOpen(oView: View) { \r\n\t\t//default plant search name is the current one (if available)\r\n\t\tif (oView.getBindingContext('taxon') === undefined || oView.getBindingContext('taxon')!.getObject() === undefined) {\r\n\t\t\tvar sCurrentBotanicalName = '';\r\n\t\t} else {\r\n\t\t\tsCurrentBotanicalName = (<PTaxon> oView.getBindingContext('taxon')!.getObject()).name;\r\n\t\t}\r\n\t\t(<Input> oView.byId('inputFindSpecies')).setValue(sCurrentBotanicalName);\r\n\r\n\t\t// clear additional name\r\n\t\t(<Input> oView.byId('inputFindSpeciesAdditionalName')).setValue('');\r\n\t}\r\n\r\n\r\n\trefetchGbifImages(gbif_id: int, oTaxonModel: JSONModel, oCurrentPlant: PPlant) {\r\n\t\tUtil.startBusyDialog('Refetching Taxon Images from GBIF for GBIF ID ...' + gbif_id);\r\n\t\tvar dPayload = {\r\n\t\t\t'gbif_id': gbif_id\r\n\t\t};\r\n\t\t$.ajax({\r\n\t\t\turl: Util.getServiceUrl('fetch_taxon_images'),\r\n\t\t\ttype: 'POST',\r\n\t\t\tcontentType: \"application/json\",\r\n\t\t\tdata: JSON.stringify(dPayload),\r\n\t\t\tcontext: this,\r\n\t\t\t// async: true\r\n\t\t})\r\n\t\t\t.done(this._onReceivingRefetchdeGbifImages.bind(this, oTaxonModel, oCurrentPlant))\r\n\t\t\t.fail(ModelsHelper.getInstance().onReceiveErrorGeneric.bind(this, 'search_external_bifetch_taxon_imagesodiversity (POST)'));\r\n\t}\r\n\r\n\tprivate _onReceivingRefetchdeGbifImages(oTaxonModel: JSONModel, oCurrentPlant: PPlant, data: PResultsFetchTaxonImages, sStatus: ResponseStatus, oResponse: JQueryXHR) {\r\n\t\t// display newly fetched taxon images from gbif occurrences\r\n\t\t// (no need for caring about the serialized clone model as occurrences are read-only)\r\n\t\tUtil.stopBusyDialog();\r\n\r\n\t\tvar current_taxon = oTaxonModel.getProperty(\"/TaxaDict/\" + oCurrentPlant.taxon_id)\r\n\t\tcurrent_taxon.occurrenceImages = data.occurrenceImages;\r\n\t\toTaxonModel.updateBindings(false);\r\n\t\tMessageUtil.getInstance().addMessageFromBackend(data.message);\r\n\t}\r\n}"],"mappings":"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"}