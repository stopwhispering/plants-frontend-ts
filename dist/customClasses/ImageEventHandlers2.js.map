{"version":3,"file":"ImageEventHandlers2.js","names":["onInputImageNewPlantNameSubmit","evt","sModel","getSource","data","getId","sPlantName","getParameter","getBindingContext","getObject","plant_name","trim","isPlantNameInPlantsModel","MessageToast","show","oBindingContextImage","getParent","sPlantId","getPlantId","imageEventHandlers","_addPlantNameToImage","setValue","onIconPressTagDetailsPlant","oPlant","getPlantById","_currentPlantId","id","resetImagesCurrentPlant","aCurrentPlantNames","plants","dictPlant","key","text","plant_id","Util","isDictKeyInArray","push","console","log","getPath","getModel","updateBindings","onPressImagePlantToken","modelName","iIndexPlant","navigation","navToPlantDetails","call","handleErrorMessageBox","onIconPressAssignImageToEvent","oSource","sPathCurrentImage","applyToFragment","o","bindElement","path","model","openBy","onAssignEventToImage","sPathSelectedEvent","getBindingContextPath","oImage","oImageAssignment","filename","oEvent","getView","getProperty","images","length","found","find","image","_getFragment","close","onIconPressUnassignImageFromEvent","sPath","sEventImages","substring","lastIndexOf","aEventImages","getOwnerComponent","iPosition","indexOf","splice","refresh"],"sources":["../../src/customClasses/ImageEventHandlers2.ts"],"sourcesContent":["import MessageToast from \"sap/m/MessageToast\"\r\nimport * as Util from \"plants/ui/customClasses/Util\";\r\n\r\n\r\n/**\r\n * @namespace plants.ui.customClasses\r\n */\r\n\r\nexport function onInputImageNewPlantNameSubmit(evt: Event) {\r\n\t// on enter add new plant to image in model\r\n\t// called by either submitting input or selecting from suggestion table (both with different model)\r\n\tvar sModel = evt.getSource().data('sModel');\r\n\r\n\tif (evt.getId() === 'suggestionItemSelected') {\r\n\t\t// var sPlantName = evt.getParameter('selectedRow').getCells()[0].getText();\r\n\t\tvar sPlantName = evt.getParameter('selectedRow').getBindingContext('plants').getObject().plant_name;\r\n\t} else {\r\n\t\tsPlantName = evt.getParameter('value').trim();  //submit disabled\r\n\t}\r\n\r\n\t//check if plant exists and is not empty\r\n\tif (!this.isPlantNameInPlantsModel(sPlantName) || !(sPlantName)) {\r\n\t\tMessageToast.show('Plant Name does not exist.');\r\n\t\treturn;\r\n\t}\r\n\r\n\t//add to model\r\n\tvar oBindingContextImage = evt.getSource().getParent().getBindingContext(sModel);\r\n\tvar sPlantId = this.getPlantId(sPlantName);\r\n\tthis.imageEventHandlers._addPlantNameToImage(sPlantName, sPlantId, oBindingContextImage);\r\n\r\n\tevt.getSource().setValue('');\r\n}\r\n\r\nexport function onIconPressTagDetailsPlant(evt: Event){\r\n\t//adds current plant in details view to the image in untagged view\r\n\tvar oPlant = this.getPlantById(this._currentPlantId);\r\n\tvar oBindingContextImage = evt.getSource().getParent().getBindingContext(\"untaggedImages\");\r\n\tthis.imageEventHandlers._addPlantNameToImage(oPlant.plant_name, oPlant.id, oBindingContextImage);\r\n\t// have details view images updated\r\n\tthis.resetImagesCurrentPlant(this._currentPlantId);\r\n}\r\n\r\nexport function _addPlantNameToImage(sPlantName, sPlantId, oBindingContextImage) {\r\n\t//add a plant (by name) to image in images model\r\n\tvar aCurrentPlantNames = oBindingContextImage.getObject().plants;\r\n\tvar dictPlant = {\r\n\t\tkey: sPlantName,\r\n\t\ttext: sPlantName,\r\n\t\tplant_id: sPlantId\r\n\t};\r\n\r\n\t// check if already in list\r\n\tif (Util.isDictKeyInArray(dictPlant, aCurrentPlantNames)) {\r\n\t\tMessageToast.show('Plant Name already assigned. ');\r\n\t\treturn false;\r\n\t} else {\r\n\t\taCurrentPlantNames.push(dictPlant);\r\n\t\tconsole.log('Assigned plant to image: ' + sPlantName + ' (' + oBindingContextImage.getPath() + ')');\r\n\t\toBindingContextImage.getModel().updateBindings();\r\n\t\treturn true;\r\n\t}\r\n}\r\n\r\nexport function onPressImagePlantToken(modelName, evt) {\r\n\t//model is either images or untaggedImages\r\n\tvar iIndexPlant = evt.getSource().getBindingContext(modelName).getObject().plant_id;\r\n\r\n\tif (iIndexPlant >= 0) {\r\n\t\t//navigate to plant in layout's current column (i.e. middle column)\r\n\t\tthis.navigation.navToPlantDetails.call(this, iIndexPlant);\r\n\t} else {\r\n\t\tthis.handleErrorMessageBox(\"Can't find selected Plant\");\r\n\t}\r\n}\r\n\r\nexport function onIconPressAssignImageToEvent(evt: Event) {\r\n\t// triggered by icon beside image; assign that image to one of the plant's events\r\n\t// generate dialog from fragment if not already instantiated\r\n\tvar oSource = evt.getSource();\r\n\tvar sPathCurrentImage = evt.getSource().getBindingContext(\"images\").getPath();\r\n\tthis.applyToFragment('dialogAssignEventToImage', (o) => {\r\n\t\t// bind the selected image's path in images model to the popover dialog\r\n\t\to.bindElement({\r\n\t\t\tpath: sPathCurrentImage,\r\n\t\t\tmodel: \"images\"\r\n\t\t});\r\n\t\to.openBy(oSource);\r\n\t});\r\n}\r\n\r\nexport function onAssignEventToImage(evt: Event) {\r\n\t// triggered upon selection of event in event selection dialog for an image\r\n\t// get selected event\r\n\tvar sPathSelectedEvent = evt.getSource().getBindingContextPath('events');\r\n\r\n\t// get image\r\n\tvar oImage = evt.getSource().getBindingContext('images').getObject();\r\n\tvar oImageAssignment = {\r\n\t\tfilename: oImage.filename\r\n\t};\r\n\r\n\t// check if already assigned\r\n\tvar oEvent = this.getView().getModel('events').getProperty(sPathSelectedEvent);\r\n\tif (!!oEvent.images && oEvent.images.length > 0) {\r\n\t\tvar found = oEvent.images.find(function (image) {\r\n\t\t\treturn image.filename === oImageAssignment.filename;\r\n\t\t});\r\n\t\tif (found) {\r\n\t\t\tMessageToast.show('Event already assigned to image.');\r\n\t\t\tthis._getFragment('dialogAssignEventToImage').close();\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\t// assign\r\n\tif (!oEvent.images) {\r\n\t\toEvent.images = [oImageAssignment];\r\n\t} else {\r\n\t\toEvent.images.push(oImageAssignment);\r\n\t}\r\n\r\n\tMessageToast.show('Assigned.');\r\n\tthis.getView().getModel('events').updateBindings();\r\n\tthis._getFragment('dialogAssignEventToImage').close();\r\n\r\n}\r\n\r\nexport function onIconPressUnassignImageFromEvent(evt: Event) {\r\n\t// triggered by unassign control next to an image in the events list\r\n\tvar sPath = evt.getParameter('listItem').getBindingContextPath('events');\r\n\tvar oImage = evt.getSource().getModel('events').getProperty(sPath);\r\n\r\n\tvar sEventImages = sPath.substring(0, sPath.lastIndexOf('/'));\r\n\tvar aEventImages = this.getOwnerComponent().getModel('events').getProperty(sEventImages);\r\n\r\n\tvar iPosition = aEventImages.indexOf(oImage);\r\n\tif (iPosition === -1) {\r\n\t\tMessageToast.show(\"Can't find image.\");\r\n\t\treturn;\r\n\t}\r\n\r\n\taEventImages.splice(iPosition, 1);\r\n\tthis.getOwnerComponent().getModel('events').refresh();  //same like updateBindings()\t\t\t\r\n}\r\n"],"mappings":"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"}