{"version":3,"file":"BaseController.js","names":["sap","ui","define","Controller","MessageBox","MessageUtil","Util","MessageToast","ModelsHelper","Fragment","Navigation","extend","onInit","evt","_getFragment","sId","getView","byId","applyToFragment","fn","fnInit","undefined","sIdToFragment","settingsDialogFilter","dialogNewPlant","dialogSort","popoverPopupImage","dialogEvent","dialogAddTag","dialogRenamePlant","dialogClonePlant","dialogCreateDescendant","dialogAssignEventToImage","dialogFindSpecies","menuDeleteTag","dialogEditTrait","dialogUploadPhotos","MessagePopover","menuShellBarMenu","dialogNewPropertyName","dialogAddProperties","dialogEditPropertyValue","dialogLeafletMap","dialogCancellation","dialogEditSoil","oView","load","name","id","getId","controller","then","oFragment","addDependent","getModifiedPlants","oModelPlants","getModel","dDataPlants","getData","aModifiedPlants","aOriginalPlants","getOwnerComponent","oPlantsDataClone","i","length","dictsAreEqual","oModified","getClonedObject","parent_plant","parent_plant_pollen","push","getModifiedTaxa","oModelTaxon","dDataTaxon","TaxaDict","dDataTaxonOriginal","oTaxonDataClone","keys","Object","aModifiedTaxonList","forEach","key","_getModifiedEvents","oModelEvents","dDataEvents","PlantsEventsDict","dDataEventsClone","oEventsDataClone","dModifiedEventsDict","keys_clone","objectsEqualManually","_getPropertiesSansTaxa","dProperties_","dProperties","oTaxon","j","categories","oCategory","k","properties","oProperty","foundTaxonProperty","property_values","find","element","iIndex","indexOf","splice","foundPlantProperty","getModifiedPropertiesPlants","oModelProperties","dDataProperties","propertiesPlants","dDataPropertiesOriginal","oPropertiesDataClone","dModifiedPropertiesDict","getModifiedPropertiesTaxa","dpropertiesTaxon","propertiesTaxon","dPropertiesTaxonOriginal","oPropertiesTaxonDataClone","getModifiedImages","oImages","imagesRegistry","oImagesClone","imagesRegistryClone","aModifiedImages","path","savePlantsAndImages","startBusyDialog","savingPlants","savingImages","savingTaxa","savingEvents","savingProperties","aModifiedTaxa","dModifiedEvents","dModifiedPropertiesPlants","dModifiedPropertiesTaxa","show","stopBusyDialog","dPayloadPlants","$","ajax","url","getServiceUrl","type","contentType","data","JSON","stringify","context","done","_onAjaxSuccessSave","fail","getInstance","onReceiveErrorGeneric","bind","dPayloadImages","aModifiedTaxaSave","map","m","occurrenceImages","dPayloadTaxa","dPayloadEvents","dPayloadProperties","savingPropertiesTaxa","dPayloadPropertiesTaxa","saveNewPlant","oPlant","plant_name","oMsg","sStatus","oReturnData","oPlantSaved","plants","aPlants","getProperty","iPlantsCount","updateBindings","oPlantClone","PlantsCollection","navToPlantDetails","call","always","isPlantNameInPlantsModel","sPlantName","ele","getPlantId","getPlantById","plantIdRaw","plantId","parseInt","getPlantByName","plantName","plant","getRouter","core","UIComponent","getRouterFor","onAjaxSimpleSuccess","message","addMessageFromBackend","resource","propertiesPlantsWithoutTaxa","oModelPropertiesTaxa","dDataPropertiesTaxa","updateTableHeaderPlantsCount","iPlants","getBinding","getLength","sTitle","setText","handleErrorMessageBox","sText","bCompact","closest","error","styleClass","onIconPressDeleteImage","sModel","getSource","oPath","getParent","getBindingContext","oImage","confirm","icon","Icon","WARNING","title","stretch","onClose","_confirmDeleteImage","actions","onCancelDialog","dialogId","o","close","sAction","oPayload","filename","textStats","jqXHR","_onAjaxDeletedImagesSuccess","onReceiveSuccessGeneric","selectedImages","callbackFn","aDataImages","ImagesCollection","aDataUntagged","image","iPosImages","refresh","onInputImageNewKeywordSubmit","sKeyword","getParameter","trim","setValue","aKeywords","getObject","keywords","keyword","onTokenizerTokenChange","sKey","sType","model_name","aListDicts","findIndex","addPhotosToRegistry","aPhotos","photo","handleTypeMissmatch","oEvent","aFileTypes","x","getFileType","sSupportedFileTypes","join","resetImagesCurrentPlant","plant_id","entries","filter","t","p","setProperty","getSuggestionItem","rootKey","suggestions","suggestion","s"],"sources":["../../src/customClasses/BaseController.ts"],"sourcesContent":["//implements a set of functions that are reused by its subclasses (e.g. back button behaviour)\r\n//abstract controller -> no \".controller.\" in the filename --> prevents usage in views, too\r\n\r\nsap.ui.define([\r\n\t\"sap/ui/core/mvc/Controller\",\r\n\t\"sap/m/MessageBox\",\r\n\t\"plants/ui/customClasses/MessageUtil\",\r\n\t\"plants/ui/customClasses/Util\",\r\n\t\"sap/m/MessageToast\",\r\n\t\"plants/ui/model/ModelsHelper\",\r\n\t\"sap/ui/core/Fragment\",\r\n\t\"plants/ui/customClasses/Navigation\",\r\n], function(Controller, MessageBox, MessageUtil, Util, MessageToast, ModelsHelper, Fragment, Navigation) {\r\n\t\"use strict\";\r\n\t\r\n\treturn Controller.extend(\"plants.ui.customClasses.BaseController\", {\r\n\t\t\r\n\t\tModelsHelper: ModelsHelper,\r\n\t\t\r\n\t\tonInit: function(evt){\r\n\t\t\t// don't use (seems to be overwritten)\r\n\t\t},\r\n\r\n\t\t_getFragment: function(sId){\r\n\t\t\t//returns already-instantiated fragment by sId\r\n\t\t\t//if not sure wether instantiated, use applyToFragment\r\n\t\t\treturn this.getView().byId(sId);\r\n\t\t},\r\n\r\n\t\tapplyToFragment: function(sId, fn, fnInit=undefined){\r\n\t\t\t//create fragment singleton and apply supplied function to it (e.g. open, close)\r\n\t\t\t// if stuff needs to be done only once, supply fnInit where first usage happens\r\n\t\t\t\r\n\t\t\t//example usages:\r\n\t\t\t// this.applyToFragment('dialogAddTag', _onOpenAddTagDialog.bind(this));\r\n\t\t\t// this.applyToFragment('dialogFindSpecies', (o)=>o.close());\r\n\t\t\t// this.applyToFragment('dialogFindSpecies', (o)=>{doA; doB; doC;}, fnMyInit);\r\n\t\t\t\r\n\t\t\t//fragment id to fragment file path\r\n\t\t\tvar sIdToFragment = {\r\n\t\t\t\tsettingsDialogFilter: 'plants.ui.view.fragments.master.MasterFilter',\r\n\t\t\t\tdialogNewPlant: 'plants.ui.view.fragments.master.MasterNewPlant',\t\r\n\t\t\t\tdialogSort: \"plants.ui.view.fragments.master.MasterSort\",\r\n\t\t\t\tpopoverPopupImage: \"plants.ui.view.fragments.master.MasterImagePopover\",\r\n\t\t\t\tdialogEvent: \"plants.ui.view.fragments.AddEvent\",\r\n\t\t\t\tdialogAddTag: \"plants.ui.view.fragments.DetailTagAdd\",\r\n\t\t\t\tdialogRenamePlant: \"plants.ui.view.fragments.DetailRename\",\r\n\t\t\t\tdialogClonePlant: \"plants.ui.view.fragments.DetailClone\",\r\n\t\t\t\tdialogCreateDescendant: \"plants.ui.view.fragments.DetailCreateDescendant\",\r\n\t\t\t\tdialogAssignEventToImage: \"plants.ui.view.fragments.DetailAssignEvent\",\r\n\t\t\t\tdialogFindSpecies: \"plants.ui.view.fragments.FindSpecies\",\r\n\t\t\t\tmenuDeleteTag: \"plants.ui.view.fragments.DetailTagDelete\",\r\n\t\t\t\tdialogEditTrait: \"plants.ui.view.fragments.DetailTraitEdit\",\r\n\t\t\t\tdialogUploadPhotos: \"plants.ui.view.fragments.UploadPhotos\",\r\n\t\t\t\tMessagePopover: \"plants.ui.view.fragments.MessagePopover\",\r\n\t\t\t\tmenuShellBarMenu: \"plants.ui.view.fragments.ShellBarMenu\",\r\n\t\t\t\tdialogNewPropertyName: \"plants.ui.view.fragments.properties.NewPropertyName\",\r\n\t\t\t\tdialogAddProperties: \"plants.ui.view.fragments.properties.AvailableProperties\",\r\n\t\t\t\tdialogEditPropertyValue: \"plants.ui.view.fragments.properties.EditPropertyValue\",\r\n\t\t\t\tdialogLeafletMap: \"plants.ui.view.fragments.taxonomy.DetailTaxonomyMap\",\r\n\t\t\t\tdialogCancellation: \"plants.ui.view.fragments.DetailCancellation\",\r\n\t\t\t\tdialogEditSoil: \"plants.ui.view.fragments.events.EditSoil\",\r\n\t\t\t}\r\n\r\n\t\t\tvar oView = this.getView();\r\n\t\t\tif(oView.byId(sId)){\r\n\t\t\t\tfn(oView.byId(sId));\r\n\t\t\t} else {\r\n\t\t\t\tFragment.load({\r\n\t\t\t\t\tname: sIdToFragment[sId],\r\n\t\t\t\t\tid: oView.getId(),\r\n\t\t\t\t\tcontroller: this\r\n\t\t\t\t}).then(function(oFragment){\r\n\t\t\t\t\toView.addDependent(oFragment);\r\n\t\t\t\t\tif(fnInit){\r\n\t\t\t\t\t\tfnInit(oFragment);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfn(oFragment);\t\r\n\t\t\t\t});\r\n\t\t\t}\t\t\t\r\n\t\t},\t\t\r\n\t\t\r\n\t\tgetModifiedPlants: function(){\r\n\t\t\t// get plants model and identify modified items\r\n\t\t\tvar oModelPlants = this.getView().getModel('plants');\r\n\t\t\tvar dDataPlants = oModelPlants.getData();\r\n\t\t\tvar aModifiedPlants = [];\r\n\t\t\tvar aOriginalPlants = this.getOwnerComponent().oPlantsDataClone['PlantsCollection'];\r\n\t\t\tfor (var i = 0; i < dDataPlants['PlantsCollection'].length; i++) { \r\n\t\t\t\tif (!Util.dictsAreEqual(dDataPlants['PlantsCollection'][i], \r\n\t\t\t\t\t\t\t\t\t\taOriginalPlants[i])){\r\n\t\t\t\t\t// we need to check if our modified object differs only in structure of parent plant but still\r\n\t\t\t\t\t// has same parent pland id or none\r\n\t\t\t\t\tvar oModified = Util.getClonedObject(dDataPlants['PlantsCollection'][i]);\r\n\t\t\t\t\tif (!!oModified.parent_plant && !oModified.parent_plant.id){\r\n\t\t\t\t\t\toModified.parent_plant = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!!oModified.parent_plant_pollen && !oModified.parent_plant_pollen.id){\r\n\t\t\t\t\t\toModified.parent_plant_pollen = null;\r\n\t\t\t\t\t}\t\t\t\t\t\r\n\t\t\t\t\tif  (!Util.dictsAreEqual(oModified, aOriginalPlants[i])){\r\n\r\n\t\t\t\t\t\taModifiedPlants.push(dDataPlants['PlantsCollection'][i]);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn aModifiedPlants;\r\n\t\t},\r\n\t\t\r\n\t\tgetModifiedTaxa: function(){\r\n\t\t\t// get taxon model and identify modified items\r\n\t\t\t// difference to plants and images: data is stored with key in a dictionary, not in an array\r\n\t\t\t// we identify the modified sub-dictionaries and return a list of these\r\n\t\t\t// note: we don't check whether there's a new taxon as after adding a taxon, it is added\r\n\t\t\t//\t     to the clone as well\r\n\t\t\t// we don't check for deleted taxa as there's no function for doing this in frontend\r\n\t\t\tvar oModelTaxon = this.getView().getModel('taxon');\r\n\t\t\tvar dDataTaxon = oModelTaxon.getData().TaxaDict;\r\n\t\t\tvar dDataTaxonOriginal = this.getOwnerComponent().oTaxonDataClone['TaxaDict'];\r\n\t\t\t\r\n\t\t\t//get taxon id's, i.e. keys of the taxa dict\r\n\t\t\tvar keys = Object.keys(dDataTaxonOriginal);\r\n\t\t\t\r\n\t\t\t//for each key, check if it's value is different from the clone\r\n\t\t\tvar aModifiedTaxonList = [];\r\n\t\t\t\r\n\t\t\tkeys.forEach(function(key){\r\n\t\t\t\tif (!Util.dictsAreEqual(dDataTaxonOriginal[key], \r\n\t\t\t\t\t\t\t\t\t\tdDataTaxon[key])){\r\n\t\t\t\t\taModifiedTaxonList.push(dDataTaxon[key]);\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t}, this);\r\n\r\n\t\t\treturn aModifiedTaxonList;\r\n\t\t},\t\t\r\n\t\t\r\n\t\t_getModifiedEvents: function(){\r\n\t\t\t// returns a dict with events for those plants where at least one event has been modified, added, or deleted\r\n\t\t\tvar oModelEvents = this.getView().getModel('events');\r\n\t\t\tvar dDataEvents = oModelEvents.getData().PlantsEventsDict;\r\n\t\t\tvar dDataEventsClone = this.getOwnerComponent().oEventsDataClone;\r\n\t\t\t\r\n\t\t\t//get plants for which we have events in the original dataset\r\n\t\t\t//then, for each of them, check whether events have been changed\r\n\t\t\tvar dModifiedEventsDict = {};\r\n\t\t\tvar keys_clone = Object.keys(dDataEventsClone);\r\n\t\t\tkeys_clone.forEach(function(key){\r\n\t\t\t\t// if(!Util.arraysAreEqual(dDataEventsClone[key],\r\n\t\t\t\tif(!Util.objectsEqualManually(dDataEventsClone[key],\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tdDataEvents[key])){\r\n\t\t\t\t\t\t\t\t\t\t\tdModifiedEventsDict[key] = dDataEvents[key];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t}, this);\r\n\t\t\t\r\n\t\t\t//added plants\r\n\t\t\tvar keys = Object.keys(dDataEvents);\r\n\t\t\tkeys.forEach(function(key){\r\n\t\t\t\tif(!dDataEventsClone[key]){\r\n\t\t\t\t\tdModifiedEventsDict[key] = dDataEvents[key];\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\r\n\t\t\treturn dModifiedEventsDict;\r\n\t\t},\r\n\r\n\t\t_getPropertiesSansTaxa: function(dProperties_){\r\n\t\t\tvar dProperties = Util.getClonedObject(dProperties_);\r\n            for (var i = 0; i < Object.keys(dProperties).length; i++) {\r\n\t\t\t    var oTaxon = dProperties[Object.keys(dProperties)[i]];\r\n                \r\n                for (var j = 0; j < oTaxon.categories.length; j++) {\r\n                    var oCategory = oTaxon.categories[j];\r\n                     \r\n                    // reverse-loop as we might need to delete a property (name) node within the loop\r\n                    for (var k = oCategory.properties.length - 1; k >= 0; k--) {\r\n                        var oProperty = oCategory.properties[k];\r\n\r\n\t\t\t\t\t\t// remove taxon property value\r\n\t\t\t\t\t\tvar foundTaxonProperty = oProperty.property_values.find(element => element[\"type\"] === \"taxon\");\r\n                        if(foundTaxonProperty){\r\n                        \tvar iIndex = oProperty.property_values.indexOf(foundTaxonProperty);\r\n                        \toProperty.property_values.splice(iIndex, 1);\r\n                        }\r\n                        \r\n                        // if there's no plant property value, just remove the whole property name noe\r\n                    \tvar foundPlantProperty = oProperty.property_values.find(element => element[\"type\"] === \"plant\");\r\n                    \tif(!foundPlantProperty)\r\n                    \t\toCategory.properties.splice(k, 1);\r\n                    }\r\n                }\r\n\t\t\t}\r\n\t\t\treturn dProperties;\r\n\t\t},\r\n\t\t\r\n\t\tgetModifiedPropertiesPlants: function(){\r\n\t\t\t// returns a dict with properties for those plants where at least one property has been modified, added, or deleted\r\n\t\t\t// for these plants, properties are supplied completely; modifications are then identified in backend\r\n\t\t\tvar oModelProperties = this.getView().getModel('properties');\r\n\t\t\tvar dDataProperties = oModelProperties.getData().propertiesPlants;\r\n\t\t\t// clean up the properties model data (returns a clone, not the original object!)\r\n\t\t\tdDataProperties = this._getPropertiesSansTaxa(dDataProperties);\r\n\t\t\t\r\n\t\t\tvar dDataPropertiesOriginal = this.getOwnerComponent().oPropertiesDataClone;\r\n\t\t\t\r\n\t\t\t// get plants for which we have properties in the original dataset\r\n\t\t\t// then, for each of them, check whether properties have been changed\r\n\t\t\tvar dModifiedPropertiesDict = {};\r\n\t\t\tvar keys_clone = Object.keys(dDataPropertiesOriginal);\r\n\t\t\tkeys_clone.forEach(function(key){  \r\n\t\t\t\t// loop at plants\r\n\t\t\t\tif(!Util.objectsEqualManually(\tdDataPropertiesOriginal[key],\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\tdDataProperties[key])){\r\n\t\t\t\t\t\t\t\t\t\t\t\tdModifiedPropertiesDict[key] = dDataProperties[key];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t}, this);\r\n\t\t\t\r\n\t\t\treturn dModifiedPropertiesDict;\r\n\t\t},\r\n\t\t\r\n\t\tgetModifiedPropertiesTaxa: function(){\r\n\t\t\tvar oModelProperties = this.getView().getModel('propertiesTaxa');\r\n\t\t\tvar dpropertiesTaxon = oModelProperties.getData().propertiesTaxon;\r\n\t\t\tvar dPropertiesTaxonOriginal = this.getOwnerComponent().oPropertiesTaxonDataClone;\r\n\t\t\tif (!dPropertiesTaxonOriginal){\r\n\t\t\t\treturn {};\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// get taxa for which we have properties in the original dataset\r\n\t\t\t// then, for each of them, check whether properties have been changed\r\n\t\t\tvar dModifiedPropertiesDict = {};\r\n\t\t\tvar keys_clone = Object.keys(dPropertiesTaxonOriginal);\r\n\t\t\tkeys_clone.forEach(function(key){  \r\n\t\t\t\t// loop at plants\r\n\t\t\t\tif(!Util.objectsEqualManually(\tdPropertiesTaxonOriginal[key],\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\tdpropertiesTaxon[key])){\r\n\t\t\t\t\t\t\t\t\t\t\t\tdModifiedPropertiesDict[key] = dpropertiesTaxon[key];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t}, this);\r\n\t\t\t\r\n\t\t\treturn dModifiedPropertiesDict;\t\t\t\r\n\t\t},\r\n\t\t\r\n\t\tgetModifiedImages: function(){\r\n\t\t\t// identify modified images by comparing images with their clones (created after loading)\r\n\t\t\tvar oImages = this.getOwnerComponent().imagesRegistry;\r\n\t\t\tvar oImagesClone = this.getOwnerComponent().imagesRegistryClone;\r\n\r\n\t\t\tvar aModifiedImages = [];\r\n\t\t\tObject.keys(oImages).forEach(path=>{\r\n\t\t\t\tif (!(path in oImagesClone) || !Util.dictsAreEqual(oImages[path], oImagesClone[path])){\r\n\t\t\t\t\taModifiedImages.push(oImages[path]);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\treturn aModifiedImages;\r\n\t\t},\r\n\t\t\r\n\t\tsavePlantsAndImages: function(){\r\n\t\t\t// saving images, plants, taxa, and events model\r\n\t\t\tUtil.startBusyDialog('Saving...', 'Plants and Images');\r\n\t\t\tthis.savingPlants = false;\r\n\t\t\tthis.savingImages = false;\r\n\t\t\tthis.savingTaxa = false;\r\n\t\t\tthis.savingEvents = false;\r\n\t\t\tthis.savingProperties = false;\r\n\t\t\t\r\n\t\t\tvar aModifiedPlants = this.getModifiedPlants();\r\n\t\t\tvar aModifiedImages = this.getModifiedImages();\r\n\t\t\tvar aModifiedTaxa = this.getModifiedTaxa();\r\n\t\t\tvar dModifiedEvents = this._getModifiedEvents();\r\n\t\t\tvar dModifiedPropertiesPlants = this.getModifiedPropertiesPlants();\r\n\t\t\tvar dModifiedPropertiesTaxa = this.getModifiedPropertiesTaxa();\r\n\r\n\t\t\t// cancel busydialog if nothing was modified (callbacks not triggered)\r\n\t\t\tif((aModifiedPlants.length === 0)&&(aModifiedImages.length === 0)&&(aModifiedTaxa.length === 0)\r\n\t\t\t\t&&(Object.keys(dModifiedEvents).length=== 0)&&(Object.keys(dModifiedPropertiesPlants).length=== 0)&&(Object.keys(dModifiedPropertiesTaxa).length===0)){\r\n\t\t\t\tMessageToast.show('Nothing to save.');\r\n\t\t\t\tUtil.stopBusyDialog();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// save plants\r\n\t\t\tif(aModifiedPlants.length > 0){\r\n\t\t\t\tthis.savingPlants = true;  // required in callback function  to find out if both savings are finished\r\n\t\t\t\tvar dPayloadPlants = {'PlantsCollection': aModifiedPlants};\r\n\t\t    \t$.ajax({\r\n\t\t\t\t\t  url: Util.getServiceUrl('plants/'),\r\n\t\t\t\t\t  type: 'POST',\r\n\t\t\t\t\t  contentType: \"application/json\",\r\n\t\t\t\t\t  data: JSON.stringify(dPayloadPlants),\r\n\t\t\t\t\t  context: this\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.done(this._onAjaxSuccessSave)\r\n\t\t\t\t\t.fail(ModelsHelper.getInstance().onReceiveErrorGeneric.bind(this,'Plant (POST)'));\r\n\t\t\t}\r\n\r\n\t\t\t// save images\r\n\t\t\tif(aModifiedImages.length > 0){\r\n\t\t\t\tthis.savingImages = true;\r\n\t\t\t\tvar dPayloadImages = {'ImagesCollection': aModifiedImages};\r\n\t\t    \t$.ajax({\r\n\t\t\t\t\t  url: Util.getServiceUrl('images/'),\r\n\t\t\t\t\t  type: 'PUT',\r\n\t\t\t\t\t  contentType: \"application/json\",\r\n\t\t\t\t\t  data: JSON.stringify(dPayloadImages),\r\n\t\t\t\t\t  context: this\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.done(this._onAjaxSuccessSave)\r\n\t\t\t\t\t.fail(ModelsHelper.getInstance().onReceiveErrorGeneric.bind(this,'Image (PUT)'));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// save taxa\r\n\t\t\tif(aModifiedTaxa.length > 0){\r\n\t\t\t\tthis.savingTaxa = true;\r\n\r\n\r\n\t\t\t\t// cutting occurrence images (read-only)\r\n\t\t\t\tvar aModifiedTaxaSave = Util.getClonedObject(aModifiedTaxa);\r\n\t\t\t\taModifiedTaxaSave = aModifiedTaxaSave.map(m=>{\r\n\t\t\t\t\tdelete m.occurrenceImages;\r\n\t\t\t\t\treturn m;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tvar dPayloadTaxa = {'ModifiedTaxaCollection': aModifiedTaxaSave};\r\n\t\t    \t$.ajax({\r\n\t\t\t\t\t  url: Util.getServiceUrl('taxa/'),\r\n\t\t\t\t\t  type: 'PUT',\r\n\t\t\t\t\t  contentType: \"application/json\",\r\n\t\t\t\t\t  data: JSON.stringify(dPayloadTaxa),\r\n\t\t\t\t\t  context: this\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.done(this._onAjaxSuccessSave)\r\n\t\t\t\t\t.fail(ModelsHelper.getInstance().onReceiveErrorGeneric.bind(this,'Taxon (POST)'));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t// save events\r\n\t\t\tif(Object.keys(dModifiedEvents).length > 0){\r\n\t\t\t\tthis.savingEvents = true;\r\n\t\t\t\tvar dPayloadEvents = {'plants_to_events': dModifiedEvents};\r\n\t\t    \t$.ajax({\r\n\t\t\t\t\t  url: Util.getServiceUrl('events/'),\r\n\t\t\t\t\t  type: 'POST',\r\n\t\t\t\t\t  contentType: \"application/json\",\r\n\t\t\t\t\t  data: JSON.stringify(dPayloadEvents),\r\n\t\t\t\t\t  context: this\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.done(this._onAjaxSuccessSave)\r\n\t\t\t\t\t.fail(ModelsHelper.getInstance().onReceiveErrorGeneric.bind(this,'Event (POST)'));\r\n\t\t\t}\t\r\n\t\t\t\r\n\t\t\t// save properties\r\n\t\t\tif(Object.keys(dModifiedPropertiesPlants).length > 0){\r\n\t\t\t\tthis.savingProperties = true;\r\n\t\t\t\tvar dPayloadProperties = {'modifiedPropertiesPlants': dModifiedPropertiesPlants};\r\n\t\t    \t$.ajax({\r\n\t\t\t\t\t  url: Util.getServiceUrl('plant_properties/'),\r\n\t\t\t\t\t  type: 'POST',\r\n\t\t\t\t\t  contentType: \"application/json\",\r\n\t\t\t\t\t  data: JSON.stringify(dPayloadProperties),\r\n\t\t\t\t\t  context: this\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.done(this._onAjaxSuccessSave)\r\n\t\t\t\t\t.fail(ModelsHelper.getInstance().onReceiveErrorGeneric.bind(this,'plant_properties (POST)'));\r\n\t\t\t}\t\r\n\t\t\t\r\n\t\t\t// save properties taxa\r\n\t\t\tif(Object.keys(dModifiedPropertiesTaxa).length > 0 || Object.keys(dModifiedPropertiesTaxa).length > 0 ){\r\n\t\t\t\tthis.savingPropertiesTaxa = true;\r\n\t\t\t\tvar dPayloadPropertiesTaxa = {'modifiedPropertiesTaxa': dModifiedPropertiesTaxa };\r\n\t\t    \t$.ajax({\r\n\t\t\t\t\t  url: Util.getServiceUrl('taxon_properties/'),\r\n\t\t\t\t\t  type: 'POST',\r\n\t\t\t\t\t  contentType: \"application/json\",\r\n\t\t\t\t\t  data: JSON.stringify(dPayloadPropertiesTaxa),\r\n\t\t\t\t\t  context: this\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.done(this._onAjaxSuccessSave)\r\n\t\t\t\t\t.fail(ModelsHelper.getInstance().onReceiveErrorGeneric.bind(this,'taxon_properties (POST)'));\r\n\t\t\t}\t\t\r\n\t\t},\r\n\r\n\t\tsaveNewPlant: function(oPlant){\r\n\t\t\t// save a new plant (only plant_name) to backend to receive plant id\r\n\t\t\tvar dPayloadPlants = {'PlantsCollection': [oPlant]};\r\n\t\t\tUtil.startBusyDialog('Creating...', 'new plant ' + oPlant.plant_name);\r\n\t\t\t$.ajax({\r\n\t\t\t\t  url: Util.getServiceUrl('plants/'),\r\n\t\t\t\t  type: 'POST',\r\n\t\t\t\t  contentType: \"application/json\",\r\n\t\t\t\t  data: JSON.stringify(dPayloadPlants),\r\n\t\t\t\t  context: this\r\n\t\t\t\t})\r\n\t\t\t\t.done(function(oMsg, sStatus, oReturnData){\r\n\t\t\t\t\t// add new plant to model\r\n\t\t\t\t\tvar oPlantSaved = oMsg.plants[0];\r\n\t\t\t\t\tvar aPlants = this.getOwnerComponent().getModel('plants').getProperty('/PlantsCollection');\r\n\t\t\t\t\tvar iPlantsCount = aPlants.push(oPlantSaved);  // append at end to preserve change tracking with clone \r\n\t\t\t\t\tthis.getOwnerComponent().getModel('plants').updateBindings();\r\n\r\n\t\t\t\t\t// ...and add to cloned plants to allow change tracking\r\n\t\t\t\t\tvar oPlantClone = Util.getClonedObject(oPlantSaved);\r\n\t\t\t\t\tthis.getOwnerComponent().oPlantsDataClone.PlantsCollection.push(oPlantClone);\r\n\t\t\t\t\tMessageToast.show('Created plant ID ' + oPlantSaved.id + ' (' + oPlantSaved.plant_name + ')');\r\n\r\n\t\t\t\t\t// finally navigate to the newly created plant in details view\r\n\t\t\t\t\t// Navigation.navToPlantDetails.call(this, iPlantsCount-1);\r\n\t\t\t\t\tNavigation.navToPlantDetails.call(this, oPlantSaved.id);\r\n\r\n\t\t\t\t})\r\n\t\t\t\t.fail(ModelsHelper.getInstance().onReceiveErrorGeneric.bind(this,'Plant (POST)'))\r\n\t\t\t\t.always(function(){\r\n\t\t\t\t\tUtil.stopBusyDialog();\r\n\t\t\t\t});\r\n\t\t},\r\n\t\t\r\n\t\tisPlantNameInPlantsModel: function(sPlantName){\r\n\t\t\tvar aPlants = this.getOwnerComponent().getModel('plants').getProperty('/PlantsCollection');\r\n\t\t\treturn (aPlants.find(ele => ele.plant_name === sPlantName) !== undefined);\r\n\t\t},\r\n\r\n\t\tgetPlantId: function(sPlantName){\r\n\t\t\tvar aPlants = this.getOwnerComponent().getModel('plants').getProperty('/PlantsCollection');\r\n\t\t\tvar oPlant = aPlants.find(ele => ele.plant_name === sPlantName);\r\n\t\t\tif (oPlant === undefined){\r\n\t\t\t\tthrow \"Plant not found\";\r\n\t\t\t} else {\r\n\t\t\t\treturn oPlant.id;\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tgetPlantById: function(plantIdRaw){\r\n\t\t\t// todo replace other implementation of function with this here\r\n\t\t\tvar plantId = parseInt(plantIdRaw);\r\n\t\t\tvar aPlants = this.getOwnerComponent().getModel('plants').getProperty('/PlantsCollection');\r\n\t\t\tvar oPlant = aPlants.find(ele => ele.id === plantId);\r\n\t\t\tif (oPlant === undefined){\r\n\t\t\t\tthrow \"Plant not found\";\r\n\t\t\t} else {\r\n\t\t\t\treturn oPlant;\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tgetPlantByName: function(plantName){\r\n\t\t\t// todo replace other implementation of function with this here\r\n\t\t\tvar plants = this.getOwnerComponent().getModel('plants').getProperty('/PlantsCollection');\r\n\t\t\tvar plant = plants.find(ele => ele.plant_name === plantName);\r\n\t\t\tif (plant === undefined){\r\n\t\t\t\tthrow \"Plant not found: \"+plantName;\r\n\t\t\t} else {\r\n\t\t\t\treturn plant;\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tgetRouter: function() {\r\n\t\t\t//\tTo make it more comfortable, we add a handy shortcut getRouter\r\n\t\t\treturn sap.ui.core.UIComponent.getRouterFor(this);\r\n\t\t},\r\n\t\t\r\n\t\tonAjaxSimpleSuccess: function(oMsg, sStatus, oReturnData){\r\n\t\t\t//toast and create message\r\n\t\t\t//requires pre-defined message from backend\r\n\t\t\tMessageToast.show(oMsg.message.message);\r\n\t\t\tMessageUtil.getInstance().addMessageFromBackend(oMsg.message);\r\n\t\t},\r\n\r\n\t\t_onAjaxSuccessSave: function(oMsg, sStatus, oReturnData){\r\n\t\t\t// cancel busydialog only if neither saving plants nor images or taxa is still running\r\n\t\t\tif (oMsg.resource === 'PlantResource'){\r\n\t\t\t\tthis.savingPlants = false;\r\n\t\t\t\tvar oModelPlants = this.getView().getModel('plants');\r\n\t\t\t\tvar dDataPlants = oModelPlants.getData();\r\n\t\t\t\tthis.getOwnerComponent().oPlantsDataClone = Util.getClonedObject(dDataPlants);\r\n\t\t\t} else if (oMsg.resource === 'ImageResource'){\r\n\t\t\t\tthis.savingImages = false;\r\n\t\t\t\tvar oImages = this.getOwnerComponent().imagesRegistry;\r\n\t\t\t\tthis.getOwnerComponent().imagesRegistryClone = Util.getClonedObject(oImages);\r\n\t\t\t\t// var oModelImages = this.getView().getModel('images');\r\n\t\t\t\t// var dDataImages = oModelImages.getData();\r\n\t\t\t\t// this.getOwnerComponent().oImagesDataClone = Util.getClonedObject(dDataImages);\r\n\t\t\t} else if (oMsg.resource === 'TaxonResource'){\r\n\t\t\t\tthis.savingTaxa = false;\r\n\t\t\t\tvar oModelTaxon = this.getView().getModel('taxon');\r\n\t\t\t\tvar dDataTaxon = oModelTaxon.getData();\r\n\t\t\t\tthis.getOwnerComponent().oTaxonDataClone = Util.getClonedObject(dDataTaxon);\r\n\t\t\t} else if (oMsg.resource === 'EventResource'){\r\n\t\t\t\tthis.savingEvents = false;\r\n\t\t\t\tvar oModelEvents = this.getView().getModel('events');\r\n\t\t\t\tvar dDataEvents = oModelEvents.getData();\r\n\t\t\t\tthis.getOwnerComponent().oEventsDataClone = Util.getClonedObject(dDataEvents.PlantsEventsDict);\r\n\t\t\t\tMessageUtil.getInstance().addMessageFromBackend(oMsg.message);\r\n\t\t\t} else if (oMsg.resource === 'PropertyResource'){\r\n\t\t\t\tthis.savingProperties = false;\r\n\t\t\t\tvar oModelProperties = this.getView().getModel('properties');\r\n\t\t\t\tvar dDataProperties = oModelProperties.getData();\r\n\t\t\t\tvar propertiesPlantsWithoutTaxa = this._getPropertiesSansTaxa(dDataProperties.propertiesPlants);\r\n\t\t\t\tthis.getOwnerComponent().oPropertiesDataClone = Util.getClonedObject(propertiesPlantsWithoutTaxa);\r\n\t\t\t\tMessageUtil.getInstance().addMessageFromBackend(oMsg.message);\r\n\t\t\t} else if (oMsg.resource === 'PropertyTaxaResource'){\r\n\t\t\t\tthis.savingPropertiesTaxa = false;\r\n\t\t\t\tvar oModelPropertiesTaxa = this.getView().getModel('propertiesTaxa');\r\n\t\t\t\tvar dDataPropertiesTaxa = oModelPropertiesTaxa.getData();\r\n\t\t\t\tthis.getOwnerComponent().oPropertiesTaxonDataClone = Util.getClonedObject(dDataPropertiesTaxa.propertiesTaxon);\r\n\t\t\t\tMessageUtil.getInstance().addMessageFromBackend(oMsg.message);\r\n\t\t\t}\r\n\r\n\t\t\tif(!this.savingPlants&&!this.savingImages&&!this.savingTaxa&&!this.savingEvents&&!this.savingProperties){\r\n\t\t\t\tUtil.stopBusyDialog();\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\r\n\t\tupdateTableHeaderPlantsCount: function(){\r\n\t\t\t// update count in table header\r\n\t\t\tvar iPlants = this.getView().byId(\"plantsTable\").getBinding(\"items\").getLength();\r\n\t\t\tvar sTitle = \"Plants (\" + iPlants + \")\";\r\n\t\t\tthis.getView().byId(\"pageHeadingTitle\").setText(sTitle);\r\n\t\t},\r\n\t\t\r\n\t\thandleErrorMessageBox: function(sText) {\r\n\t\t\tvar bCompact = !!this.getView().$().closest(\".sapUiSizeCompact\").length;\r\n\t\t\tMessageBox.error(sText, {\r\n\t\t\t\tstyleClass: bCompact ? \"sapUiSizeCompact\" : \"\"\r\n\t\t\t});\r\n\t\t},\r\n\t\t\r\n\t\tonIconPressDeleteImage: function(evt){\r\n\t\t\t//called for either images or untaggedImages from respective view\r\n\t\t\tvar sModel = evt.getSource().data('sModel');\r\n\r\n\t\t\t//get image object\r\n\t\t\tvar oPath = evt.getSource().getParent().getBindingContext(sModel);\r\n\t\t\tvar oImage = oPath.getProperty();\t\t\t\r\n\t\t\t\r\n\t\t\t//confirm dialog\r\n\t\t\tvar bCompact = !!this.getView().$().closest(\".sapUiSizeCompact\").length;\r\n\t\t\tMessageBox.confirm(\r\n\t\t\t\t\"Delete this image?\", {\r\n\t\t\t\t\ticon: MessageBox.Icon.WARNING,\r\n\t\t\t\t\ttitle: \"Delete\",\r\n\t\t\t\t\tstretch: false,\r\n\t\t\t\t\tonClose: this._confirmDeleteImage.bind(this, oImage, oPath),\r\n\t\t\t\t\tactions: ['Delete', 'Cancel'],\r\n\t\t\t\t\tstyleClass: bCompact ? \"sapUiSizeCompact\" : \"\"\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t},\r\n\r\n\t\tonCancelDialog: function(dialogId){\r\n\t\t\t// generic handler for fragments to be closed\r\n\t\t\tthis.applyToFragment(dialogId,(o)=>o.close());\r\n\t\t},\r\n\t\t\t\r\n\t\t_confirmDeleteImage: function(oImage, oPath, sAction){\r\n\t\t\t// triggered by onIconPressDeleteImage's confirmation dialogue\r\n\t\t\tif(sAction !== 'Delete'){\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//send delete request\r\n\t\t\tvar oPayload = {'images': [{'filename': oImage.filename}]}\r\n\t\t\t$.ajax({\r\n\t\t\t\t  url: Util.getServiceUrl('images/'),\r\n\t\t\t\t  type: 'DELETE',\r\n\t\t\t\t  contentType: \"application/json\",\r\n\t\t\t\t  data: JSON.stringify(oPayload),\r\n\t\t\t\t  context: this\r\n\t\t\t\t})\r\n\t\t\t\t.done(function(data, textStats, jqXHR) {\r\n        \t\t\t// this._onAjaxDeletedImagesSuccess(data, textStats, jqXHR, oPath); } \r\n        \t\t\tthis._onAjaxDeletedImagesSuccess(data, textStats, jqXHR, [oImage]); } \r\n        \t\t\t)\r\n\t\t\t\t.fail(ModelsHelper.getInstance().onReceiveErrorGeneric.bind(this,'Image (DELETE)'));\r\n\t\t},\r\n\r\n\t\tonReceiveSuccessGeneric: function (oMsg, sStatus, oReturnData) {\r\n\t\t\tUtil.stopBusyDialog();\r\n\t\t\tMessageToast.show(oMsg.message);\r\n\t\t\tMessageUtil.getInstance().addMessageFromBackend(oMsg);\r\n\t\t},\t\t\r\n\t\t\r\n\t\t// use a closure to pass an element to the callback function\r\n\t\t_onAjaxDeletedImagesSuccess: function(data, textStats, jqXHR, selectedImages, callbackFn){\r\n\t\t\t//show default success message\r\n\t\t\tthis.onAjaxSimpleSuccess(data, textStats, jqXHR);\r\n\t\t\t\r\n\t\t\t// delete image in models...\r\n\t\t\tvar aDataImages = this.getView().getModel('images').getData().ImagesCollection;\t\t\r\n\t\t\tvar aDataUntagged = this.getView().getModel('untaggedImages').getData().ImagesCollection;\r\n\r\n\t\t\tvar context = this;  // for the closure\r\n\t\t\tselectedImages.forEach(function(image){\r\n\r\n\t\t\t\tvar iPosImages = aDataImages.indexOf(image);\r\n\t\t\t\tif (iPosImages >= 0){\r\n\t\t\t\t\taDataImages.splice(iPosImages, 1);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar iPosImages = aDataUntagged.indexOf(image);\r\n\t\t\t\tif (iPosImages >= 0){\r\n\t\t\t\t\taDataUntagged.splice(iPosImages, 1);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t//... and deleted image in images registry\r\n\t\t\t\tdelete context.getOwnerComponent().imagesRegistry[image.filename]\r\n\t\t\t\tdelete context.getOwnerComponent().imagesRegistryClone[image.filename]\r\n\t\t\t\r\n\t\t\t});\r\n\t\t\tthis.getView().getModel('images').refresh();\r\n\t\t\tthis.getView().getModel('untaggedImages').refresh();\r\n\r\n\t\t\t// allow for callback functions for callers\r\n\t\t\tif(!!callbackFn){\r\n\t\t\t\tcallbackFn();\r\n\t\t\t}\r\n\r\n\t\t},\r\n\t\t\r\n\t\tonInputImageNewKeywordSubmit: function(evt){\r\n\t\t\t// (used in both details and untagged views)\r\n\t\t\t// check not empty and new\r\n\t\t\tvar sModel = evt.getSource().data('sModel');\r\n\r\n\t\t\tvar sKeyword = evt.getParameter('value').trim();\r\n\t\t\tif (!sKeyword){\r\n\t\t\t\tevt.getSource().setValue('');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar aKeywords = evt.getSource().getParent().getBindingContext(sModel).getObject().keywords;\r\n\t\t\tif(aKeywords.find(ele=>ele.keyword === sKeyword)){\r\n\t\t\t\tMessageToast.show('Keyword already in list');\r\n\t\t\t\tevt.getSource().setValue('');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//add to current image keywords in images model\r\n\t\t\taKeywords.push({keyword: sKeyword});\r\n\t\t\tevt.getSource().setValue('');\r\n\t\t\tthis.getOwnerComponent().getModel(sModel).updateBindings();\r\n\t\t},\r\n\t\t\r\n\t\tonTokenizerTokenChange: function(evt){\r\n\t\t\t// (used in both details and untagged views)\r\n\t\t\t// triggered upon changes of image's plant assignments and image's keywords\r\n\t\t\t// note: the token itself has already been deleted; here, we only delete the \r\n\t\t\t// \t\t corresponding entry from the model\r\n\t\t\tif(evt.getParameter('type') === 'removed'){\r\n\t\t\t\t\r\n\t\t\t\tvar sKey = evt.getParameter('token').getProperty('key');\r\n\t\t\t\tvar sType = evt.getSource().data('type'); // plant|keyword\r\n\t\t\t\t\r\n\t\t\t\t// find plant/keyword in the image's corresponding array and delete\r\n\t\t\t\t// called by either details or untagged -> find corresponding model\r\n\t\t\t\tvar model_name = (!!evt.getSource().getParent().getBindingContext(\"images\")) ? 'images' : 'untaggedImages';\r\n\t\t\t\tvar oImage = evt.getSource().getParent().getBindingContext(model_name).getObject();\r\n\t\t\t\t\r\n\t\t\t\tvar aListDicts = sType === 'plant' ? oImage.plants : oImage.keywords;\r\n\t\t\t\tvar iIndex = aListDicts.findIndex(ele=>sType==='keyword' ? ele.keyword === sKey : ele.key === sKey);\r\n\t\t\t\tif (iIndex === undefined){\r\n\t\t\t\t\tMessageToast.show('Technical error: '+sKey+' not found.');\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\taListDicts.splice(iIndex, 1);\r\n\t\t\t\tthis.getOwnerComponent().getModel(model_name).updateBindings();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\taddPhotosToRegistry: function(aPhotos){\r\n\t\t\t// add photos loaded for a plant to the registry if not already loaded with other plant\r\n\t\t\t// plus add a copy of the photo to a clone registry for getting changed photos when saving \r\n\t\t\taPhotos.forEach((photo) => {\r\n\t\t\t\tif (!(photo.filename in this.getOwnerComponent().imagesRegistry)){\r\n\t\t\t\t\tthis.getOwnerComponent().imagesRegistry[photo.filename] = photo;\r\n\t\t\t\t\tthis.getOwnerComponent().imagesRegistryClone[photo.filename] = Util.getClonedObject(photo);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\t\t\r\n\t\thandleTypeMissmatch: function(oEvent) {\r\n\t\t\tvar aFileTypes = x = oEvent.getSource().getFileType().map(ele => \"*.\" + ele)\r\n\t\t\tvar sSupportedFileTypes = aFileTypes.join(\", \");\r\n\t\t\tMessageToast.show(\"The file type *.\" + oEvent.getParameter(\"fileType\") +\r\n\t\t\t\t\t\t\t\t\t\" is not supported. Choose one of the following types: \" +\r\n\t\t\t\t\t\t\t\t\tsSupportedFileTypes);\r\n\t\t},\r\n\r\n\t\tresetImagesCurrentPlant: function(plant_id){\r\n\t\t\tvar aPhotos = Object.entries(this.getOwnerComponent().imagesRegistry).filter(t => (t[1].plants.filter(p => p.plant_id === plant_id)).length == 1 );\r\n\t\t\tvar aPhotos = aPhotos.map(p => p[1]);\r\n\t\t\tthis.getOwnerComponent().getModel('images').setProperty('/ImagesCollection',aPhotos);\r\n\t\t\tUtil.stopBusyDialog(); // had been started in details onPatternMatched\r\n\t\t},\r\n\r\n\t\tgetSuggestionItem: function(rootKey, key){\r\n\t\t\t// retrieve an item from suggestions model via root key and key\r\n\t\t\t// example usage: var selected = getSuggestionItem('propagationTypeCollection', 'bulbil');\r\n\t\t\tvar suggestions = this.getOwnerComponent().getModel('suggestions').getProperty('/'+rootKey);\r\n\t\t\tvar suggestion = suggestions.find(s=>s['key'] === key);\r\n\t\t\tif (!suggestion){\r\n\t\t\t\tthrow \"Suggestion Key not found: \" + key;\r\n\t\t\t}\r\n\t\t\treturn suggestion;\r\n\t\t}\r\n\r\n\t\t// _onReceivingUntaggedImages: function(oData, sStatus, oReturnData){\r\n\t\t// \tthis.addPhotosToRegistry(oData.ImagesCollection);\r\n\t\t// \tthis.resetUntaggedPhotos();\r\n\t\t// \tthis.getOwnerComponent().imagesUntaggedLoaded = true;\r\n\t\t// }\r\n\r\n\t\t// requestUntaggedImages: function(){\r\n\t\t// \t// request data from backend\r\n\t\t// \t$.ajax({\r\n\t\t// \t\turl: Util.getServiceUrl('images/'),\r\n\t\t// \t\tdata: {untagged: true},\r\n\t\t// \t\tcontext: this,\r\n\t\t// \t\tasync: true\r\n\t\t// \t})\r\n\t\t// \t// .done(this._onReceivingUntaggedImages.bind(this))\r\n\t\t// \t.done(this._onReceivingUntaggedImages)\r\n\t\t// \t.fail(ModelsHelper.getInstance().onReceiveErrorGeneric.bind(this,'Plant Untagged Images (GET)'));\t\r\n\t\t// }\r\n\r\n\t});\r\n});"],"mappings":"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"}