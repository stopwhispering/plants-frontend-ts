sap.ui.define(["sap/ui/core/mvc/Controller","sap/m/MessageBox","plants/ui/customClasses/MessageUtil","plants/ui/customClasses/Util","sap/m/MessageToast","plants/ui/model/ModelsHelper","sap/ui/core/Fragment","plants/ui/customClasses/Navigation","sap/m/Dialog","sap/m/Popover","sap/m/ViewSettingsDialog"],function(e,t,n,a,o,s,i,r,l,c,g){function p(e){return e&&e.__esModule&&typeof e.default!=="undefined"?e.default:e}const d=p(n);const f=p(s);const h=p(r);const u=e.extend("plants.ui.controller.BaseController",{constructor:function t(){e.prototype.constructor.apply(this,arguments);this.savingPlants=false;this.savingImages=false;this.savingTaxa=false;this.savingEvents=false;this.savingProperties=false;this.savingPropertiesTaxa=false},onInit:function e(){this.oComponent=this.getOwnerComponent();this.oRouter=this.oComponent.getRouter()},_getFragment:function e(t){return this.getView().byId(t)},applyToFragment:function e(t,n,a,o){if(!o){o={}}var s=this.getView();if(s.byId(t)){n(s.byId(t))}else{i.load({name:o[t],id:s.getId(),controller:this}).then(function(e){s.addDependent(e);if(a){a(e)}n(e)})}},getModifiedPlants:function e(){var t=this.oComponent.getModel("plants");var n=t.getData();var o=[];var s=this.oComponent.oPlantsDataClone["PlantsCollection"];for(var i=0;i<n["PlantsCollection"].length;i++){if(!a.dictsAreEqual(n["PlantsCollection"][i],s[i])){var r=a.getClonedObject(n["PlantsCollection"][i]);if(!!r.parent_plant&&!r.parent_plant.id){r.parent_plant=null}if(!!r.parent_plant_pollen&&!r.parent_plant_pollen.id){r.parent_plant_pollen=null}if(!a.dictsAreEqual(r,s[i])){o.push(n["PlantsCollection"][i])}}}return o},getModifiedTaxa:function e(){var t=this.oComponent.getModel("taxon");var n=t.getData().TaxaDict;var o=this.oComponent.oTaxonDataClone["TaxaDict"];var s=Object.keys(o);var i=s.map(e=>parseInt(e));var r=[];i.forEach(function(e){if(!a.dictsAreEqual(o[e],n[e])){r.push(n[e])}},this);return r},_getModifiedEvents:function e(){const t=this.oComponent.getModel("events");const n=t.getData().PlantsEventsDict;const o=this.oComponent.oEventsDataClone;let s={};const i=Object.keys(o);const r=i.map(e=>parseInt(e));r.forEach(function(e){if(!a.objectsEqualManually(o[e],n[e])){s[e]=n[e]}},this);const l=Object.keys(n);const c=l.map(e=>parseInt(e));c.forEach(function(e){if(!o[e]){s[e]=n[e]}},this);return s},_getPropertiesSansTaxa:function e(t){var n=a.getClonedObject(t);for(var o=0;o<Object.keys(n).length;o++){const e=parseInt(Object.keys(n)[o]);var s=n[e];for(var i=0;i<s.categories.length;i++){var r=s.categories[i];for(var l=r.properties.length-1;l>=0;l--){var c=r.properties[l];var g=c.property_values.find(e=>e["type"]==="taxon");if(g){var p=c.property_values.indexOf(g);c.property_values.splice(p,1)}var d=c.property_values.find(e=>e["type"]==="plant");if(!d)r.properties.splice(l,1)}}}return n},_getModifiedPropertiesPlants:function e(){const t=this.oComponent.getModel("properties");const n=t.getData().propertiesPlants;const o=this._getPropertiesSansTaxa(n);const s=this.oComponent.oPropertiesDataClone;let i={};const r=Object.keys(s);const l=r.map(e=>parseInt(e));l.forEach(function(e){if(!a.objectsEqualManually(s[e],o[e])){i[e]=o[e]}},this);return i},_getModifiedPropertiesTaxa:function e(){const t=this.oComponent.getModel("propertiesTaxa");const n=t.getData();const o=n.propertiesTaxon;const s=this.oComponent.oPropertiesTaxonDataClone;if(!s){return{}}var i={};const r=Object.keys(s);const l=r.map(e=>parseInt(e));l.forEach(function(e){if(!a.objectsEqualManually(s[e],o[e])){i[e]=o[e]}},this);return i},getModifiedImages:function e(){var t=this.oComponent.imagesRegistry;var n=this.oComponent.imagesRegistryClone;var o=[];Object.keys(t).forEach(e=>{if(!(e in n)||!a.dictsAreEqual(t[e],n[e])){o.push(t[e])}});return o},savePlantsAndImages:function e(){a.startBusyDialog("Saving...","Plants and Images");this.savingPlants=false;this.savingImages=false;this.savingTaxa=false;this.savingEvents=false;this.savingProperties=false;var t=this.getModifiedPlants();var n=this.getModifiedImages();var s=this.getModifiedTaxa();var i=this._getModifiedEvents();var r=this._getModifiedPropertiesPlants();var l=this._getModifiedPropertiesTaxa();if(t.length===0&&n.length===0&&s.length===0&&Object.keys(i).length===0&&Object.keys(r).length===0&&Object.keys(l).length===0){o.show("Nothing to save.");a.stopBusyDialog();return}if(t.length>0){this.savingPlants=true;var c={PlantsCollection:t};$.ajax({url:a.getServiceUrl("plants/"),type:"POST",contentType:"application/json",data:JSON.stringify(c),context:this}).done(this._onAjaxSuccessSave).fail(f.getInstance().onReceiveErrorGeneric.bind(this,"Plant (POST)"))}if(n.length>0){this.savingImages=true;var g={ImagesCollection:n};$.ajax({url:a.getServiceUrl("images/"),type:"PUT",contentType:"application/json",data:JSON.stringify(g),context:this}).done(this._onAjaxSuccessSave).fail(f.getInstance().onReceiveErrorGeneric.bind(this,"Image (PUT)"))}if(s.length>0){this.savingTaxa=true;var p=a.getClonedObject(s);p=p.map(e=>{delete e.occurrenceImages;return e});var d={ModifiedTaxaCollection:p};$.ajax({url:a.getServiceUrl("taxa/"),type:"PUT",contentType:"application/json",data:JSON.stringify(d),context:this}).done(this._onAjaxSuccessSave).fail(f.getInstance().onReceiveErrorGeneric.bind(this,"Taxon (POST)"))}if(Object.keys(i).length>0){this.savingEvents=true;var h={plants_to_events:i};$.ajax({url:a.getServiceUrl("events/"),type:"POST",contentType:"application/json",data:JSON.stringify(h),context:this}).done(this._onAjaxSuccessSave).fail(f.getInstance().onReceiveErrorGeneric.bind(this,"Event (POST)"))}if(Object.keys(r).length>0){this.savingProperties=true;var u={modifiedPropertiesPlants:r};$.ajax({url:a.getServiceUrl("plant_properties/"),type:"POST",contentType:"application/json",data:JSON.stringify(u),context:this}).done(this._onAjaxSuccessSave).fail(f.getInstance().onReceiveErrorGeneric.bind(this,"plant_properties (POST)"))}if(Object.keys(l).length>0||Object.keys(l).length>0){this.savingPropertiesTaxa=true;var v={modifiedPropertiesTaxa:l};$.ajax({url:a.getServiceUrl("taxon_properties/"),type:"POST",contentType:"application/json",data:JSON.stringify(v),context:this}).done(this._onAjaxSuccessSave).fail(f.getInstance().onReceiveErrorGeneric.bind(this,"taxon_properties (POST)"))}},saveNewPlant:function e(t){var n={PlantsCollection:[t]};a.startBusyDialog("Creating...","new plant "+t.plant_name);var s=this;$.ajax({url:a.getServiceUrl("plants/"),type:"POST",contentType:"application/json",data:JSON.stringify(n),context:this}).done(function(e,t,n){var i=e.plants[0];var r=s.oComponent.getModel("plants").getProperty("/PlantsCollection");var l=r.push(i);s.oComponent.getModel("plants").updateBindings(false);var c=a.getClonedObject(i);s.oComponent.oPlantsDataClone.PlantsCollection.push(c);o.show("Created plant ID "+i.id+" ("+i.plant_name+")");h.getInstance().navToPlantDetails(i.id)}).fail(f.getInstance().onReceiveErrorGeneric.bind(this,"Plant (POST)")).always(function(){a.stopBusyDialog()})},isPlantNameInPlantsModel:function e(t){var n=this.oComponent.getModel("plants").getProperty("/PlantsCollection");return n.find(e=>e.plant_name===t)!==undefined},getPlantById:function e(t){var n=this.oComponent.getModel("plants").getProperty("/PlantsCollection");var a=n.find(e=>e.id===t);if(a===undefined){throw"Plant not found"}else{return a}},getPlantByName:function e(t){var n=this.oComponent.getModel("plants").getProperty("/PlantsCollection");var a=n.find(e=>e.plant_name===t);if(a===undefined){throw"Plant not found: "+t}else{return a}},onAjaxSimpleSuccess:function e(t,n,a){o.show(t.message.message);d.getInstance().addMessageFromBackend(t.message)},_onAjaxSuccessSave:function e(t,n,o){if(t.resource==="PlantResource"){this.savingPlants=false;var s=this.oComponent.getModel("plants");var i=s.getData();this.oComponent.oPlantsDataClone=a.getClonedObject(i)}else if(t.resource==="ImageResource"){this.savingImages=false;var r=this.oComponent.imagesRegistry;this.oComponent.imagesRegistryClone=a.getClonedObject(r)}else if(t.resource==="TaxonResource"){this.savingTaxa=false;var l=this.oComponent.getModel("taxon");var c=l.getData();this.oComponent.oTaxonDataClone=a.getClonedObject(c)}else if(t.resource==="EventResource"){this.savingEvents=false;var g=this.oComponent.getModel("events");var p=g.getData();this.oComponent.oEventsDataClone=a.getClonedObject(p.PlantsEventsDict);d.getInstance().addMessageFromBackend(t.message)}else if(t.resource==="PropertyResource"){this.savingProperties=false;var f=this.oComponent.getModel("properties");var h=f.getData();var u=this._getPropertiesSansTaxa(h.propertiesPlants);this.oComponent.oPropertiesDataClone=a.getClonedObject(u);d.getInstance().addMessageFromBackend(t.message)}else if(t.resource==="PropertyTaxaResource"){this.savingPropertiesTaxa=false;var v=this.oComponent.getModel("propertiesTaxa");var m=v.getData();this.oComponent.oPropertiesTaxonDataClone=a.getClonedObject(m.propertiesTaxon);d.getInstance().addMessageFromBackend(t.message)}if(!this.savingPlants&&!this.savingImages&&!this.savingTaxa&&!this.savingEvents&&!this.savingProperties&&!this.savingPropertiesTaxa){a.stopBusyDialog()}},updateTableHeaderPlantsCount:function e(){var t=this.getView().byId("plantsTable").getBinding("items").getLength();var n="Plants ("+t+")";this.getView().byId("pageHeadingTitle").setText(n)},handleErrorMessageBox:function e(n){var a=!!this.getView().$().closest(".sapUiSizeCompact").length;t.error(n,{styleClass:a?"sapUiSizeCompact":""})},onCancelDialog:function e(t){let n=t.getSource();do{n=n.getParent()}while(n.getParent()!==undefined&&!(n instanceof l)&&!(n instanceof c)&&!(n instanceof g));if(!n){o.show("Error: Could not find Dialog or Popover to close");return}n.close()},confirmDeleteImage:function e(t,n){if(n!=="Delete"){return}var o={images:[{filename:t.filename}]};$.ajax({url:a.getServiceUrl("images/"),type:"DELETE",contentType:"application/json",data:JSON.stringify(o),context:this}).done(this.onAjaxDeletedImagesSuccess.bind(this,[t],undefined)).fail(f.getInstance().onReceiveErrorGeneric.bind(this,"Image (DELETE)"))},onAjaxDeletedImagesSuccess:function e(t,n,a,o,s){this.onAjaxSimpleSuccess(a,o,s);const i=this.oComponent.getModel("images");const r=this.oComponent.getModel("untaggedImages");var l=i.getData().ImagesCollection;var c=r.getData().ImagesCollection;var g=this;t.forEach(function(e){var t=l.indexOf(e);if(t>=0){l.splice(t,1)}var t=c.indexOf(e);if(t>=0){c.splice(t,1)}delete g.oComponent.imagesRegistry[e.filename];delete g.oComponent.imagesRegistry[e.filename];delete g.oComponent.imagesRegistryClone[e.filename]});this.oComponent.getModel("images").refresh();this.oComponent.getModel("untaggedImages").refresh();if(!!n){n()}},onReceiveSuccessGeneric:function e(t){a.stopBusyDialog();o.show(t.message);d.getInstance().addMessageFromBackend(t)},addPhotosToRegistry:function e(t){t.forEach(e=>{if(!(e.filename in this.oComponent.imagesRegistry)){this.oComponent.imagesRegistry[e.filename]=e;this.oComponent.imagesRegistryClone[e.filename]=a.getClonedObject(e)}})},resetImagesCurrentPlant:function e(t){const n=Object.entries(this.oComponent.imagesRegistry).filter(e=>e[1].plants.filter(e=>e.plant_id===t).length==1);var o=n.map(e=>e[1]);this.oComponent.getModel("images").setProperty("/ImagesCollection",o);a.stopBusyDialog()},getSuggestionItem:function e(t,n){let a;switch(t){case"propagationTypeCollection":a=this.oComponent.getModel("suggestions").getProperty("/"+t);break;default:throw"Root Key not found: "+t}const o=a.find(e=>e["key"]===n);if(!o){throw"Suggestion Key not found: "+n}return o}});return u});