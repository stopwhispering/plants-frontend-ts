{"version":3,"file":"FlexibleColumnLayout.controller.js","names":["BaseController","ModelsHelper","MessageUtil","formatter","Action","Navigation","MessageType","ImageEventHandlers","FlexibleColumnLayout","mIdToFragment","MessagePopover","dialogUploadPhotos","menuShellBarMenu","onInit","_oRouter","oComponent","getRouter","attachBeforeRouteMatched","_onBeforeRouteMatched","attachRouteMatched","_onRouteMatched","imageEventHandlers","applyToFragment","bind","oEvent","oLayoutModel","getModel","sLayout","getParameter","layout","oNextUIState","getHelper","getNextUIState","setProperty","sRouteName","oArguments","_updateUIElements","_currentRouteName","_currentPlantId","plant_id","sId","fn","fnInit","onStateChanged","bIsNavigationArrow","navTo","oUIState","getCurrentUIState","window","location","hash","includes","columnsVisibility","midColumn","endColumn","oModel","setData","onExit","detachRouteMatched","detachBeforeRouteMatched","onShellBarMenuButtonPressed","oSource","getSource","oMenu","openBy","generateMissingThumbnails","$","ajax","url","Util","getServiceUrl","type","contentType","context","done","onReceiveSuccessGeneric","fail","getInstance","undefined","onReceiveErrorGeneric","onPressButtonSave","savePlantsAndImages","onPressButtonRefreshData","aModifiedPlants","getModifiedPlants","aModifiedImages","getModifiedImages","aModifiedTaxa","getModifiedTaxa","length","bCompact","getView","closest","MessageBox","confirm","onClose","_onCloseRefreshConfirmationMessageBox","styleClass","OK","eAction","startBusyDialog","oModelsHelper","reloadPlantsFromBackend","resetImagesRegistry","reloadTaxaFromBackend","onOpenFragmentUploadPhotos","oDialog","open","oMultiInputKeywords","byId","addValidator","_keywordValidator","args","text","Token","key","uploadPhotosToServer","oFileUploader","getValue","MessageToast","show","sUrl","setUploadUrl","aSelectedTokens","getTokens","aSelectedPlantIds","i","push","getProperty","aSelectedKeywordTokens","aSelectedKeywords","oAdditionalData","setAdditionalData","JSON","stringify","upload","handleUploadComplete","sResponse","sMsg","addMessage","Warning","stopBusyDialog","oResponse","parse","addMessageFromBackend","message","images","addToImagesRegistry","resetImagesCurrentPlant","updateBindings","resetUntaggedPhotos","close","onIconPressAssignDetailsPlant","plant","getPlantById","oControl","find","ele","plant_name","oPlantToken","id","toString","addToken","onShowUntagged","onShellBarSearch","plantId","getBindingContext","getObject","navToPlantDetails","onShellBarSuggest","sValue","aFilters","oFilter","Filter","FilterOperator","EQ","sText","toUpperCase","indexOf","oOrFilter","filters","and","oSearchField","oSuggestionItemsBinding","getBinding","filter","suggest","onShellBarNotificationsPressed","oPopover","isOpen","onClearMessages","removeAllMessages","onHomeIconPressed","oHelper","sNextLayoutType","getDefaultLayouts","defaultLayoutType","onHandleTypeMissmatch","oFileUpload","sFiletype","handleTypeMissmatch"],"sources":["../../src/controller/FlexibleColumnLayout.controller.ts"],"sourcesContent":["import BaseController from \"plants/ui/controller/BaseController\"\r\nimport ModelsHelper from \"plants/ui/model/ModelsHelper\"\r\nimport MessageUtil from \"plants/ui/customClasses/MessageUtil\"\r\nimport formatter from \"plants/ui/model/formatter\"\r\nimport MessageToast from \"sap/m/MessageToast\"\r\nimport MessageBox, { Action } from \"sap/m/MessageBox\"\r\nimport * as Util from \"plants/ui/customClasses/Util\";\r\nimport Token from \"sap/m/Token\"\r\nimport Filter from \"sap/ui/model/Filter\"\r\nimport FilterOperator from \"sap/ui/model/FilterOperator\"\r\nimport Navigation from \"plants/ui/customClasses/Navigation\"\r\nimport { IdToFragmentMap } from \"../definitions/SharedLocal\"\r\nimport Router from \"sap/ui/core/routing/Router\"\r\nimport SearchManager from \"sap/f/SearchManager\"\r\nimport ListBinding from \"sap/ui/model/ListBinding\"\r\nimport Event from \"sap/ui/base/Event\"\r\nimport MultiInput from \"sap/m/MultiInput\"\r\nimport FileUploader from \"sap/ui/unified/FileUploader\"\r\nimport { PImageUploadedMetadata } from \"../definitions/ImageFromBackend\"\r\nimport Dialog from \"sap/m/Dialog\"\r\nimport Menu from \"sap/m/Menu\"\r\nimport { MessageType } from \"sap/ui/core/library\"\r\nimport Popover from \"sap/m/Popover\"\r\nimport ImageEventHandlers from \"../customClasses/ImageEventHandlers\"\r\nimport { UIState } from \"sap/f/FlexibleColumnLayoutSemanticHelper\"\r\n\r\n/**\r\n * @namespace plants.ui.controller\r\n */\r\nexport default class FlexibleColumnLayout extends BaseController {\r\n\r\n\tformatter = new formatter();\r\n\tprivate imageEventHandlers: ImageEventHandlers;\r\n\r\n\tprivate mIdToFragment = <IdToFragmentMap>{\r\n\t\tMessagePopover: \"plants.ui.view.fragments.menu.MessagePopover\",\r\n\t\tdialogUploadPhotos: \"plants.ui.view.fragments.menu.UploadPhotos\",\r\n\t\tmenuShellBarMenu: \"plants.ui.view.fragments.menu.ShellBarMenu\",\r\n\t}\r\n\r\n\tprivate _currentPlantId: int;\r\n\tprivate _oRouter: Router\r\n\tprivate _currentRouteName: string;\r\n\r\n\tonInit() {\r\n\t\tsuper.onInit();\r\n\t\tthis._oRouter = this.oComponent.getRouter();\r\n\t\tthis._oRouter.attachBeforeRouteMatched(this._onBeforeRouteMatched, this);\r\n\t\tthis._oRouter.attachRouteMatched(this._onRouteMatched, this);\r\n\r\n\t\tthis.imageEventHandlers = new ImageEventHandlers(this.applyToFragment.bind(this));\r\n\t}\r\n\r\n\tprivate _onBeforeRouteMatched(oEvent: Event) {\r\n\t\t// called each time any route is triggered, i.e. each time one of the views change\r\n\t\t// updates the layout model: inserts the new layout into it\r\n\t\tvar oLayoutModel = this.oComponent.getModel();\r\n\t\tvar sLayout = oEvent.getParameter('arguments').layout; // e.g. \"TwoColumnsMidExpanded\"\r\n\r\n\t\t// If there is no layout parameter, query for the default level 0 layout (normally OneColumn)\r\n\t\tif (!sLayout) {\r\n\t\t\tvar oNextUIState = this.oComponent.getHelper().getNextUIState(0);\r\n\t\t\tsLayout = oNextUIState.layout;\r\n\t\t}\r\n\r\n\t\t// Update the layout of the FlexibleColumnLayout\r\n\t\tif (sLayout) {\r\n\t\t\toLayoutModel.setProperty(\"/layout\", sLayout);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _onRouteMatched(oEvent: Event) {\r\n\t\tvar sRouteName = oEvent.getParameter(\"name\"),\r\n\t\t\toArguments = oEvent.getParameter(\"arguments\");\r\n\r\n\t\tthis._updateUIElements();\r\n\r\n\t\t// Save the current route name\r\n\t\tthis._currentRouteName = sRouteName;  // e.g. \"detail\"\r\n\t\t// this.currentPlant = oArguments.product;\r\n\t\tthis._currentPlantId = oArguments.plant_id;\r\n\t}\r\n\r\n\tprotected applyToFragment(sId: string, fn: Function, fnInit?: Function) {\r\n\t\t// to enable vs code to connect fragments with a controller, we may not mention\r\n\t\t// the Dialog/Popover ID in the base controller; therefore we have these names\r\n\t\t// hardcoded in each controller \r\n\t\tsuper.applyToFragment(sId, fn, fnInit, this.mIdToFragment);\r\n\t}\r\n\r\n\tpublic onStateChanged(oEvent: Event) {\r\n\t\tthis._updateUIElements();\r\n\t\t\r\n\t\t// Replace the URL with the new layout if a navigation arrow was used\r\n\t\tconst bIsNavigationArrow = oEvent.getParameter(\"isNavigationArrow\");\r\n\t\tif (bIsNavigationArrow) {\r\n\t\t\tconst sLayout = oEvent.getParameter(\"layout\");  // e.g. \"OneColumn\"\r\n\t\t\tthis._oRouter.navTo(this._currentRouteName, { \r\n\t\t\t\tlayout: sLayout, \r\n\t\t\t\tplant_id: this._currentPlantId \r\n\t\t\t// }, true);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _updateUIElements() {\r\n\t\t// Update the close/fullscreen buttons visibility\r\n\t\tvar oUIState: UIState = this.oComponent.getHelper().getCurrentUIState();\r\n\r\n\t\t// somehow with the migration to TS, starting the page with a TwoColumnLayout as URL does\r\n\t\t// not work. Therefore, we need an ugly hack here. Todo: Make it better.\r\n\t\tif (window.location.hash.includes('TwoColumnsMidExpanded')){\r\n\t\t\toUIState.layout = \"TwoColumnsMidExpanded\"\r\n\t\t\toUIState.columnsVisibility!.midColumn = true\r\n\t\t} else if (window.location.hash.includes('ThreeColumnsMidExpanded')){\r\n\t\t\toUIState.layout = \"ThreeColumnsMidExpanded\"\r\n\t\t\toUIState.columnsVisibility!.midColumn = true\r\n\t\t\toUIState.columnsVisibility!.endColumn = true\r\n\t\t}\r\n\r\n\t\tvar oModel = this.oComponent.getModel();\r\n\t\tif (oModel) \r\n\t\t\toModel.setData(oUIState);\r\n\t}\r\n\r\n\tpublic onExit() {\r\n\t\tthis._oRouter.detachRouteMatched(this._onRouteMatched, this);\r\n\t\tthis._oRouter.detachBeforeRouteMatched(this._onBeforeRouteMatched, this);\r\n\t}\r\n\r\n\tpublic onShellBarMenuButtonPressed(oEvent: Event) {\r\n\t\tvar oSource = oEvent.getSource();\r\n\t\tthis.applyToFragment('menuShellBarMenu', (oMenu: Menu)=>{\r\n\t\t\toMenu.openBy(oSource, true);\r\n\t\t})\r\n\t}\r\n\r\n\tgenerateMissingThumbnails() {\r\n\t\t$.ajax({\r\n\t\t\turl: Util.getServiceUrl('generate_missing_thumbnails'),\r\n\t\t\ttype: 'POST',\r\n\t\t\tcontentType: \"application/json\",\r\n\t\t\tcontext: this\r\n\t\t})\r\n\t\t\t.done(this.onReceiveSuccessGeneric)\r\n\t\t\t.fail(ModelsHelper.getInstance(undefined).onReceiveErrorGeneric.bind(this, 'Generate Missing Thumbnails (POST)'));\r\n\t}\r\n\r\n\tonPressButtonSave() {\r\n\t\tthis.savePlantsAndImages();  // implemented in BaseController\r\n\t}\r\n\r\n\tonPressButtonRefreshData() {\r\n\t\t//refresh data from backend\r\n\r\n\t\t// check if there are any unsaved changes\r\n\t\tvar aModifiedPlants = this.getModifiedPlants();\r\n\t\tvar aModifiedImages = this.getModifiedImages();\r\n\t\tvar aModifiedTaxa = this.getModifiedTaxa();\r\n\r\n\t\t// if modified data exists, ask for confirmation if all changes should be undone\r\n\t\tif ((aModifiedPlants.length !== 0) || (aModifiedImages.length !== 0) || (aModifiedTaxa.length !== 0)) {\r\n\t\t\tvar bCompact = !!this.getView().$().closest(\".sapUiSizeCompact\").length;\r\n\t\t\tMessageBox.confirm(\r\n\t\t\t\t\"Revert all changes?\", {\r\n\t\t\t\tonClose: this._onCloseRefreshConfirmationMessageBox.bind(this),\r\n\t\t\t\tstyleClass: bCompact ? \"sapUiSizeCompact\" : \"\"\r\n\t\t\t}\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\t//no modified data, therefore call handler directly with 'OK'\r\n\t\t\tthis._onCloseRefreshConfirmationMessageBox(Action.OK);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _onCloseRefreshConfirmationMessageBox(eAction: Action) {\r\n\t\t//callback for onPressButtonUndo's confirmation dialog\r\n\t\t//revert all changes and return to data since last save or loading of site\r\n\t\tif (eAction === Action.OK) {\r\n\t\t\tUtil.startBusyDialog('Loading...', 'Loading plants, taxa, and images');\r\n\r\n\t\t\tvar oModelsHelper = ModelsHelper.getInstance();\r\n\t\t\toModelsHelper.reloadPlantsFromBackend();\r\n\t\t\t// oModelsHelper.reloadImagesFromBackend();\r\n\t\t\toModelsHelper.resetImagesRegistry();\r\n\t\t\t// todo: reload current plant's images\r\n\t\t\toModelsHelper.reloadTaxaFromBackend();\r\n\t\t}\r\n\t}\r\n\r\n\tonOpenFragmentUploadPhotos(oEvent: Event) {\r\n\t\tthis.applyToFragment('dialogUploadPhotos',\r\n\t\t\t(oDialog: Dialog) => oDialog.open(),\r\n\t\t\t(oDialog: Dialog) => {\r\n\t\t\t\t// executed only once\r\n\t\t\t\tvar oMultiInputKeywords = <MultiInput>this.byId('multiInputUploadImageKeywords');\r\n\t\t\t\toMultiInputKeywords.addValidator(this._keywordValidator);\r\n\t\t\t\t// oMultiInputKeywords.addValidator(function (args) {\r\n\t\t\t\t// \tvar text = args.text;\r\n\t\t\t\t// \treturn new Token({ key: text, text: text });\r\n\t\t\t\t// });\r\n\t\t\t});\r\n\t}\r\n\r\n\tprivate _keywordValidator(args: any){\r\n\t\t// validator function for Keywords MultiInput\r\n\t\tvar text = args.text;\r\n\t\treturn new Token({ key: text, text: text });\r\n\t}\r\n\r\n\tuploadPhotosToServer(oEvent: Event) {\r\n\t\t//triggered by upload-button in fragment after selecting files\r\n\t\tvar oFileUploader = <FileUploader>this.byId(\"idPhotoUpload\");\r\n\t\tif (!oFileUploader.getValue()) {\r\n\t\t\tMessageToast.show(\"Choose a file first\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tUtil.startBusyDialog('Uploading...', 'Image File(s)');\r\n\t\tvar sUrl = Util.getServiceUrl('images/');\r\n\t\toFileUploader.setUploadUrl(sUrl);\r\n\r\n\t\t// the images may be tagged with plants already upon uploading\r\n\t\tvar aSelectedTokens = (<MultiInput>this.byId('multiInputUploadImagePlants')).getTokens();\r\n\t\tvar aSelectedPlantIds = <int[]>[];\r\n\t\tif (aSelectedTokens.length > 0) {\r\n\t\t\tfor (var i = 0; i < aSelectedTokens.length; i++) {\r\n\t\t\t\taSelectedPlantIds.push(aSelectedTokens[i].getProperty('key'));\r\n\t\t\t}\r\n\t\t} \r\n\r\n\t\t// same applies to tagging with keywords\r\n\t\tvar aSelectedKeywordTokens = (<MultiInput>this.byId('multiInputUploadImageKeywords')).getTokens();\r\n\t\tvar aSelectedKeywords = <string[]>[];\r\n\t\tif (aSelectedKeywordTokens.length > 0) {\r\n\t\t\tfor (i = 0; i < aSelectedKeywordTokens.length; i++) {\r\n\t\t\t\taSelectedKeywords.push(aSelectedKeywordTokens[i].getProperty('key'));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// oFileUploader.setAdditionalData(); //from earlier uploads\r\n\t\t}\r\n\r\n\t\tvar oAdditionalData = <PImageUploadedMetadata>{\r\n\t\t\t'plants': aSelectedPlantIds,\r\n\t\t\t'keywords': aSelectedKeywords\r\n\t\t};\r\n\t\t// set even if empty (may be filled from earlier run)\r\n\t\t//the file uploader control can only send strings\r\n\t\toFileUploader.setAdditionalData(JSON.stringify(oAdditionalData));\r\n\t\toFileUploader.upload();\r\n\t}\r\n\r\n\thandleUploadComplete(oEvent: Event) {\r\n\t\t// handle message, show error if required\r\n\t\tvar sResponse = oEvent.getParameter('responseRaw');\r\n\t\tif (!sResponse) {\r\n\t\t\tvar sMsg = \"Upload complete, but can't determine status. No response received.\";\r\n\t\t\tMessageUtil.getInstance().addMessage(MessageType.Warning, sMsg, undefined, undefined);\r\n\t\t\tUtil.stopBusyDialog();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar oResponse = JSON.parse(sResponse);\r\n\t\tif (!oResponse) {\r\n\t\t\tsMsg = \"Upload complete, but can't determine status. Can't parse Response.\";\r\n\t\t\tMessageUtil.getInstance().addMessage(MessageType.Warning, sMsg, undefined, undefined);\r\n\t\t\tUtil.stopBusyDialog();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tMessageUtil.getInstance().addMessageFromBackend(oResponse.message);\r\n\t\t// add to images registry and refresh current plant's images\r\n\t\tif (oResponse.images.length > 0) {\r\n\t\t\tModelsHelper.getInstance().addToImagesRegistry(oResponse.images);\r\n\r\n\t\t\t// plant's images model and untagged images model might need to be refreshed\r\n\t\t\tthis.resetImagesCurrentPlant(this._currentPlantId);\r\n\t\t\tthis.oComponent.getModel('images').updateBindings(false);\r\n\r\n\t\t\t// this.resetUntaggedPhotos();\r\n\t\t\tthis.oComponent.resetUntaggedPhotos();\r\n\t\t\tthis.oComponent.getModel('untaggedImages').updateBindings(false);\r\n\t\t}\r\n\r\n\t\tUtil.stopBusyDialog();\r\n\t\tMessageToast.show(oResponse.message.message);\r\n\t\tthis.applyToFragment('dialogUploadPhotos', (oDialog: Dialog) => oDialog.close());\r\n\t}\r\n\r\n\tonIconPressAssignDetailsPlant(oEvent: Event) {\r\n\t\t// triggered by assign-to-current-plant button in image upload dialog\r\n\t\t// add current plant to plants multicombobox\r\n\t\tvar plant = this.getPlantById(this._currentPlantId);\r\n\t\tif (!plant) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// add to multicombobox if not a duplicate\r\n\t\tvar oControl = <MultiInput>this.byId('multiInputUploadImagePlants');\r\n\t\tif (!oControl.getTokens().find(ele => ele.getProperty('key') == plant.plant_name)) {\r\n\t\t\tvar oPlantToken = new Token({\r\n\t\t\t\t\tkey: (<int>plant.id).toString(),\r\n\t\t\t\t\ttext: plant.plant_name\r\n\t\t\t\t});\r\n\t\t\toControl.addToken(oPlantToken);\r\n\t\t}\r\n\t}\r\n\r\n\tonShowUntagged(oEvent: Event) {\r\n\t\t//we need the currently selected plant as untagged requires a middle column\r\n\t\t//(button triggering this is only visible if middle column is visible)\r\n\t\t//ex. detail/146/TwoColumnsMidExpanded\" --> 146\r\n\t\t//ex. detail/160 --> 160\r\n\t\t// var sCurrentHash = this.oComponent.getRouter().oHashChanger.getHash();\r\n\t\t// var aHashItems = sCurrentHash.split('/');\r\n\t\t// if(!([2,3].includes(aHashItems.length)) || aHashItems[0] !== 'detail' ){\r\n\t\t// \tMessageToast.show('Technical issue with browser hash. Refresh website.');\r\n\t\t// \treturn;\r\n\t\t// }\r\n\t\t// var iPlantIndex = aHashItems[1];\r\n\r\n\t\tvar oNextUIState = this.oComponent.getHelper().getNextUIState(2);\r\n\t\t// this._oRouter.navTo(\"untagged\", {layout: oNextUIState.layout, \r\n\t\t// \t\t\t\t\t\t\t\tproduct: iPlantIndex});\r\n\r\n\t\tthis._oRouter.navTo(\"untagged\", {\r\n\t\t\tlayout: oNextUIState.layout,\r\n\t\t\tplant_id: this._currentPlantId\r\n\t\t});\r\n\t}\r\n\r\n\tonShellBarSearch(oEvent: Event) {\r\n\t\t// navigate to selected plant\r\n\t\tvar plantId = oEvent.getParameter('suggestionItem').getBindingContext('plants').getObject().id;\r\n\t\tNavigation.getInstance().navToPlantDetails(plantId);\r\n\t}\r\n\r\n\tonShellBarSuggest(oEvent: Event) {\r\n\t\tvar sValue = oEvent.getParameter(\"suggestValue\"),\r\n\t\t\taFilters = [];\r\n\r\n\t\t// we always filter on only active plants for search field\r\n\t\tvar oFilter = new Filter(\"active\", FilterOperator.EQ, true);\r\n\r\n\t\t// create or-connected filter for multiple fields based on query value\r\n\t\tif (sValue) {\r\n\t\t\taFilters = [\r\n\t\t\t\tnew Filter([\r\n\t\t\t\t\tnew Filter(\"plant_name\", function (sText) {\r\n\t\t\t\t\t\treturn (sText || \"\").toUpperCase().indexOf(sValue.toUpperCase()) > -1;\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tnew Filter(\"botanical_name\", function (sText) {\r\n\t\t\t\t\t\treturn (sText || \"\").toUpperCase().indexOf(sValue.toUpperCase()) > -1;\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tnew Filter(\"id\", FilterOperator.EQ, sValue)\r\n\t\t\t\t])\r\n\t\t\t];\r\n\r\n\t\t\tvar oOrFilter = new Filter({\r\n\t\t\t\tfilters: aFilters,\r\n\t\t\t\tand: false\r\n\t\t\t});\r\n\t\t\t// connect via <<and>>\r\n\t\t\toFilter = new Filter({\r\n\t\t\t\tfilters: [oFilter, oOrFilter],\r\n\t\t\t\tand: true\r\n\t\t\t});\r\n\t\t}\r\n\t\tconst oSearchField = <SearchManager>this.byId(\"searchField\");\r\n\t\tconst oSuggestionItemsBinding = <ListBinding>oSearchField.getBinding(\"suggestionItems\");\r\n\t\toSuggestionItemsBinding.filter(oFilter);\r\n\t\t//@ts-ignore  somehow missing in definitions\r\n\t\toSearchField.suggest();\r\n\t}\r\n\r\n\tonShellBarNotificationsPressed(oEvent: Event) {\r\n\t\t// open messages popover fragment, called by shellbar button in footer\r\n\t\tvar oSource = oEvent.getSource();\r\n\t\tthis.applyToFragment('MessagePopover', (oPopover: Popover) => {\r\n\t\t\toPopover.isOpen() ? oPopover.close() : oPopover.openBy(oSource, true);\r\n\t\t});\r\n\t}\r\n\r\n\tonClearMessages(oEvent: Event) {\r\n\t\t//clear messages in message popover fragment\r\n\t\tMessageUtil.getInstance().removeAllMessages();\r\n\t}\r\n\r\n\tonHomeIconPressed(oEvent: Event) {\r\n\t\t// go to home site, i.e. master view in single column layout\r\n\t\tvar oHelper = this.oComponent.getHelper();\r\n\t\t//@ts-ignore\r\n\t\tvar sNextLayoutType = oHelper.getDefaultLayouts().defaultLayoutType;\r\n\t\tthis._oRouter.navTo(\"master\", { layout: sNextLayoutType });\r\n\t}\r\n\r\n\tonHandleTypeMissmatch(oEvent: Event) {\r\n\t\t// handle file type missmatch for image upload\r\n\t\t// note: there's a same-nemed method in detail controller handling uploads there\r\n\t\tconst oFileUpload = <FileUploader>oEvent.getSource();\r\n\t\tconst sFiletype = oEvent.getParameter(\"fileType\")\r\n\t\tthis.imageEventHandlers.handleTypeMissmatch(oFileUpload, sFiletype);\r\n\t}\r\n\r\n}"],"mappings":"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"}