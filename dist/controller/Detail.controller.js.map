{"version":3,"file":"Detail.controller.js","names":["BaseController","formatter","Navigation","MessageUtil","EventsUtil","ImageToTaxon","PropertiesUtil","ImageEventHandlers","TaxonomyUtil","ModelsHelper","MessageType","Detail","modelsHelper","getInstance","mIdToFragment","dialogRenamePlant","dialogCancellation","menuDeleteTag","dialogAddTag","dialogCreateDescendant","dialogEvent","dialogAssignEventToImage","dialogClonePlant","dialogFindSpecies","dialogLeafletMap","dialogEditPropertyValue","dialogAddProperties","dialogNewPropertyName","dialogEditSoil","onInit","oSuggestionsModel","oComponent","getModel","eventsUtil","applyToFragment","bind","getData","propertiesUtil","imageEventHandlers","oLayoutModel","setProperty","oRouter","getRoute","attachPatternMatched","_onPatternMatched","oEventsList","byId","bindAggregation","path","templateShareable","factory","eventsListFactory","sorter","Sorter","oEvent","Util","startBusyDialog","_currentPlantId","parseInt","getParameter","plant_id","_bindModelsForCurrentPlant","oModelPlants","oPromise","dataLoaded","then","_bindPlantsModelDeferred","_loadBindEventsModel","imagesPlantsLoaded","has","_requestImagesForPlant","resetImagesCurrentPlant","getView","bindElement","model","oEventsModel","getProperty","_loadEventsForCurrentPlant","aPlants","_currentPlantIndex","findIndex","plant","id","MessageToast","show","sPathCurrentPlant","_oCurrentPlant","parent_plant","parent_plant_pollen","_bindTaxonOfCurrentPlantDeferred","_loadBindProperties","oModelProperties","loadPropertiesForCurrentPlant","uri","$","ajax","url","getServiceUrl","context","async","done","_onReceivingEventsForPlant","fail","onReceiveErrorGeneric","plantId","oData","aEvents","events","oEventsDataClone","getClonedObject","addMessageFromBackend","message","oPlant","taxon_id","sId","fn","fnInit","handleFullScreen","sNextLayout","navTo","layout","handleExitFullScreen","handleClose","onChangeActiveSwitch","oSwitch","getSource","oView","Fragment","load","name","getId","controller","oControl","oPopover","setDateValue","Date","addDependent","openBy","onIconPressSetPreview","oSource","sPathCurrentImage","getBindingContext","getPath","oCurrentImage","oCurrentPlant","sUrlOriginal","s","JSON","stringify","updateBindings","onSetInactive","aReasons","oReasonSelected","find","ele","selected","getObject","cancellation_reason","text","oDatePicker","oDate","getDateValue","sDateFormatted","formatDate","cancellation_date","close","onChangeParent","parentPlant","plant_name","trim","parentalPlant","undefined","active","data","onPressGoToPlant","parentPlantId","navToPlantDetails","handleErrorMessageBox","onSuggestNursery","aFilters","sTerm","push","Filter","FilterOperator","Contains","oInput","oListBinding","getBinding","filter","setFilterSuggests","onPressButtonDeletePlant","sPlant","length","oMenuItem","bCompact","closest","mOptions","title","stretch","onClose","_confirmDeletePlant","actions","styleClass","MessageBox","confirm","onPressButtonClonePlant","aModifiedPlants","getModifiedPlants","aModifiedImages","getModifiedImages","aModifiedTaxa","getModifiedTaxa","o","clonePlantName","_generatePlantNameWithRomanizedSuffix","setValue","open","sAction","type","contentType","_onPlantDeleted","oPlantDeleted","oMsg","sStatus","oReturnData","stopBusyDialog","onAjaxSimpleSuccess","aPlantsData","PlantsCollection","iPosition","indexOf","splice","refresh","aPlantsDataClone","oPlantsDataClone","oPlantClone","element","onToggleEditMode","sCurrentType","getType","setType","onPressTag","sPathTag","oMenu","pressDeleteTag","oContext","sPathItem","iIndex","substr","lastIndexOf","tags","onOpenAddTagDialog","oButton","p","_initTagDialog","mObjectStatusSelection","ObjectStatusCollection","Value","oTagTypesModel","JSONModel","setModel","onAddTag","oModelTagTypes","dDialogData","oSelectedElement","bFound","oTag","dNewTag","state","onPressButtonRenamePlant","oDialog","onLiveChangeNewPlantName","sText","setEnabled","onPressButtonSubmitClonePlant","sClonedPlantName","getValue","isPlantNameInPlantsModel","_onReceivingPlantCloned","oBackendResultPlantCloned","oPlantSaved","onPressButtonSubmitRenamePlant","sNewPlantName","dPayload","_onReceivingPlantNameRenamed","reloadPlantsFromBackend","resetImagesRegistry","reloadTaxaFromBackend","encodeURIComponent","_onReceivingImagesForPlant","addPhotosToRegistry","add","onPressButtonCreateDescendantPlant","defaultPropagationType","descendantPlantDataInit","getPlantById","modelDescendant","updatePlantNameSuggestion","onDescendantDialogCreate","descendantPlantData","propagationType","getSuggestionItem","hasParentPlantPollen","parentPlantPollen","descendantPlantName","getPlantByName","newPlant","field_number","geographic_origin","oParentPlantPollen","saveNewPlant","baseName","beginWith","i","latinNumber","romanize","suggestedName","Error","_generateNewPlantNameSuggestion","oParentPlant","botanical_name","reRomanNumber","romanNumberMatch","match","romanNumber","pop","arabize","oCheckbox","getSelected","oDescendantModel","oModelDescendant","onDescendantDialogChangeParent","parentType","parentPlantName","onDescendantDialogSwitchParents","onSwitchImageEditDescription","oModelStatus","onOpenFindSpeciesDialog","oKewResultsModel","onButtonFindSpecies","sSpecies","bIncludeKew","bSearchForGenus","oModelKewSearchResults","findSpecies","onFindSpeciesChoose","oSelectedItem","getSelectedItem","sCustomName","getText","_getFragment","chooseSpecies","onFindSpeciesTableSelectedOrDataUpdated","oText","oInputAdditionalName","findSpeciesTableSelectedOrDataUpdated","onFindSpeciesAdditionalNameLiveChange","findSpeciesAdditionalNameLiveChange","onDialogFindSpeciesBeforeOpen","findSpeciesBeforeOpen","onShowMap","onRefetchGbifImages","gbif_id","oTaxonModel","refetchGbifImages","onCloseLeafletMap","afterCloseLeafletMap","destroy","onIconPressUnassignImageFromTaxon","unassignImageFromTaxon","onIconPressAssignImageToTaxon","assignImageToTaxon","onEditPropertyValueDelete","oPropertiesModel","oPropertiesTaxaModel","oPropertiesBindingContext","editPropertyValueDelete","onCloseDialogEditPropertyValue","evt","onCloseAddPropertiesDialog","onOpenDialogAddProperty","oBtnAddProperty","oModelPropertyNames","openDialogAddProperty","onCloseNewPropertyNameDialog","closeNewPropertyNameDialog","onAddProperty","addProperty","onNewPropertyNameCreate","createNewPropertyName","onOpenDialogNewProperty","openDialogNewProperty","onEditPropertyValueTag","sPathPropertyValue","activateRadioButton","sRadioButtonId","oRadioButton","setSelected","onSoilMixSelect","oContexts","getSelectedContexts","oSelectedSoil","oModelNewEvent","oSelectedDataNew","onOpenDialogAddEvent","_loadSoils","oI18Model","oResourceBundle","getResourceBundle","setTitle","oBtnSave","setText","mEventEditData","_getInitialEvent","mode","oEventEditModel","onEditEvent","oSelectedEvent","editEvent","onOpenDialogEditSoil","oSoil","openDialogEditSoil","onOpenDialogNewSoil","openDialogNewSoil","onAddOrEditEvent","addOrEditEvent","onUpdateOrCreateSoil","oEditedSoil","oSoilsModel","updateOrCreateSoil","onCancelEditSoil","onDeleteEventsTableRow","deleteEventsTableRow","onIconPressUnassignImageFromEvent","sEventsBindingPath","getBindingContextPath","unassignImageFromEvent","onAssignEventToImage","oPopoverAssignEventToImage","assignEventToImage","onIconPressAssignImageToEvent","assignImageToEvent","onAddPlantNameToUntaggedImage","oImage","oSelectedSuggestion","oSelectedPlant","oImagesModel","assignPlantToImage","onPressImagePlantToken","oPlantTag","navToPlant","onIconPressDeleteImage","confirmDeleteImage","onInputImageNewKeywordSubmit","sKeyword","getParent","aKeywords","keywords","keyword","onTokenizerKeywordImageTokenDelete","aTokens","oToken","sKeywordTokenKey","getKey","oTokenizer","removeKeywordImageTokenFromModel","onTokenizerPlantImageTokenDelete","sPlantTokenKey","removePlantImageTokenFromModel","onUploadPlantPhotosToServer","oFileUploader","sPath","sUrl","setUploadUrl","upload","handleUploadPlantImagesAborted","handleUploadPlantImagesComplete","oResponse","parse","sMsg","addMessage","Warning","images","addToImagesRegistry","onHandleTypeMissmatch","oFileUpload","sFiletype","handleTypeMissmatch"],"sources":["../../src/controller/Detail.controller.ts"],"sourcesContent":["import BaseController from \"plants/ui/controller/BaseController\"\r\nimport JSONModel from \"sap/ui/model/json/JSONModel\"\r\nimport Filter from \"sap/ui/model/Filter\"\r\nimport formatter from \"plants/ui/model/formatter\"\r\nimport MessageBox from \"sap/m/MessageBox\"\r\nimport MessageToast from \"sap/m/MessageToast\"\r\nimport * as Util from \"plants/ui/customClasses/Util\";\r\nimport Navigation from \"plants/ui/customClasses/Navigation\"\r\nimport MessageUtil from \"plants/ui/customClasses/MessageUtil\"\r\nimport EventsUtil from \"plants/ui/customClasses/EventsUtil\"\r\nimport Sorter from \"sap/ui/model/Sorter\"\r\nimport FilterOperator from \"sap/ui/model/FilterOperator\"\r\nimport ImageToTaxon from \"plants/ui/customClasses/ImageToTaxon\"\r\nimport PropertiesUtil from \"plants/ui/customClasses/PropertiesUtil\"\r\nimport ImageEventHandlers from \"plants/ui/customClasses/ImageEventHandlers\"\r\nimport TaxonomyUtil from \"plants/ui/customClasses/TaxonomyUtil\"\r\nimport ModelsHelper from \"plants/ui/model/ModelsHelper\"\r\nimport Fragment from \"sap/ui/core/Fragment\"\r\nimport Dialog from \"sap/m/Dialog\"\r\nimport { PConfirmation } from \"../definitions/MessagesFromBackend\"\r\nimport {\r\n\tNewPlant, ObjectStatusCollection,\r\n\tObjectStatusData\r\n} from \"../definitions/entities\"\r\nimport { IdToFragmentMap } from \"../definitions/SharedLocal\"\r\nimport {PEvent, PEvents, PResultsEventResource, PRSoil} from \"../definitions/EventsFromBackend\"\r\nimport { EventEditData, SoilEditData } from \"../definitions/EventsLocal\"\r\nimport DatePicker from \"sap/m/DatePicker\"\r\nimport Event from \"sap/ui/base/Event\"\r\nimport Control from \"sap/ui/core/Control\"\r\nimport Popover from \"sap/m/Popover\"\r\nimport Input from \"sap/m/Input\"\r\nimport Icon from \"sap/ui/core/Icon\"\r\nimport ListBinding from \"sap/ui/model/ListBinding\"\r\nimport MenuItem from \"sap/m/MenuItem\"\r\nimport OverflowToolbarButton from \"sap/m/OverflowToolbarButton\"\r\nimport ObjectStatus from \"sap/m/ObjectStatus\"\r\nimport { MessageType } from \"sap/ui/core/library\"\r\nimport FileUploader from \"sap/ui/unified/FileUploader\"\r\nimport Button from \"sap/m/Button\"\r\nimport CheckBox from \"sap/m/CheckBox\"\r\nimport Menu from \"sap/m/Menu\"\r\nimport Table from \"sap/m/Table\"\r\nimport GenericTag from \"sap/m/GenericTag\"\r\nimport Context from \"sap/ui/model/Context\"\r\nimport Component from \"../Component\"\r\nimport RadioButton from \"sap/m/RadioButton\"\r\nimport List from \"sap/m/List\"\r\nimport GridListItem from \"sap/f/GridListItem\"\r\nimport { PImage, PImagePlantTag, PKeyword } from \"../definitions/ImageFromBackend\"\r\nimport Token from \"sap/m/Token\"\r\nimport { CancellationReason, PAssociatedPlantExtractForPlant, PPlant, PPlantTag, PResultsPlantCloned } from \"../definitions/PlantsFromBackend\"\r\nimport { LDescendantPlantInput, LPropagationTypeData } from \"../definitions/PlantsLocal\"\r\nimport Tokenizer from \"sap/m/Tokenizer\"\r\nimport ColumnListItem from \"sap/m/ColumnListItem\"\r\nimport ResourceModel from \"sap/ui/model/resource/ResourceModel\"\r\nimport ResourceBundle from \"sap/base/i18n/ResourceBundle\"\r\nimport { LCancellationReasonChoice } from \"../definitions/PlantsLocal\"\r\n\r\n/**\r\n * @namespace plants.ui.controller\r\n */\r\nexport default class Detail extends BaseController {\r\n\t// container for xml view control event handlers\r\n\tformatter = new formatter();\r\n\tprivate eventsUtil: EventsUtil;\r\n\tprivate propertiesUtil: PropertiesUtil;\r\n\tprivate ImageToTaxon: ImageToTaxon = new ImageToTaxon();\r\n\r\n\t// helper classes for controllers\r\n\tprivate modelsHelper = ModelsHelper.getInstance();\r\n\tprivate imageEventHandlers: ImageEventHandlers;\r\n\t// TraitUtil = TraitUtil.getInstance()\r\n\tprivate TaxonomyUtil = TaxonomyUtil.getInstance();\r\n\tprivate _currentPlantId: int;\r\n\tprivate _oCurrentPlant: PPlant;\r\n\tprivate _currentPlantIndex: int;  // index of current plant in plants model\r\n\tprivate oLayoutModel: JSONModel;\r\n\r\n\tprivate mIdToFragment = <IdToFragmentMap>{\r\n\t\tdialogRenamePlant: \"plants.ui.view.fragments.detail.DetailRename\",\r\n\t\tdialogCancellation: \"plants.ui.view.fragments.detail.DetailCancellation\",\r\n\t\tmenuDeleteTag: \"plants.ui.view.fragments.detail.DetailTagDelete\",\r\n\t\tdialogAddTag: \"plants.ui.view.fragments.detail.DetailTagAdd\",\r\n\t\tdialogCreateDescendant: \"plants.ui.view.fragments.detail.DetailCreateDescendant\",\r\n\t\tdialogEvent: \"plants.ui.view.fragments.events.AddEvent\",\r\n\t\tdialogAssignEventToImage: \"plants.ui.view.fragments.events.DetailAssignEvent\",\r\n\t\tdialogClonePlant: \"plants.ui.view.fragments.detail.DetailClone\",\r\n\t\tdialogFindSpecies: \"plants.ui.view.fragments.detail.DetailFindSpecies\",\r\n\t\tdialogLeafletMap: \"plants.ui.view.fragments.taxonomy.DetailTaxonomyMap\",\r\n\t\tdialogEditPropertyValue: \"plants.ui.view.fragments.properties.EditPropertyValue\",\r\n\t\tdialogAddProperties: \"plants.ui.view.fragments.properties.AvailableProperties\",\r\n\t\tdialogNewPropertyName: \"plants.ui.view.fragments.properties.NewPropertyName\",\r\n\t\tdialogEditSoil: \"plants.ui.view.fragments.events.EditSoil\",\r\n\t}\r\n\r\n\tonInit() {\r\n\t\tsuper.onInit();\r\n\r\n\t\tconst oSuggestionsModel = <JSONModel>this.oComponent.getModel('suggestions');\r\n\t\tthis.eventsUtil = EventsUtil.getInstance(this.applyToFragment.bind(this), oSuggestionsModel.getData());\r\n\t\tthis.propertiesUtil = PropertiesUtil.getInstance(this.applyToFragment.bind(this));\r\n\t\tthis.imageEventHandlers = new ImageEventHandlers(this.applyToFragment.bind(this));\r\n\r\n\t\tthis.oLayoutModel = this.oComponent.getModel();\r\n\r\n\t\t// default: view mode for plants information\r\n\t\tthis.oComponent.getModel('status').setProperty('/details_editable', false);\r\n\r\n\t\tthis.oRouter.getRoute(\"detail\").attachPatternMatched(this._onPatternMatched, this);\r\n\t\tthis.oRouter.getRoute(\"untagged\").attachPatternMatched(this._onPatternMatched, this);\r\n\r\n\t\t// bind factory function to events list aggregation binding\r\n\t\tvar oEventsList = this.byId(\"eventsList\");\r\n\t\toEventsList.bindAggregation(\"items\",\r\n\t\t\t{\r\n\t\t\t\tpath: \"events>\",\r\n\t\t\t\ttemplateShareable: false,\r\n\t\t\t\t// factory: this.EventsUtil.eventsListFactory.bind(this),\r\n\t\t\t\tfactory: this.eventsUtil.eventsListFactory.bind(this),\r\n\t\t\t\tsorter: new Sorter('date', true)  // descending by date\r\n\t\t\t});\r\n\r\n\t\tthis.oComponent.getModel('status').setProperty('/images_editable', false);\r\n\t}\r\n\r\n\tprivate _onPatternMatched(oEvent: Event) {\r\n\t\t// if accessed directly, we might not have loaded the plants model, yet\r\n\t\t// in that case, we have the plant_id, but not the position of that plant\r\n\t\t// in the plants model index. so we must defer binding that plant to the view\r\n\r\n\t\tUtil.startBusyDialog();\r\n\r\n\t\t//bind taxon of current plant and events to view (deferred as we may not know the plant name here, yet)\r\n\t\tthis._currentPlantId = parseInt(oEvent.getParameter(\"arguments\").plant_id || this._currentPlantId || \"0\");\r\n\t\tthis._bindModelsForCurrentPlant();\t\t\t\t\r\n\t}\r\n\r\n\tprivate _bindModelsForCurrentPlant() {\r\n\t\t//we need to set the taxon deferred as well as we might not have the taxon_id, yet\r\n\t\t//we need to wait for the plants model to be loaded\r\n\t\t//same applies to the events model which requires the plant_id\r\n\t\tvar oModelPlants = this.oComponent.getModel('plants');\r\n\t\tvar oPromise = oModelPlants.dataLoaded();\r\n\t\toPromise.then(this._bindPlantsModelDeferred.bind(this),\r\n\t\t\tthis._bindPlantsModelDeferred.bind(this));\r\n\r\n\t\t//loading and binding events requires only the plant id\r\n\t\tthis._loadBindEventsModel();\r\n\r\n\t\t// if we haven't loaded images for this plant, yet, we do so before generating the images model\r\n\t\tif (!this.oComponent.imagesPlantsLoaded.has(this._currentPlantId)) {\r\n\t\t\tthis._requestImagesForPlant(this._currentPlantId);\r\n\t\t} else {\r\n\t\t\tthis.resetImagesCurrentPlant(this._currentPlantId);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _loadBindEventsModel() {\r\n\t\t//load and bind events\r\n\t\t//bind current view to that property in events model\r\n\t\tthis.getView().bindElement({\r\n\t\t\tpath: \"/PlantsEventsDict/\" + this._currentPlantId,\r\n\t\t\tmodel: \"events\"\r\n\t\t});\r\n\r\n\t\t//load only on first load of that plant, otherwise we would overwrite modifications\r\n\t\t//to the plant's events\r\n\t\tvar oEventsModel = this.oComponent.getModel('events');\r\n\t\tif (!oEventsModel.getProperty('/PlantsEventsDict/' + this._currentPlantId + '/')) {\r\n\t\t\tthis._loadEventsForCurrentPlant();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _bindPlantsModelDeferred() {\r\n\t\t//triggered upon data loading finished of plants model, i.e. we now have the taxon_id, plant_name,\r\n\t\t// position of plant_id in the plants model array, etc.\r\n\r\n\t\t// get current plant's position in plants model array\r\n\t\tvar aPlants = <PPlant[]>this.oComponent.getModel('plants').getProperty('/PlantsCollection');\r\n\t\tthis._currentPlantIndex = aPlants.findIndex(plant => plant.id === this._currentPlantId);\r\n\t\tif (this._currentPlantIndex === -1) {\r\n\t\t\tMessageToast.show('Plant ID ' + this._currentPlantId + ' not found. Redirecting.');\r\n\t\t\tthis._currentPlantIndex = 0;\r\n\t\t}\r\n\r\n\t\t// get current plant object in plants model array and bind plant to details view\r\n\t\tvar sPathCurrentPlant = \"/PlantsCollection/\" + this._currentPlantIndex;\r\n\t\tthis._oCurrentPlant = this.oComponent.getModel('plants').getProperty(sPathCurrentPlant);\r\n\t\tif (!this._oCurrentPlant.parent_plant) {\r\n\t\t\t// this._oCurrentPlant.parent_plant = {\r\n\t\t\t// \tid: undefined,\r\n\t\t\t// \tplant_name: undefined,\r\n\t\t\t// \tactive: undefined\r\n\t\t\t// }\r\n\t\t}\r\n\t\tif (!this._oCurrentPlant.parent_plant_pollen) {\r\n\t\t\t// this._oCurrentPlant.parent_plant_pollen = {\r\n\t\t\t// \tid: undefined,\r\n\t\t\t// \tplant_name: undefined,\r\n\t\t\t// \tactive: undefined\r\n\t\t\t// }\r\n\t\t}\r\n\t\tthis.getView().bindElement({\r\n\t\t\tpath: sPathCurrentPlant,\r\n\t\t\tmodel: \"plants\"\r\n\t\t});\r\n\r\n\t\t//bind taxon\r\n\t\tthis._bindTaxonOfCurrentPlantDeferred(this._oCurrentPlant);\r\n\r\n\t\t// treat properties model in the same way (it requires the taxon to be known so we have\r\n\t\t// to load it here)\r\n\t\tthis._loadBindProperties()\r\n\r\n\t}\r\n\r\n\tprivate _loadBindProperties() {\r\n\t\tthis.getView().bindElement({\r\n\t\t\tpath: \"/propertiesPlants/\" + this._oCurrentPlant.id,\r\n\t\t\tmodel: \"properties\"\r\n\t\t});\r\n\t\tvar oModelProperties = this.oComponent.getModel('properties');\r\n\t\tif (!oModelProperties.getProperty('/propertiesPlants/' + this._oCurrentPlant.id + '/')) {\r\n\t\t\tthis.propertiesUtil.loadPropertiesForCurrentPlant(this._oCurrentPlant, this.oComponent);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _loadEventsForCurrentPlant(): void {\r\n\t\t// request data from backend\r\n\t\t// data is added to local events model and bound to current view upon receivement\r\n\t\tconst uri = 'events/' + this._currentPlantId;\r\n\t\t$.ajax({\r\n\t\t\turl: Util.getServiceUrl(uri),\r\n\t\t\tcontext: this,\r\n\t\t\tasync: true\r\n\t\t})\r\n\t\t\t.done(this._onReceivingEventsForPlant.bind(this, this._currentPlantId))\r\n\t\t\t.fail(this.modelsHelper.onReceiveErrorGeneric.bind(this, 'Event (GET)'))\r\n\t}\r\n\r\n\tprivate _onReceivingEventsForPlant(plantId: int, oData: PResultsEventResource): void {\r\n\t\t//insert (overwrite!) events data for current plant with data received from backend\r\n\t\tconst oEventsModel = <JSONModel>this.oComponent.getModel('events');\r\n\t\tconst aEvents = <PEvents>oData.events;\r\n\t\toEventsModel.setProperty('/PlantsEventsDict/' + plantId + '/', aEvents);\r\n\t\tthis.oComponent.oEventsDataClone[plantId] = Util.getClonedObject(aEvents);\r\n\t\tMessageUtil.getInstance().addMessageFromBackend(oData.message);\r\n\t}\r\n\r\n\tprivate _bindTaxonOfCurrentPlantDeferred(oPlant: PPlant) {\r\n\t\tthis.getView().bindElement({\r\n\t\t\tpath: \"/TaxaDict/\" + oPlant.taxon_id,\r\n\t\t\tmodel: \"taxon\"\r\n\t\t});\r\n\t}\r\n\r\n\tprotected applyToFragment(sId: string, fn: Function, fnInit?: Function) {\r\n\t\t// to enable vs code to connect fragments with a controller, we may not mention\r\n\t\t// the Dialog/Popover ID in the base controller; therefore we have these names\r\n\t\t// hardcoded in each controller \r\n\t\tsuper.applyToFragment(sId, fn, fnInit, this.mIdToFragment);\r\n\t}\r\n\r\n\thandleFullScreen() {\r\n\t\tvar sNextLayout = this.oLayoutModel.getProperty(\"/actionButtonsInfo/midColumn/fullScreen\");\r\n\t\tthis.oRouter.navTo(\"detail\", { layout: sNextLayout, plant_id: this._oCurrentPlant.id });\r\n\t}\r\n\r\n\thandleExitFullScreen() {\r\n\t\tvar sNextLayout = this.oLayoutModel.getProperty(\"/actionButtonsInfo/midColumn/exitFullScreen\");\r\n\t\tthis.oRouter.navTo(\"detail\", { layout: sNextLayout, plant_id: this._oCurrentPlant.id });\r\n\t}\r\n\r\n\thandleClose() {\r\n\t\tvar sNextLayout = this.oLayoutModel.getProperty(\"/actionButtonsInfo/midColumn/closeColumn\");\r\n\t\tthis.oRouter.navTo(\"master\", { layout: sNextLayout });\r\n\t}\r\n\r\n\tonChangeActiveSwitch(oEvent: Event) {\r\n\t\t// open dialog to choose reason for plant deactivation\r\n\t\tvar oSwitch = oEvent.getSource();\r\n\t\tif (oEvent.getParameter('state')) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar oView = this.getView();\r\n\t\tif (!this.byId('dialogCancellation')) {\r\n\t\t\tFragment.load({\r\n\t\t\t\tname: \"plants.ui.view.fragments.detail.DetailCancellation\",\r\n\t\t\t\tid: oView.getId(),\r\n\t\t\t\tcontroller: this\r\n\t\t\t}).then((oControl: Control | Control[]) => {\r\n\t\t\t\tconst oPopover: Popover = oControl as Popover;\r\n\t\t\t\t(<DatePicker>oView.byId(\"cancellationDate\")).setDateValue(new Date());\r\n\t\t\t\toView.addDependent(oPopover);\r\n\t\t\t\toPopover.openBy(oSwitch, true);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\t(<Popover>this.byId('dialogCancellation')).openBy(oSwitch, true);\r\n\t\t}\r\n\t}\r\n\r\n\tonIconPressSetPreview(oEvent: Event) {\r\n\t\t// get selected image and current plant in model\r\n\t\tvar oSource = <Icon>oEvent.getSource();\r\n\t\tvar sPathCurrentImage = oSource.getBindingContext(\"images\")!.getPath();\r\n\t\tvar oCurrentImage = this.oComponent.getModel('images').getProperty(sPathCurrentImage);\r\n\t\tvar sPathCurrentPlant = oSource.getBindingContext(\"plants\")!.getPath();\r\n\t\tvar oCurrentPlant = <PPlant>this.oComponent.getModel('plants').getProperty(sPathCurrentPlant);\r\n\r\n\t\t// temporarily set original image as preview image\r\n\t\t// upon reloading plants model, a specific preview image will be generated \r\n\t\tvar sUrlOriginal = oCurrentImage['filename'];\r\n\t\tvar s = JSON.stringify(sUrlOriginal); // model stores backslash unescaped, so we need a workaround\r\n\t\t// var s2 = s.substring(1, s.length - 1);\r\n\t\t// oCurrentPlant['url_preview'] = s2;\r\n\t\toCurrentPlant['filename_previewimage'] = oCurrentImage['filename'];\r\n\r\n\t\tthis.oComponent.getModel('plants').updateBindings(false);\r\n\t}\r\n\r\n\tonSetInactive(oEvent: Event) {\r\n\t\t//set plant inactive after choosing a reason (e.g. freezing, drought, etc.)\r\n\t\t//we don't use radiobuttongroup helper, so we must get selected element manually\r\n\t\tvar aReasons = <LCancellationReasonChoice[]>this.oComponent.getModel('suggestions').getProperty('/cancellationReasonCollection');\r\n\t\tvar oReasonSelected = aReasons.find(ele => ele.selected);\r\n\r\n\t\t//set current plant's cancellation reason and date\r\n\t\tvar oCurrentPlant = <PPlant>this.getView().getBindingContext('plants')!.getObject();\r\n\t\toCurrentPlant.cancellation_reason = oReasonSelected!.text as CancellationReason;\r\n\t\tvar oDatePicker = <DatePicker>this.byId(\"cancellationDate\");\r\n\t\tlet oDate: Date = oDatePicker.getDateValue() as unknown as Date;\r\n\t\tvar sDateFormatted = Util.formatDate(oDate);\r\n\t\t// this.getView().getBindingContext('plants').getObject().cancellation_date = sDateFormatted;\r\n\t\toCurrentPlant.cancellation_date = sDateFormatted;\r\n\t\t(<JSONModel>this.oComponent.getModel('plants')).updateBindings(false);\r\n\r\n\t\t(<Dialog>this.byId('dialogCancellation')).close();\r\n\t}\r\n\r\n\tonChangeParent(oEvent: Event) {\r\n\t\t// verify entered parent and set parent plant id\r\n\t\tvar aPlants = <PPlant[]>this.getView().getModel('plants').getProperty('/PlantsCollection');\r\n\t\tvar parentPlant = aPlants.find(plant => plant.plant_name === oEvent.getParameter('newValue').trim());\r\n\r\n\t\tif (!oEvent.getParameter('newValue').trim() || !parentPlant) {\r\n\t\t\t// delete parent plant\r\n\t\t\tvar parentalPlant = undefined;\r\n\t\t\t// var parentalPlant = <LParentalPlantInitial>{\r\n\t\t\t// \tid: undefined,\r\n\t\t\t// \tplant_name: undefined,\r\n\t\t\t// \tactive: undefined\r\n\t\t\t// }\r\n\r\n\t\t} else {\r\n\t\t\t// set parent plant\r\n\t\t\tparentalPlant = <PAssociatedPlantExtractForPlant>{\r\n\t\t\t\tid: parentPlant.id,\r\n\t\t\t\tplant_name: parentPlant.plant_name,\r\n\t\t\t\tactive: parentPlant.active\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// fn is fired by changes for parent and parent_ollen\r\n\t\tif ((<Input>oEvent.getSource()).data('parentType') === \"parent_pollen\") {\r\n\t\t\tthis._oCurrentPlant.parent_plant_pollen = parentalPlant;\r\n\t\t} else {\r\n\t\t\tthis._oCurrentPlant.parent_plant = parentalPlant;\r\n\t\t}\r\n\t}\r\n\r\n\tonPressGoToPlant(parentPlantId: int) {\r\n\t\t//navigate to supplied plant\r\n\t\tif (!!parentPlantId) {\r\n\t\t\tNavigation.getInstance().navToPlantDetails(parentPlantId);\r\n\t\t} else {\r\n\t\t\tthis.handleErrorMessageBox(\"Can't determine Plant Index\");\r\n\t\t}\r\n\t}\r\n\r\n\tonSuggestNursery(oEvent: Event) {\r\n\t\t// overwrite default suggestions (only beginsWith term) with custom one (contains term))\r\n\t\tvar aFilters = [];\r\n\t\tvar sTerm = oEvent.getParameter(\"suggestValue\");\r\n\t\tif (sTerm) {\r\n\t\t\taFilters.push(new Filter(\"name\", FilterOperator.Contains, sTerm));\r\n\t\t}\r\n\t\tvar oInput = <Input>oEvent.getSource();\r\n\t\tvar oListBinding = <ListBinding>oInput.getBinding(\"suggestionItems\");\r\n\t\toListBinding.filter(aFilters);\r\n\t\t//do <<not>> filter the provided suggestions with default logic before showing them to the user\r\n\t\toInput.setFilterSuggests(false);\r\n\t}\r\n\r\n\tonPressButtonDeletePlant(oEvent: Event, sPlant: string, plantId: int) {\r\n\t\tif (sPlant.length < 1) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//confirm dialog\r\n\t\tvar oMenuItem = <MenuItem>oEvent.getSource();\r\n\t\tvar oPlant = <PPlant>oMenuItem.getBindingContext('plants')!.getObject();\r\n\t\tvar bCompact = !!this.getView().$().closest(\".sapUiSizeCompact\").length;\r\n\r\n\t\tconst mOptions = {\r\n\t\t\ttitle: \"Delete\",\r\n\t\t\tstretch: false,\r\n\t\t\tonClose: this._confirmDeletePlant.bind(this, sPlant, plantId, oPlant),\r\n\t\t\tactions: ['Delete', 'Cancel'],\r\n\t\t\tstyleClass: bCompact ? \"sapUiSizeCompact\" : \"\"\r\n\t\t}\r\n\t\tMessageBox.confirm(\"Delete plant \" + sPlant + \"?\", mOptions);\r\n\t}\r\n\r\n\tonPressButtonClonePlant(oEvent: Event) {\r\n\t\t// triggered by button in details upper menu\r\n\t\t// opens dialog to clone current plant\r\n\r\n\t\t// check if there are any unsaved changes\r\n\t\tvar aModifiedPlants = this.getModifiedPlants();\r\n\t\tvar aModifiedImages = this.getModifiedImages();\r\n\t\tvar aModifiedTaxa = this.getModifiedTaxa();\r\n\t\tif ((aModifiedPlants.length !== 0) || (aModifiedImages.length !== 0) || (aModifiedTaxa.length !== 0)) {\r\n\t\t\tMessageToast.show('There are unsaved changes. Save modified data or reload data first.');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.applyToFragment('dialogClonePlant', (o: Dialog) => {\r\n\t\t\tconst clonePlantName = this._generatePlantNameWithRomanizedSuffix(this._oCurrentPlant.plant_name, 2);\r\n\t\t\tconst oInput = <Input>this.byId('inputClonedPlantName');\r\n\t\t\toInput.setValue(clonePlantName);\r\n\t\t\to.open();\r\n\t\t});\r\n\t}\r\n\r\n\tprivate _confirmDeletePlant(sPlant: string, plantId: int, oPlant: PPlant, sAction: string) {\r\n\t\tif (sAction !== 'Delete') {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tUtil.startBusyDialog('Deleting', 'Deleting ' + sPlant);\r\n\t\t$.ajax({\r\n\t\t\turl: Util.getServiceUrl('plants/'),\r\n\t\t\ttype: 'DELETE',\r\n\t\t\tcontentType: \"application/json\",\r\n\t\t\tdata: JSON.stringify({ 'plant_id': plantId }),\r\n\t\t\tcontext: this\r\n\t\t})\r\n\t\t\t.done(this._onPlantDeleted.bind(this, oPlant))\r\n\t\t\t.fail(this.modelsHelper.onReceiveErrorGeneric.bind(this, 'Plant (DELETE)'));\r\n\t}\r\n\r\n\tprivate _onPlantDeleted(oPlantDeleted: PPlant, oMsg: any, sStatus: string, oReturnData: any) {\r\n\t\tUtil.stopBusyDialog();\r\n\t\tthis.onAjaxSimpleSuccess(oMsg, sStatus, oReturnData);\r\n\r\n\t\t//remove from plants model and plants model clone\r\n\t\t//find deleted image in model and remove there\r\n\t\tvar aPlantsData = (<JSONModel>this.getView().getModel('plants')).getData().PlantsCollection;\r\n\t\tvar iPosition = aPlantsData.indexOf(oPlantDeleted);\r\n\t\taPlantsData.splice(iPosition, 1);\r\n\t\tthis.getView().getModel('plants').refresh();\r\n\r\n\t\t//delete from model clone (used for tracking changes) as well\r\n\t\tvar aPlantsDataClone = this.oComponent.oPlantsDataClone.PlantsCollection;\r\n\r\n\t\t//can't find position with object from above\r\n\t\tvar oPlantClone = aPlantsDataClone.find(function (element) {\r\n\t\t\treturn element.plant_name === oPlantDeleted.plant_name;\r\n\t\t});\r\n\t\tif (oPlantClone !== undefined) {\r\n\t\t\taPlantsDataClone.splice(aPlantsDataClone.indexOf(oPlantClone), 1);\r\n\t\t}\r\n\r\n\t\t//return to one-column-layout (plant in details view was deleted)\r\n\t\tthis.handleClose();\r\n\t}\r\n\r\n\tpublic onToggleEditMode(oEvent: Event) {\r\n\t\t// toggle edit mode for some of the input controls (actually hide the read-only ones and \r\n\t\t// unhide the others)\r\n\t\tvar oSource = <OverflowToolbarButton>oEvent.getSource();\r\n\t\tvar sCurrentType = oSource.getType();\r\n\t\tif (sCurrentType === 'Transparent') {\r\n\t\t\t// set edit mode\r\n\t\t\toSource.setType('Emphasized');\r\n\t\t\t(<JSONModel>this.getView().getModel('status')).setProperty('/details_editable', true);\r\n\t\t} else {\r\n\t\t\t// set view mode (default)\r\n\t\t\toSource.setType('Transparent');\r\n\t\t\t(<JSONModel>this.getView().getModel('status')).setProperty('/details_editable', false);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic onPressTag(oEvent: Event) {\r\n\t\tvar oSource = <ObjectStatus>oEvent.getSource();\r\n\t\t// create delete dialog for tags\r\n\t\tvar sPathTag = oSource.getBindingContext('plants')!.getPath();\r\n\r\n\t\tthis.applyToFragment('menuDeleteTag', (oMenu: Menu) => {\r\n\t\t\toMenu.bindElement({\r\n\t\t\t\tpath: sPathTag,\r\n\t\t\t\tmodel: \"plants\"\r\n\t\t\t});\r\n\t\t\toMenu.openBy(oSource, true);\r\n\t\t});\r\n\t}\r\n\r\n\tpressDeleteTag(oEvent: Event) {\r\n\t\tvar oSource = <ObjectStatus>oEvent.getSource();\r\n\t\tvar oContext = oSource.getBindingContext('plants');\r\n\t\t// get position in tags array\r\n\t\tvar sPathItem = oContext!.getPath();\r\n\t\tvar iIndex = sPathItem.substr(sPathItem.lastIndexOf('/') + 1);\r\n\t\t// remove item from array\r\n\t\tthis.oComponent.getModel('plants').getData().PlantsCollection[this._currentPlantIndex].tags.splice(iIndex, 1);\r\n\t\tthis.oComponent.getModel('plants').refresh();\r\n\t}\r\n\r\n\tonOpenAddTagDialog(oEvent: Event) {\r\n\t\t// create add tag dialog\r\n\t\tvar oButton = oEvent.getSource();\r\n\t\t// var oView = this.getView();\r\n\t\t// if (!this.byId('dialogAddTag')) {\r\n\t\t// \tFragment.load({\r\n\t\t// \t\tname: \"plants.ui.view.fragments.detail.DetailTagAdd\",\r\n\t\t// \t\tid: oView.getId(),\r\n\t\t// \t\tcontroller: this\r\n\t\t// \t}).then((oControl: Control | Control[]) => {\r\n\t\t// \t\tconst oPopover: Popover = oControl as Popover;\r\n\t\t// \t\tvar mObjectStatusSelection = <ObjectStatusCollection>{\r\n\t\t// \t\t\tObjectStatusCollection: [\r\n\t\t// \t\t\t\t{ 'selected': false, 'text': 'None', 'state': 'None' },\r\n\t\t// \t\t\t\t{ 'selected': false, 'text': 'Indication01', 'state': 'Indication01' },\r\n\t\t// \t\t\t\t{ 'selected': false, 'text': 'Success', 'state': 'Success' },\r\n\t\t// \t\t\t\t{ 'selected': true, 'text': 'Information', 'state': 'Information' },\r\n\t\t// \t\t\t\t{ 'selected': false, 'text': 'Error', 'state': 'Error' },\r\n\t\t// \t\t\t\t{ 'selected': false, 'text': 'Warning', 'state': 'Warning' }\r\n\t\t// \t\t\t],\r\n\t\t// \t\t\tValue: '',\r\n\t\t// \t\t};\r\n\t\t// \t\tvar oTagTypesModel = new JSONModel(mObjectStatusSelection);\r\n\t\t// \t\toPopover.setModel(oTagTypesModel, 'tagTypes');\r\n\r\n\t\t// \t\t(<DatePicker>oView.byId(\"dialogAddTag\")).setDateValue(new Date());\r\n\t\t// \t\toView.addDependent(oPopover);\r\n\t\t// \t\toPopover.openBy(oButton, true);\r\n\t\t// \t})\r\n\t\t// } else {\r\n\t\t// \t(<Popover>this.byId('dialogAddTag')).openBy(oButton, true);\r\n\t\t// }\r\n\r\n\t\tthis.applyToFragment(\r\n\t\t\t'dialogAddTag',\r\n\t\t\t(p: Popover) => p.openBy(oButton, true),\r\n\t\t\t_initTagDialog.bind(this));\r\n\t\tfunction _initTagDialog(oPopover: Popover) {\r\n\t\t\tvar mObjectStatusSelection = <ObjectStatusCollection>{\r\n\t\t\t\tObjectStatusCollection: [\r\n\t\t\t\t\t{ 'selected': false, 'text': 'None', 'state': 'None' },\r\n\t\t\t\t\t{ 'selected': false, 'text': 'Indication01', 'state': 'Indication01' },\r\n\t\t\t\t\t{ 'selected': false, 'text': 'Success', 'state': 'Success' },\r\n\t\t\t\t\t{ 'selected': true, 'text': 'Information', 'state': 'Information' },\r\n\t\t\t\t\t{ 'selected': false, 'text': 'Error', 'state': 'Error' },\r\n\t\t\t\t\t{ 'selected': false, 'text': 'Warning', 'state': 'Warning' }\r\n\t\t\t\t],\r\n\t\t\t\tValue: ''\r\n\t\t\t};\r\n\t\t\tvar oTagTypesModel = new JSONModel(mObjectStatusSelection);\r\n\t\t\toPopover.setModel(oTagTypesModel, 'tagTypes');\r\n\t\t}\r\n\t}\r\n\r\n\tonAddTag(oEvent: Event) {\r\n\t\t// create a new tag inside the plant's object in the plants model\r\n\t\t// it will be saved in backend when saving the plant\r\n\t\t// new/deleted tags are within scope of the plants model modification tracking\r\n\t\tvar oPopover = <Popover>this.byId('dialogAddTag');\r\n\t\tvar oModelTagTypes = <JSONModel>oPopover.getModel('tagTypes');\r\n\t\tvar dDialogData = oModelTagTypes.getData();\r\n\t\tdDialogData.Value = dDialogData.Value.trim();\r\n\r\n\t\t// check if empty \r\n\t\tif (dDialogData.Value.length === 0) {\r\n\t\t\tMessageToast.show('Enter text first.');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// get selected ObjectStatus template\r\n\t\tvar oSelectedElement = dDialogData.ObjectStatusCollection.find(function (element: ObjectStatusData) {\r\n\t\t\treturn element.selected;\r\n\t\t});\r\n\r\n\t\t// check if same-text tag already exists for plant\r\n\t\tvar oPlant = this.oComponent.getModel('plants').getData().PlantsCollection[this._currentPlantIndex];\r\n\t\tif (oPlant.tags) {\r\n\t\t\tvar bFound = oPlant.tags.find(function (oTag: PPlantTag) {\r\n\t\t\t\treturn oTag.text === dDialogData.Value;\r\n\t\t\t});\r\n\t\t\tif (bFound) {\r\n\t\t\t\tMessageToast.show('Tag already exists.');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// create new token object in plants model\r\n\t\tvar dNewTag = {\r\n\t\t\t// id is determined upon saving to db\r\n\t\t\ttext: dDialogData.Value,\r\n\t\t\t// icon: oSelectedElement.icon,\r\n\t\t\tstate: oSelectedElement.state,\r\n\t\t\t// last_update is determined upon saving to db\r\n\t\t\t// plant_name: oPlant.plant_name,\r\n\t\t\tplant_id: oPlant.id\r\n\t\t};\r\n\t\tif (oPlant.tags) {\r\n\t\t\toPlant.tags.push(dNewTag);\r\n\t\t} else {\r\n\t\t\toPlant.tags = [dNewTag];\r\n\t\t}\r\n\r\n\t\tthis.oComponent.getModel('plants').updateBindings(false);\r\n\t\t(<Popover>this.byId('dialogAddTag')).close();\r\n\t}\r\n\r\n\tonPressButtonRenamePlant(oEvent: Event) {\r\n\t\t// triggered by button in details upper menu\r\n\t\t// opens dialog to rename current plant\r\n\r\n\t\t// check if there are any unsaved changes\r\n\t\tvar aModifiedPlants = this.getModifiedPlants();\r\n\t\tvar aModifiedImages = this.getModifiedImages();\r\n\t\tvar aModifiedTaxa = this.getModifiedTaxa();\r\n\t\tif ((aModifiedPlants.length !== 0) || (aModifiedImages.length !== 0) || (aModifiedTaxa.length !== 0)) {\r\n\t\t\tMessageToast.show('There are unsaved changes. Save modified data or reload data first.');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.applyToFragment('dialogRenamePlant', (oDialog: Dialog) => {\r\n\t\t\tvar oInput = <Input>this.byId('inputNewPlantName');\r\n\t\t\toInput.setValue(this._oCurrentPlant.plant_name);\r\n\t\t\toDialog.open();\r\n\t\t});\r\n\t}\r\n\r\n\tonLiveChangeNewPlantName(oEvent: Event, type: 'clone' | 'rename' | 'descendant') {\r\n\t\t// called from either rename or clone fragment\r\n\t\tvar sText = oEvent.getParameter('value');\r\n\t\tif (type === 'clone') {\r\n\t\t\t(<Button>this.byId('btnClonePlantSubmit')).setEnabled(sText.length > 0);\r\n\t\t} else if (type === 'rename') {\r\n\t\t\t(<Button>this.byId('btnRenamePlantSubmit')).setEnabled(sText.length > 0);\r\n\t\t} else if (type === 'descendant') {\r\n\t\t\t(<Button>this.byId('btnDescendantDialogCreate')).setEnabled(sText.length > 0);\r\n\t\t}\r\n\t}\r\n\r\n\tonPressButtonSubmitClonePlant(oEvent: Event) {\r\n\t\t// use ajax to clone plant in backend\r\n\t\tvar sClonedPlantName = (<Input>this.byId('inputClonedPlantName')).getValue().trim();\r\n\r\n\t\t// check if duplicate\r\n\t\tif (sClonedPlantName === '') {\r\n\t\t\tMessageToast.show('Empty not allowed.');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//check if new\r\n\t\tif (this.isPlantNameInPlantsModel(sClonedPlantName)) {\r\n\t\t\tMessageToast.show('Plant Name already exists.');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// ajax call\r\n\t\tUtil.startBusyDialog(\"Cloning...\", '\"' + this._oCurrentPlant.plant_name + '\" to \"' + sClonedPlantName + '\"');\r\n\t\t$.ajax({\r\n\t\t\turl: Util.getServiceUrl('plants/' + this._oCurrentPlant.id + '/clone?plant_name_clone=' + sClonedPlantName),\r\n\t\t\ttype: 'POST',\r\n\t\t\tcontentType: \"application/json\",\r\n\t\t\tcontext: this\r\n\t\t})\r\n\t\t\t.done(this._onReceivingPlantCloned)\r\n\t\t\t.fail(this.modelsHelper.onReceiveErrorGeneric.bind(this, 'Clone Plant (POST)'));\r\n\t}\r\n\r\n\tprivate _onReceivingPlantCloned(oBackendResultPlantCloned: PResultsPlantCloned) {\r\n\t\t// Cloning plant was successful; add clone to model and open in details view\r\n\t\tthis.applyToFragment('dialogClonePlant', (oDialog: Dialog) => oDialog.close());\r\n\t\tMessageUtil.getInstance().addMessageFromBackend(oBackendResultPlantCloned.message);\r\n\r\n\t\tvar oPlantSaved = <PPlant>oBackendResultPlantCloned.plant;\r\n\t\tvar aPlants = this.oComponent.getModel('plants').getProperty('/PlantsCollection');\r\n\t\taPlants.push(oPlantSaved);  // append at end to preserve change tracking with clone \r\n\t\tthis.oComponent.getModel('plants').updateBindings(false);\r\n\r\n\t\t// ...and add to cloned plants to allow change tracking\r\n\t\tvar oPlantClone = Util.getClonedObject(oPlantSaved);\r\n\t\tthis.oComponent.oPlantsDataClone.PlantsCollection.push(oPlantClone);\r\n\t\tMessageToast.show(oBackendResultPlantCloned.message.message);\r\n\r\n\t\t// finally navigate to the newly created plant in details view\r\n\t\tNavigation.getInstance().navToPlantDetails(oPlantSaved.id!);\r\n\t\tUtil.stopBusyDialog();\r\n\t}\r\n\r\n\tonPressButtonSubmitRenamePlant(oEvent: Event) {\r\n\t\t// use ajax to rename plant in backend\r\n\t\tvar sNewPlantName = (<Input>this.byId('inputNewPlantName')).getValue().trim();\r\n\r\n\t\t// check if duplicate\r\n\t\tif (sNewPlantName === '') {\r\n\t\t\tMessageToast.show('Empty not allowed.');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//check if new\r\n\t\tif (this.isPlantNameInPlantsModel(sNewPlantName)) {\r\n\t\t\tMessageToast.show('Plant Name already exists.');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// ajax call\r\n\t\tUtil.startBusyDialog(\"Renaming...\", '\"' + this._oCurrentPlant.plant_name + '\" to \"' + sNewPlantName + '\"');\r\n\t\tvar dPayload = {\r\n\t\t\t'OldPlantName': this._oCurrentPlant.plant_name,\r\n\t\t\t'NewPlantName': sNewPlantName\r\n\t\t};\r\n\t\t$.ajax({\r\n\t\t\turl: Util.getServiceUrl('plants/'),\r\n\t\t\ttype: 'PUT',\r\n\t\t\tcontentType: \"application/json\",\r\n\t\t\tdata: JSON.stringify(dPayload),\r\n\t\t\tcontext: this\r\n\t\t})\r\n\t\t\t.done(this._onReceivingPlantNameRenamed)\r\n\t\t\t.fail(this.modelsHelper.onReceiveErrorGeneric.bind(this, 'Plant (PUT)'));\r\n\t}\r\n\r\n\tprivate _onReceivingPlantNameRenamed(oMsg: PConfirmation) {\r\n\t\t//plant was renamed in backend\r\n\t\tUtil.stopBusyDialog();\r\n\t\tMessageToast.show(oMsg.message.message);\r\n\t\tMessageUtil.getInstance().addMessageFromBackend(oMsg.message);\r\n\r\n\t\tUtil.startBusyDialog('Loading...', 'Loading plants and images data');\r\n\r\n\t\tthis.modelsHelper.reloadPlantsFromBackend();\r\n\t\t// oModelsHelper.reloadImagesFromBackend();\r\n\t\tthis.modelsHelper.resetImagesRegistry();\r\n\t\t//todo trigger reinit of this view (updateBindings/refresh of model doesn't update this view's images)\r\n\r\n\t\tthis._requestImagesForPlant(this._oCurrentPlant.id!);\r\n\r\n\t\tthis.modelsHelper.reloadTaxaFromBackend();\r\n\r\n\t\tthis.applyToFragment('dialogRenamePlant', (o: Dialog) => o.close());\r\n\t}\r\n\r\n\r\n\tprivate _requestImagesForPlant(plant_id: int) {\r\n\t\t// request data from backend\r\n\t\tvar sId = encodeURIComponent(plant_id);\r\n\t\tvar uri = 'plants/' + sId + '/images/';\r\n\r\n\t\t$.ajax({\r\n\t\t\turl: Util.getServiceUrl(uri),\r\n\t\t\t// data: ,\r\n\t\t\tcontext: this,\r\n\t\t\tasync: true\r\n\t\t})\r\n\t\t\t.done(this._onReceivingImagesForPlant.bind(this, plant_id))\r\n\t\t\t.fail(this.modelsHelper.onReceiveErrorGeneric.bind(this, 'Plant Images (GET)'));\r\n\t}\r\n\r\n\tprivate _onReceivingImagesForPlant(plant_id: int, oData: any) {\r\n\t\tthis.addPhotosToRegistry(oData);\r\n\t\tthis.oComponent.imagesPlantsLoaded.add(plant_id);\r\n\t\tthis.resetImagesCurrentPlant(plant_id);\r\n\t\tthis.oComponent.getModel('images').updateBindings(false);\r\n\r\n\t}\r\n\r\n\tonPressButtonCreateDescendantPlant(oEvent: Event) {\r\n\t\t// triggered by button in details upper menu\r\n\t\t// opens dialog to create descendant plant with current plant as mother plant\r\n\r\n\t\t// check if there are any unsaved changes\r\n\t\tvar aModifiedPlants = this.getModifiedPlants();\r\n\t\tvar aModifiedImages = this.getModifiedImages();\r\n\t\tvar aModifiedTaxa = this.getModifiedTaxa();\r\n\t\tif ((aModifiedPlants.length !== 0) || (aModifiedImages.length !== 0) || (aModifiedTaxa.length !== 0)) {\r\n\t\t\tMessageToast.show('There are unsaved changes. Save modified data or reload data first.');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.applyToFragment('dialogCreateDescendant', (oDialog: Dialog) => {\r\n\t\t\t// create json model descendant and set it (default settings are when opening)\r\n\t\t\tvar defaultPropagationType = 'seed (collected)';\r\n\t\t\tvar descendantPlantDataInit = {\r\n\t\t\t\t\"propagationType\": defaultPropagationType,\r\n\t\t\t\t\"parentPlant\": this.getPlantById(this._currentPlantId).plant_name,\r\n\t\t\t\t\"parentPlantPollen\": undefined,\r\n\t\t\t\t\"descendantPlantName\": undefined\r\n\t\t\t};\r\n\t\t\tvar modelDescendant = new JSONModel(descendantPlantDataInit);\r\n\t\t\toDialog.setModel(modelDescendant, \"descendant\");\r\n\t\t\tthis.updatePlantNameSuggestion();\r\n\t\t\toDialog.open();\r\n\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tonDescendantDialogCreate(oEvent: Event) {\r\n\t\t// triggered from create-descendant-dialog to create the descendant plant\r\n\t\t//todo validate if existing\r\n\t\tvar descendantPlantData = (<JSONModel>this.byId('dialogCreateDescendant').getModel('descendant')).getData();\r\n\r\n\t\tif (!descendantPlantData.propagationType || !descendantPlantData.propagationType.length) {\r\n\t\t\tMessageToast.show('Choose propagation type.');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// validate parent plant (obligatory and valid) and parent plant pollen (valid if supplied)\r\n\t\tif (!descendantPlantData.parentPlant || !this.isPlantNameInPlantsModel(descendantPlantData.parentPlant)) {\r\n\t\t\tMessageToast.show('Check parent plant.');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar propagationType = this.getSuggestionItem('propagationTypeCollection', descendantPlantData.propagationType);\r\n\t\tif (propagationType.hasParentPlantPollen === true &&\r\n\t\t\t!!descendantPlantData.parentPlantPollen &&\r\n\t\t\t!this.isPlantNameInPlantsModel(descendantPlantData.parentPlantPollen)) {\r\n\t\t\tMessageToast.show('Check parent plant pollen.');\r\n\t\t\treturn;\r\n\t\t};\r\n\r\n\t\t// validate new plant name\r\n\t\tif (!descendantPlantData.descendantPlantName || !descendantPlantData.descendantPlantName.trim().length) {\r\n\t\t\tMessageToast.show('Enter new plant name.');\r\n\t\t\treturn;\r\n\t\t};\r\n\r\n\t\tif (this.isPlantNameInPlantsModel(descendantPlantData.descendantPlantName)) {\r\n\t\t\tMessageToast.show('Plant with that name already exists.');\r\n\t\t\treturn;\r\n\t\t};\r\n\r\n\t\t// assemble new plant and save it\r\n\t\tvar parentPlant = this.getPlantByName(descendantPlantData.parentPlant);\r\n\t\tvar newPlant = <NewPlant>{\r\n\t\t\t'id': undefined,  // created in backend\r\n\t\t\t'plant_name': descendantPlantData.descendantPlantName,\r\n\t\t\t'field_number': propagationType.hasParentPlantPollen ? '-' : parentPlant.field_number,\r\n\t\t\t'geographic_origin': propagationType.hasParentPlantPollen ? '-' : parentPlant.geographic_origin,\r\n\t\t\t'nursery_source': '-',\r\n\t\t\t'propagation_type': descendantPlantData.propagationType,\r\n\t\t\t'active': true,\r\n\t\t\t'taxon_id': propagationType.hasParentPlantPollen ? undefined : parentPlant.taxon_id,\r\n\t\t\t'parent_plant': {\r\n\t\t\t\tid: parentPlant.id,\r\n\t\t\t\tplant_name: parentPlant.plant_name,\r\n\t\t\t\tactive: parentPlant.active\r\n\t\t\t},\r\n\t\t\t'last_update': undefined,  //auto-derived in backend\r\n\t\t\t'descendant_plants_all': [],  //auto-derived in backend\r\n\t\t\t'sibling_plants': [],  //auto-derived in backend\r\n\t\t\t'same_taxon_plants': [],  //auto-derived in backend\r\n\t\t\t'tags': [],\r\n\t\t};\r\n\r\n\t\tif (!!descendantPlantData.parentPlantPollen && descendantPlantData.parentPlantPollen.length) {\r\n\t\t\tvar oParentPlantPollen = this.getPlantByName(descendantPlantData.parentPlantPollen);\r\n\t\t\tnewPlant.parent_plant_pollen = <PAssociatedPlantExtractForPlant>{\r\n\t\t\t\tid: oParentPlantPollen.id,\r\n\t\t\t\tplant_name: descendantPlantData.parentPlantPollen,\r\n\t\t\t\tactive: oParentPlantPollen.active\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.saveNewPlant(newPlant);\r\n\r\n\t\tthis.applyToFragment('dialogCreateDescendant', (oDialog: Dialog) => oDialog.close());\r\n\t}\r\n\r\n\tprivate _generatePlantNameWithRomanizedSuffix(baseName: string, beginWith: int): string {\r\n\t\t// e.g. Aeonium spec. II -> Aeonium spec. III if the former already exists\r\n\t\tfor (var i = beginWith; i < 100; i++) {\r\n\t\t\tvar latinNumber = Util.romanize(i);\r\n\t\t\tvar suggestedName = baseName + ' ' + latinNumber;\r\n\t\t\tif (!this.isPlantNameInPlantsModel(suggestedName)) {\r\n\t\t\t\treturn suggestedName;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthrow new Error('Could not generate plant name with romanized suffix.');\r\n\t}\r\n\r\n\tprivate _generateNewPlantNameSuggestion(oParentPlant: PPlant, oParentPlantPollen: PPlant | undefined): string {\r\n\t\t// generate new plant name suggestion\r\n\t\t// ... only if parent plant names are set\r\n\r\n\t\t// hybrid of two parents\r\n\t\tif (!!oParentPlantPollen) {\r\n\t\t\tvar suggestedName = (oParentPlant.botanical_name || oParentPlant.plant_name) + ' × ' +\r\n\t\t\t\t(oParentPlantPollen.botanical_name || oParentPlantPollen.plant_name);\r\n\t\t\tif (this.isPlantNameInPlantsModel(suggestedName)) {\r\n\t\t\t\t// we need to find a variant using latin numbers, starting with II\r\n\t\t\t\t// Consider existing latin number at ending\r\n\t\t\t\tsuggestedName = this._generatePlantNameWithRomanizedSuffix(suggestedName, 2);\r\n\t\t\t}\r\n\r\n\t\t\t// Just one parent: add latin number to parent plant name\r\n\t\t\t// Consider existing latin number at ending\r\n\t\t} else {\r\n\t\t\tvar baseName = oParentPlant.plant_name;\r\n\t\t\tvar reRomanNumber = /\\sM{0,4}(CM|CD|D?C{0,3})(XC|XL|L?X{0,3})(IX|IV|V?I{0,3})$/;\r\n\t\t\tvar romanNumberMatch = baseName.match(reRomanNumber);\r\n\t\t\tif (!!romanNumberMatch) {\r\n\t\t\t\tvar romanNumber = romanNumberMatch.pop();\r\n\t\t\t\tvar beginWith = Util.arabize(romanNumber!) + 1;\r\n\t\t\t\t// remove the roman number at the end\r\n\t\t\t\tbaseName = baseName.substr(0, oParentPlant.plant_name.lastIndexOf(' '));\r\n\t\t\t} else {\r\n\t\t\t\tvar beginWith = 2;\r\n\t\t\t}\r\n\r\n\t\t\t// find suitable roman number suffix\r\n\t\t\tvar suggestedName = this._generatePlantNameWithRomanizedSuffix(baseName, beginWith);\r\n\t\t}\r\n\r\n\t\treturn suggestedName;\r\n\t}\r\n\r\n\tupdatePlantNameSuggestion() {\r\n\t\t// generate new plant name suggestion\r\n\t\tconst oCheckbox = <CheckBox>this.byId('autoNameDescendantPlantName');\r\n\t\tif (!oCheckbox.getSelected()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst oDescendantModel = <JSONModel>this.byId('dialogCreateDescendant').getModel('descendant');\r\n\t\tlet descendantPlantData = <LDescendantPlantInput>oDescendantModel.getData();\r\n\t\t\r\n\t\tif (!descendantPlantData.propagationType || !descendantPlantData.propagationType.length) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst propagationType: LPropagationTypeData = this.getSuggestionItem('propagationTypeCollection', descendantPlantData.propagationType);\r\n\t\t\r\n\t\tif (descendantPlantData.parentPlant && descendantPlantData.parentPlant.trim().length) {\r\n\t\t\tconst oParentPlant: PPlant = this.getPlantByName(descendantPlantData.parentPlant);\r\n\t\t\tconst oParentPlantPollen = (descendantPlantData.parentPlantPollen && propagationType.hasParentPlantPollen) ? this.getPlantByName(descendantPlantData.parentPlantPollen) : undefined;\r\n\t\t\tvar suggestedName = this._generateNewPlantNameSuggestion(oParentPlant, oParentPlantPollen);\r\n\t\t} else {\r\n\t\t\tsuggestedName = '';\r\n\t\t}\r\n\t\tconst oModelDescendant = <JSONModel>this.byId('dialogCreateDescendant').getModel('descendant');\r\n\t\toModelDescendant.setProperty('/descendantPlantName', suggestedName);\r\n\t}\r\n\r\n\tonDescendantDialogChangeParent(oEvent: Event, parentType: 'parent' | 'parent_pollen') {\r\n\t\t// reset parent plant (/pollen) input if entered plant name is invalid\r\n\t\tvar parentPlantName = oEvent.getParameter('newValue').trim();\r\n\r\n\t\tif (!parentPlantName || !this.isPlantNameInPlantsModel(parentPlantName)) {\r\n\t\t\t(<Input>oEvent.getSource()).setValue('');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.updatePlantNameSuggestion();\r\n\t}\r\n\r\n\tonDescendantDialogSwitchParents() {\r\n\t\t// triggered by switch button; switch parent plant and parent plant pollen\r\n\t\tvar model = <JSONModel>this.byId('dialogCreateDescendant').getModel('descendant');\r\n\t\tvar parentPlantName = model.getProperty('/parentPlant');\r\n\t\tmodel.setProperty('/parentPlant', model.getProperty('/parentPlantPollen'));\r\n\t\tmodel.setProperty('/parentPlantPollen', parentPlantName);\r\n\r\n\t\tthis.updatePlantNameSuggestion();\r\n\t}\r\n\r\n\tonSwitchImageEditDescription(oEvent: Event) {\r\n\t\tconst oModelStatus = <JSONModel>this.getView().getModel('status');\r\n\t\tif (oModelStatus.getProperty('/images_editable')) {\r\n\t\t\toModelStatus.setProperty('/images_editable', false);\r\n\t\t} else {\r\n\t\t\toModelStatus.setProperty('/images_editable', true);\r\n\t\t}\r\n\t}\r\n\r\n\t//////////////////////////////////////////////////////////\r\n\t// Taxonomy Handlers\r\n\t//////////////////////////////////////////////////////////\r\n\tonOpenFindSpeciesDialog() {\r\n\t\tthis.applyToFragment('dialogFindSpecies',\r\n\t\t\t(oDialog: Dialog) => oDialog.open(),\r\n\t\t\t(oDialog: Dialog) => {\r\n\t\t\t\tvar oKewResultsModel = new JSONModel();\r\n\t\t\t\tthis.getView().setModel(oKewResultsModel, 'kewSearchResults');\r\n\t\t\t});\r\n\t}\r\n\r\n\tonButtonFindSpecies(oEvent: Event) {\r\n\t\tconst sSpecies = (<Input>this.byId('inputFindSpecies')).getValue();\r\n\t\tconst bIncludeKew = (<CheckBox>this.byId('cbFindSpeciesIncludeKew')).getSelected();\r\n\t\tconst bSearchForGenus = (<CheckBox>this.byId('cbGenus')).getSelected();\r\n\t\tconst oModelKewSearchResults = <JSONModel>this.getView().getModel('kewSearchResults');  //model attached to view, not component\r\n\t\tthis.TaxonomyUtil.findSpecies(sSpecies, bIncludeKew, bSearchForGenus, oModelKewSearchResults);\r\n\t}\r\n\r\n\tonFindSpeciesChoose(oEvent: Event) {\r\n\t\tconst oSelectedItem = <ColumnListItem>(<Table>this.byId('tableFindSpeciesResults')).getSelectedItem();\r\n\t\tconst sCustomName = (<GenericTag>this.byId('textFindSpeciesAdditionalName')).getText().trim();\r\n\t\tconst oDialog = <Dialog>this._getFragment('dialogFindSpecies');\r\n\t\tthis.TaxonomyUtil.chooseSpecies(oSelectedItem, sCustomName, oDialog, this._oCurrentPlant, this, this.getView());\r\n\t}\r\n\r\n\tonFindSpeciesTableSelectedOrDataUpdated(oEvent: Event) {\r\n\t\tconst oSelectedItem = <ColumnListItem>(<Table>this.byId('tableFindSpeciesResults')).getSelectedItem();\r\n\t\tconst oText = <GenericTag>this.byId('textFindSpeciesAdditionalName');\r\n\t\tconst oInputAdditionalName = <Input>this.byId('inputFindSpeciesAdditionalName');\r\n\t\tthis.TaxonomyUtil.findSpeciesTableSelectedOrDataUpdated(oText, oInputAdditionalName, oSelectedItem);\r\n\t}\r\n\r\n\tonFindSpeciesAdditionalNameLiveChange(oEvent: Event) {\r\n\t\tthis.TaxonomyUtil.findSpeciesAdditionalNameLiveChange(this.getView());\r\n\t}\r\n\r\n\tonDialogFindSpeciesBeforeOpen(oEvent: Event) {\r\n\t\tthis.TaxonomyUtil.findSpeciesBeforeOpen(this.getView());\r\n\t}\r\n\r\n\tonShowMap(oEvent: Event) {\r\n\t\t// var oSource = evt.getSource();\r\n\t\tthis.applyToFragment('dialogLeafletMap',\r\n\t\t\t(oDialog: Dialog) => oDialog.open());\r\n\t}\r\n\tonRefetchGbifImages(gbif_id: int, controller: Detail) {\r\n\t\tconst oTaxonModel = <JSONModel>this.getView().getModel('taxon');\r\n\t\tthis.TaxonomyUtil.refetchGbifImages(gbif_id, oTaxonModel, this._oCurrentPlant);\r\n\t}\r\n\r\n\tonCloseLeafletMap(oEvent: Event) {\r\n\t\tthis.applyToFragment('dialogLeafletMap', (oDialog: Dialog) => oDialog.close());\r\n\t}\r\n\r\n\tafterCloseLeafletMap(oEvent: Event) {\r\n\t\tthis.applyToFragment('dialogLeafletMap', (oDialog: Dialog) => oDialog.destroy());\r\n\t}\r\n\r\n\tonIconPressUnassignImageFromTaxon(oEvent: Event) {\r\n\t\tconst oSource = <Icon>oEvent.getSource();\r\n\t\tconst oTaxonModel = <JSONModel>this.oComponent.getModel('taxon')\r\n\t\tthis.ImageToTaxon.unassignImageFromTaxon(oSource, oTaxonModel);\r\n\t}\r\n\r\n\tonIconPressAssignImageToTaxon(oEvent: Event) {\r\n\t\tconst oSource = <Icon>oEvent.getSource();\r\n\t\tconst oTaxonModel = <JSONModel>this.oComponent.getModel('taxon')\r\n\t\tthis.ImageToTaxon.assignImageToTaxon(oSource, oTaxonModel);\r\n\t}\r\n\r\n\r\n\t//////////////////////////////////////////////////////////\r\n\t// Properties Handlers\r\n\t//////////////////////////////////////////////////////////\r\n\tonEditPropertyValueDelete(oEvent: Event) {\r\n\t\tvar oPropertiesModel = <JSONModel>this.oComponent.getModel('properties');\r\n\t\tconst oPropertiesTaxaModel = <JSONModel>this.oComponent.getModel('propertiesTaxa');\r\n\t\tconst oPropertiesBindingContext = <Context>(<Button>oEvent.getSource()).getBindingContext('properties');\r\n\t\tthis.propertiesUtil.editPropertyValueDelete(oPropertiesModel, oPropertiesTaxaModel, oPropertiesBindingContext, this._oCurrentPlant)\r\n\t}\r\n\r\n\tonCloseDialogEditPropertyValue(evt: Event) {\r\n\t\tthis.applyToFragment('dialogEditPropertyValue', (oPopover: Popover) => oPopover.close());\r\n\t}\r\n\r\n\tonCloseAddPropertiesDialog(evt: Event) {\r\n\t\tevt.getParameter('openBy').setType('Transparent');\r\n\t\tevt.getSource().destroy();\r\n\t}\r\n\tonOpenDialogAddProperty(oEvent: Event) {\r\n\t\tconst oBtnAddProperty = <Button>oEvent.getSource();\r\n\t\tconst oModelPropertyNames = oBtnAddProperty.getModel('propertyNames');\r\n\t\tthis.propertiesUtil.openDialogAddProperty(this.getView(), this._oCurrentPlant, oBtnAddProperty);\r\n\t}\r\n\r\n\tonCloseNewPropertyNameDialog(evt: Event) {\r\n\t\tthis.propertiesUtil.closeNewPropertyNameDialog();\r\n\t}\r\n\tonAddProperty(oEvent: Event) {\r\n\t\tthis.propertiesUtil.addProperty(this.getView(), <Button>oEvent.getSource());\r\n\t}\r\n\r\n\tonNewPropertyNameCreate(oEvent: Event) {\r\n\t\tvar oSource = <Input | Button>oEvent.getSource();\r\n\t\tthis.propertiesUtil.createNewPropertyName(oSource, this.getView());\r\n\t}\r\n\r\n\tonOpenDialogNewProperty(oEvent: Event) {\r\n\t\tconst oPlant = <PPlant>this.getView().getBindingContext('plants')!.getObject()\r\n\t\tvar oSource = <Button>oEvent.getSource();\r\n\t\tthis.propertiesUtil.openDialogNewProperty(oPlant, oSource);\r\n\t}\r\n\r\n\tonEditPropertyValueTag(oEvent: Event) {\r\n\t\t// show fragment to edit or delete property value\r\n\t\tvar oSource = <ObjectStatus>oEvent.getSource();\r\n\t\tvar sPathPropertyValue = oSource.getBindingContext('properties')!.getPath();\r\n\t\t// var oModelSoils = this._getFragment('dialogEvent').getModel('soils');\r\n\r\n\t\tthis.applyToFragment('dialogEditPropertyValue', (oPopover: Popover) => {\r\n\t\t\t// oPopover.setModel(oModelSoils, 'soils');\r\n\t\t\toPopover.bindElement({\r\n\t\t\t\tpath: sPathPropertyValue,\r\n\t\t\t\tmodel: \"properties\"\r\n\t\t\t});\r\n\t\t\toPopover.openBy(oSource, true);\r\n\t\t});\r\n\t}\r\n\r\n\t//////////////////////////////////////////////////////////\r\n\t// Event Handlers\r\n\t//////////////////////////////////////////////////////////\r\n\tpublic activateRadioButton(oEvent: Event): void {\r\n\t\tconst oSource = <Control>oEvent.getSource();\r\n\t\tconst sRadioButtonId: string = oSource.data('radiobuttonId');\r\n\t\tconst oRadioButton = <RadioButton>this.byId(sRadioButtonId);\r\n\t\toRadioButton.setSelected(true);\r\n\t}\r\n\r\n\tonSoilMixSelect(oEvent: Event) {\r\n\t\t// transfer selected soil from soils model to new/edit-event model (which has only one entry)\r\n\t\tconst oSource = <List>oEvent.getSource()\r\n\t\tconst oContexts = <Context[]>oSource.getSelectedContexts();\r\n\t\tif (oContexts.length !== 1) {\r\n\t\t\tMessageToast.show('No or more than one soil selected');\r\n\t\t\tthrow new Error('No or more than one soil selected');\r\n\t\t}\r\n\t\tvar oSelectedSoil = <PRSoil>oContexts[0].getObject();\r\n\t\tthis.applyToFragment('dialogEvent', (oDialog: Dialog) => {\r\n\t\t\tconst oModelNewEvent = <JSONModel>oDialog.getModel(\"editOrNewEvent\");\r\n\t\t\tconst oSelectedDataNew = Util.getClonedObject(oSelectedSoil);\r\n\t\t\toModelNewEvent.setProperty('/soil', oSelectedDataNew);\r\n\t\t});\r\n\t}\r\n\r\n\tonOpenDialogAddEvent(oEvent: Event) {\r\n\t\tthis.applyToFragment('dialogEvent', (oDialog: Dialog) => {\r\n\t\t\t// get soils collection from backend proposals resource\r\n\t\t\tthis.eventsUtil._loadSoils(this.getView());\r\n\r\n\t\t\t// if dialog was used for editing an event before, then destroy it first\r\n\t\t\tif (!!oDialog.getModel(\"editOrNewEvent\") && oDialog.getModel(\"editOrNewEvent\").getProperty('/mode') !== 'new') {\r\n\t\t\t\toDialog.getModel(\"editOrNewEvent\").destroy();\r\n\t\t\t\toDialog.setModel(null, \"editOrNewEvent\");\r\n\r\n\t\t\t\t// set header and button to add instead of edit\r\n\t\t\t\tconst oI18Model = <ResourceModel>this.getView().getModel(\"i18n\");\r\n\t\t\t\tconst oResourceBundle = <ResourceBundle>oI18Model.getResourceBundle();\r\n\t\t\t\toDialog.setTitle(oResourceBundle.getText(\"header_event\"));\r\n\t\t\t\tconst oBtnSave = <Button>this.getView().byId('btnEventUpdateSave');\r\n\t\t\t\toBtnSave.setText('Add');\r\n\t\t\t}\r\n\r\n\t\t\t// set defaults for new event\r\n\t\t\tif (!oDialog.getModel(\"editOrNewEvent\")) {\r\n\t\t\t\tlet mEventEditData: EventEditData = this.eventsUtil._getInitialEvent(this._oCurrentPlant.id!);\r\n\t\t\t\tmEventEditData.mode = 'new';\r\n\t\t\t\tconst oEventEditModel = new JSONModel(mEventEditData);\r\n\t\t\t\toDialog.setModel(oEventEditModel, \"editOrNewEvent\");\r\n\t\t\t}\r\n\r\n\t\t\tthis.getView().addDependent(oDialog);\r\n\t\t\toDialog.open();\r\n\t\t})\r\n\t}\r\n\r\n\tonEditEvent(oEvent: Event) {\r\n\t\t// triggered by edit button in a custom list item header in events list\r\n\t\tconst oSource = <Button>oEvent.getSource();\r\n\t\tconst oSelectedEvent = <PEvent>oSource.getBindingContext('events')!.getObject();\r\n\t\tthis.eventsUtil.editEvent(oSelectedEvent, this.getView(), this._oCurrentPlant.id!);\r\n\t}\r\n\tonOpenDialogEditSoil(oEvent: Event) {\r\n\t\tconst oSource = <Button>oEvent.getSource();\r\n\t\tconst oSoil = <PRSoil>oSource.getBindingContext('soils')!.getObject();\r\n\t\tthis.eventsUtil.openDialogEditSoil(this.getView(), oSoil);\r\n\t}\r\n\tonOpenDialogNewSoil(oEvent: Event) {\r\n\t\tthis.eventsUtil.openDialogNewSoil(this.getView());\r\n\r\n\t}\r\n\tonAddOrEditEvent(oEvent: Event) {\r\n\t\t//Triggered by 'Add' / 'Update' Button in Create/Edit Event Dialog\r\n\t\tthis.eventsUtil.addOrEditEvent(this.getView(), this._oCurrentPlant);\r\n\t}\r\n\tonUpdateOrCreateSoil(oEvent: Event) {\r\n\t\tconst oEditedSoil = <SoilEditData>(<Button>oEvent.getSource()).getBindingContext('editedSoil')!.getObject();\r\n\t\tconst oSoilsModel = <JSONModel>this.byId('dialogEvent').getModel('soils');\r\n\t\tthis.eventsUtil.updateOrCreateSoil(oEditedSoil, oSoilsModel);\r\n\t}\r\n\tonCancelEditSoil(oEvent: Event) {\r\n\t\tthis.applyToFragment('dialogEditSoil', (oDialog: Dialog) => oDialog.close(),);\r\n\t}\r\n\tonDeleteEventsTableRow(oEvent: Event) {\r\n\t\tconst oSelectedEvent = <PEvent>oEvent.getParameter('listItem').getBindingContext('events').getObject();\r\n\t\tconst oEventsModel = <JSONModel>this.oComponent.getModel('events');\r\n\t\tthis.eventsUtil.deleteEventsTableRow(oSelectedEvent, oEventsModel, this._oCurrentPlant)\r\n\r\n\t}\r\n\tonIconPressUnassignImageFromEvent(oEvent: Event) {\r\n\t\tconst sEventsBindingPath = oEvent.getParameter('listItem').getBindingContextPath('events');\r\n\t\tconst oEventsModel = <JSONModel>this.oComponent.getModel('events');\r\n\t\tthis.imageEventHandlers.unassignImageFromEvent(sEventsBindingPath, oEventsModel);\r\n\t}\r\n\r\n\tonAssignEventToImage(oEvent: Event) {\r\n\t\t// triggered upon selection of event in event selection dialog for an image get selected event\r\n\t\tconst oSource = <GridListItem>oEvent.getSource();\r\n\t\tconst oEventsModel = <JSONModel>this.getView().getModel('events');\r\n\t\tconst oPopoverAssignEventToImage = <Popover>this.byId('dialogAssignEventToImage')\r\n\t\tthis.imageEventHandlers.assignEventToImage(oSource, oEventsModel, oPopoverAssignEventToImage);\r\n\t}\r\n\tonIconPressAssignImageToEvent(oEvent: Event) {\r\n\t\tconst oSource = <Icon>oEvent.getSource();\r\n\t\tthis.imageEventHandlers.assignImageToEvent(oSource);\r\n\t}\r\n\r\n\t//////////////////////////////////////////////////////////\r\n\t// Image Handlers\r\n\t//////////////////////////////////////////////////////////\r\n\tonAddPlantNameToUntaggedImage(oEvent: Event) {\r\n\t\t//adds selected plant in input field (via suggestions) to an image in (details view)\r\n\t\t//note: there's a same-named function in untagged controller doing the same thing for untagged images\r\n\t\tconst oSource = <Input>oEvent.getSource();\r\n\t\tconst oImage = <PImage>oSource.getBindingContext(\"images\")!.getObject()\r\n\t\tconst oSelectedSuggestion = oEvent.getParameter('selectedRow');\r\n\t\tconst oSelectedPlant = <PPlant>oSelectedSuggestion.getBindingContext('plants').getObject();\r\n\t\tconst oImagesModel = this.oComponent.getModel('images');\r\n\t\tthis.imageEventHandlers.assignPlantToImage(oSelectedPlant, oImage, oImagesModel);\r\n\t\t// this.imageEventHandlers.addPlantNameToImage();\r\n\t\toImagesModel.updateBindings(true);\r\n\t\toSource.setValue('');\r\n\t}\r\n\tonPressImagePlantToken(oEvent: Event) {\r\n\t\t//navigate to chosen plant in plant details view when clicking on plant token in untagged images view\r\n\t\t//note: there's a same-named function in untagged controller doing the same thing for untagged images\r\n\t\tconst oSource = <Token>oEvent.getSource();\r\n\t\tconst oPlantTag = <PImagePlantTag>oSource.getBindingContext('images')!.getObject();\r\n\t\tif (!oPlantTag.plant_id || oPlantTag.plant_id <= 0) throw new Error(\"Unexpected error: No Plant ID\");\r\n\r\n\t\tif (oPlantTag.plant_id === this._oCurrentPlant.id) return; //already on this plant (no need to navigate)\r\n\r\n\t\t//navigate to plant in layout's current column (i.e. middle column)\r\n\t\tNavigation.getInstance().navToPlant(this.getPlantById(oPlantTag.plant_id), this.oComponent);\r\n\t}\r\n\t\r\n\tonIconPressDeleteImage(oEvent: Event){\r\n\t\t//note: there's a same-named function in untagged controller doing the same thing for untagged images\r\n\t\tconst oSource = <Icon>oEvent.getSource();\r\n\t\tconst oImage = <PImage>oSource.getBindingContext(\"images\")!.getObject()\r\n\t\t\r\n\t\t//confirm dialog\r\n\t\tvar bCompact = !!this.getView().$().closest(\".sapUiSizeCompact\").length;\r\n\t\tMessageBox.confirm(\r\n\t\t\t\"Delete this image?\", {\r\n\t\t\t\ttitle: \"Delete\",\r\n\t\t\t\tonClose: this.confirmDeleteImage.bind(this, oImage),\r\n\t\t\t\tactions: ['Delete', 'Cancel'],\r\n\t\t\t\tstyleClass: bCompact ? \"sapUiSizeCompact\" : \"\"\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tonInputImageNewKeywordSubmit(oEvent: Event){\r\n\t\t//note: there's a same-named function in untagged controller doing the same thing for untagged images\r\n\t\tconst oInput = <Input>oEvent.getSource();\r\n\t\toInput.setValue('');\r\n\r\n\t\t// check not empty and new\r\n\t\tconst sKeyword = oEvent.getParameter('value').trim();\r\n\t\tif (!sKeyword){\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst oImage = <PImage> oInput.getParent().getBindingContext('images')!.getObject();\r\n\t\tlet aKeywords: PKeyword[] = oImage.keywords;\r\n\t\tif(aKeywords.find(ele=>ele.keyword === sKeyword)){\r\n\t\t\tMessageToast.show('Keyword already in list');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//add to current image keywords in images model\r\n\t\taKeywords.push(<PKeyword>{\r\n\t\t\tkeyword: sKeyword\r\n\t\t});\r\n\r\n\t\tconst oImagesModel = this.oComponent.getModel('images');\r\n\t\toImagesModel.updateBindings(false);\r\n\t}\r\n\r\n\t// onTokenizerTokenDelete(oEvent: Event){\r\n\t// \t// triggered upon changes of image's plant assignments and image's keywords\r\n\t// \t// note: the token itself has already been deleted; here, we only delete the \r\n\t// \t// \t\t corresponding entry from the model\r\n\t// \t//note: there's a same-named function in untagged controller doing the same thing for untagged images\r\n\t// \t// if (oEvent.getParameter('type') !== 'removed')\r\n\t// \t// \treturn;\r\n\r\n\t// \t// const sKey = oEvent.getParameter('token').getProperty('key');  //either plant name or keyword\r\n\t// \tconst aTokens = <Token[]>oEvent.getParameter('tokens');\r\n\t// \tif (aTokens.length > 1) throw new Error(\"Unexpected error: More than one token to be deleted at once\");\r\n\t// \tconst oToken = <Token>aTokens[0];\r\n\t// \tconst sKey = oToken.getKey();\r\n\t// \tconst oImage = <PImage>oToken.getBindingContext('images')!.getObject();\r\n\t\t\r\n\t// \t// const oImage = <PImage>oTokenizer.getParent()!.getBindingContext('images')!.getObject();\r\n\t// \tconst oModel = this.oComponent.getModel('images');\r\n\r\n\t// \tconst oTokenizer = <Tokenizer> oEvent.getSource();\r\n\t// \tconst sType = oTokenizer.data('type'); // plant|keyword\r\n\r\n\t// \tthis.imageEventHandlers.removeTokenFromModel(sKey, oImage, oModel, sType);\r\n\t// }\r\n\r\n\tonTokenizerKeywordImageTokenDelete(oEvent: Event){\r\n\t\t// note: the token itself has already been deleted; here, we only delete the \r\n\t\t// \t\t corresponding plant-to-image entry from the model\r\n\t\t//note: there's a same-named function in untagged controller doing the same thing for untagged images\r\n\t\t\r\n\t\t// we get the token from the event parameters\r\n\t\tconst aTokens = <Token[]>oEvent.getParameter('tokens');\r\n\t\tif (aTokens.length > 1) throw new Error(\"Unexpected error: More than one token to be deleted at once\");\r\n\t\tconst oToken = <Token>aTokens[0];\r\n\t\tconst sKeywordTokenKey = oToken.getKey();\r\n\r\n\t\t// the event's source is the tokenizer\r\n\t\tconst oTokenizer = <Tokenizer> oEvent.getSource();\r\n\t\tconst oImage = <PImage>oTokenizer.getBindingContext('images')!.getObject();\r\n\t\t\r\n\t\tconst oImagesModel = this.oComponent.getModel('images');\r\n\r\n\t\tthis.imageEventHandlers.removeKeywordImageTokenFromModel(sKeywordTokenKey, oImage, oImagesModel);\r\n\t}\r\n\r\n\tonTokenizerPlantImageTokenDelete(oEvent: Event){\r\n\t\t// note: the token itself has already been deleted; here, we only delete the \r\n\t\t// \t\t corresponding keyword-to-image entry from the model\r\n\t\t//note: there's a same-named function in untagged controller doing the same thing for untagged images\r\n\t\t\r\n\t\t// we get the token from the event parameters\r\n\t\tconst aTokens = <Token[]>oEvent.getParameter('tokens');\r\n\t\tif (aTokens.length > 1) throw new Error(\"Unexpected error: More than one token to be deleted at once\");\r\n\t\tconst oToken = <Token>aTokens[0];\r\n\t\tconst sPlantTokenKey = oToken.getKey();\r\n\r\n\t\t// the event's source is the tokenizer\r\n\t\tconst oTokenizer = <Tokenizer> oEvent.getSource();\r\n\t\tconst oImage = <PImage>oTokenizer.getBindingContext('images')!.getObject();\r\n\t\t\r\n\t\tconst oImagesModel = this.oComponent.getModel('images');\r\n\r\n\t\tthis.imageEventHandlers.removePlantImageTokenFromModel(sPlantTokenKey, oImage, oImagesModel);\r\n\t}\r\n\r\n\t//////////////////////////////////////////////////////////\r\n\t// Upload Handlers\r\n\t//////////////////////////////////////////////////////////\r\n\tonUploadPlantPhotosToServer(oEvent: Event) {\r\n\t\t//upload images and directly assign them to supplied plant; no keywords included\r\n\t\tvar oFileUploader = <FileUploader>this.byId(\"idPlantPhotoUpload\");\r\n\t\tif (!oFileUploader.getValue()) {\r\n\t\t\t// \r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar sPath = 'plants/' + this._oCurrentPlant.id + '/images/'\r\n\t\tUtil.startBusyDialog('Uploading...', 'Image File(s)');\r\n\t\tvar sUrl = Util.getServiceUrl(sPath);\r\n\t\toFileUploader.setUploadUrl(sUrl);\r\n\t\toFileUploader.upload();\r\n\t}\r\n\r\n\thandleUploadPlantImagesAborted(oEvent: Event) {\r\n\t\t// unfortunately never triggered at all by FileUploader\r\n\t}\r\n\r\n\thandleUploadPlantImagesComplete(oEvent: Event) {\r\n\t\t// handle message, show error if required\r\n\t\tvar oResponse = JSON.parse(oEvent.getParameter('responseRaw'));\r\n\t\tif (!oResponse) {\r\n\t\t\tconst sMsg = \"Upload complete, but can't determine status.\";\r\n\t\t\tMessageUtil.getInstance().addMessage(MessageType.Warning, sMsg);\r\n\t\t}\r\n\t\tMessageUtil.getInstance().addMessageFromBackend(oResponse.message);\r\n\r\n\t\t// add to images registry and refresh current plant's images\r\n\t\tif (oResponse.images.length > 0) {\r\n\t\t\tthis.modelsHelper.addToImagesRegistry(oResponse.images);\r\n\t\t\tthis.resetImagesCurrentPlant(this._oCurrentPlant.id!);\r\n\t\t\tthis.oComponent.getModel('images').updateBindings(false);\r\n\t\t}\r\n\r\n\t\tUtil.stopBusyDialog();\r\n\t\tMessageToast.show(oResponse.message.message);\r\n\t}\r\n\r\n\tonHandleTypeMissmatch(oEvent: Event) {\r\n\t\t// handle file type missmatch for image upload\r\n\t\t// note: there's a same-nemed method in flexible column layout controller handling uploads there\r\n\t\tconst oFileUpload = <FileUploader>oEvent.getSource();\r\n\t\tconst sFiletype = oEvent.getParameter(\"fileType\")\r\n\t\tthis.imageEventHandlers.handleTypeMissmatch(oFileUpload, sFiletype);\r\n\t}\r\n\r\n}"],"mappings":"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"}