sap.ui.define(["plants/ui/controller/BaseController","sap/ui/model/json/JSONModel","sap/ui/model/Filter","plants/ui/model/formatter","sap/m/MessageBox","sap/m/MessageToast","plants/ui/customClasses/Util","plants/ui/customClasses/Navigation","plants/ui/customClasses/MessageUtil","plants/ui/customClasses/EventsUtil","sap/ui/model/Sorter","sap/ui/model/FilterOperator","plants/ui/customClasses/ImageToTaxon","plants/ui/customClasses/PropertiesUtil","plants/ui/customClasses/ImageEventHandlers","plants/ui/customClasses/TaxonomyUtil","plants/ui/model/ModelsHelper","sap/ui/core/Fragment","sap/ui/core/library"],function(e,t,n,a,o,i,s,l,r,d,g,c,p,u,h,m,P,f,v){function y(e){return e&&e.__esModule&&typeof e.default!=="undefined"?e.default:e}const C=y(e);const I=y(a);const _=y(l);const w=y(r);const T=y(d);const S=y(p);const b=y(u);const M=y(h);const D=y(m);const x=y(P);const E=v["MessageType"];const N=C.extend("plants.ui.controller.Detail",{constructor:function e(){C.prototype.constructor.apply(this,arguments);this.formatter=new I;this.ImageToTaxon=new S;this.modelsHelper=x.getInstance();this.TaxonomyUtil=D.getInstance();this.mIdToFragment={dialogRenamePlant:"plants.ui.view.fragments.detail.DetailRename",dialogCancellation:"plants.ui.view.fragments.detail.DetailCancellation",menuDeleteTag:"plants.ui.view.fragments.detail.DetailTagDelete",dialogAddTag:"plants.ui.view.fragments.detail.DetailTagAdd",dialogCreateDescendant:"plants.ui.view.fragments.detail.DetailCreateDescendant",dialogEvent:"plants.ui.view.fragments.events.AddEvent",dialogAssignEventToImage:"plants.ui.view.fragments.events.DetailAssignEvent",dialogClonePlant:"plants.ui.view.fragments.detail.DetailClone",dialogFindSpecies:"plants.ui.view.fragments.detail.DetailFindSpecies",dialogLeafletMap:"plants.ui.view.fragments.taxonomy.DetailTaxonomyMap",dialogEditPropertyValue:"plants.ui.view.fragments.properties.EditPropertyValue",dialogAddProperties:"plants.ui.view.fragments.properties.AvailableProperties",dialogNewPropertyName:"plants.ui.view.fragments.properties.NewPropertyName",dialogEditSoil:"plants.ui.view.fragments.events.EditSoil"}},onInit:function e(){C.prototype.onInit.call(this);const t=this.oComponent.getModel("suggestions");this.eventsUtil=T.getInstance(this.applyToFragment.bind(this),t.getData());this.propertiesUtil=b.getInstance(this.applyToFragment.bind(this));this.imageEventHandlers=new M(this.applyToFragment.bind(this));this.oLayoutModel=this.oComponent.getModel();this.oComponent.getModel("status").setProperty("/details_editable",false);this.oRouter.getRoute("detail").attachPatternMatched(this._onPatternMatched,this);this.oRouter.getRoute("untagged").attachPatternMatched(this._onPatternMatched,this);var n=this.byId("eventsList");n.bindAggregation("items",{path:"events>",templateShareable:false,factory:this.eventsUtil.eventsListFactory.bind(this),sorter:new g("date",true)});this.oComponent.getModel("status").setProperty("/images_editable",false)},_onPatternMatched:function e(t){s.startBusyDialog();this._currentPlantId=parseInt(t.getParameter("arguments").plant_id||this._currentPlantId||"0");this._bindModelsForCurrentPlant()},_bindModelsForCurrentPlant:function e(){var t=this.oComponent.getModel("plants");var n=t.dataLoaded();n.then(this._bindPlantsModelDeferred.bind(this),this._bindPlantsModelDeferred.bind(this));this._loadBindEventsModel();if(!this.oComponent.imagesPlantsLoaded.has(this._currentPlantId)){this._requestImagesForPlant(this._currentPlantId)}else{this.resetImagesCurrentPlant(this._currentPlantId)}},_loadBindEventsModel:function e(){this.getView().bindElement({path:"/PlantsEventsDict/"+this._currentPlantId,model:"events"});var t=this.oComponent.getModel("events");if(!t.getProperty("/PlantsEventsDict/"+this._currentPlantId+"/")){this._loadEventsForCurrentPlant()}},_bindPlantsModelDeferred:function e(){var t=this.oComponent.getModel("plants").getProperty("/PlantsCollection");this._currentPlantIndex=t.findIndex(e=>e.id===this._currentPlantId);if(this._currentPlantIndex===-1){i.show("Plant ID "+this._currentPlantId+" not found. Redirecting.");this._currentPlantIndex=0}var n="/PlantsCollection/"+this._currentPlantIndex;this._oCurrentPlant=this.oComponent.getModel("plants").getProperty(n);if(!this._oCurrentPlant.parent_plant){}if(!this._oCurrentPlant.parent_plant_pollen){}this.getView().bindElement({path:n,model:"plants"});this._bindTaxonOfCurrentPlantDeferred(this._oCurrentPlant);this._loadBindProperties()},_loadBindProperties:function e(){this.getView().bindElement({path:"/propertiesPlants/"+this._oCurrentPlant.id,model:"properties"});var t=this.oComponent.getModel("properties");if(!t.getProperty("/propertiesPlants/"+this._oCurrentPlant.id+"/")){this.propertiesUtil.loadPropertiesForCurrentPlant(this._oCurrentPlant,this.oComponent)}},_loadEventsForCurrentPlant:function e(){const t="events/"+this._currentPlantId;$.ajax({url:s.getServiceUrl(t),context:this,async:true}).done(this._onReceivingEventsForPlant.bind(this,this._currentPlantId)).fail(this.modelsHelper.onReceiveErrorGeneric.bind(this,"Event (GET)"))},_onReceivingEventsForPlant:function e(t,n){const a=this.oComponent.getModel("events");const o=n.events;a.setProperty("/PlantsEventsDict/"+t+"/",o);this.oComponent.oEventsDataClone[t]=s.getClonedObject(o);w.getInstance().addMessageFromBackend(n.message)},_bindTaxonOfCurrentPlantDeferred:function e(t){this.getView().bindElement({path:"/TaxaDict/"+t.taxon_id,model:"taxon"})},applyToFragment:function e(t,n,a){C.prototype.applyToFragment.call(this,t,n,a,this.mIdToFragment)},handleFullScreen:function e(){var t=this.oLayoutModel.getProperty("/actionButtonsInfo/midColumn/fullScreen");this.oRouter.navTo("detail",{layout:t,plant_id:this._oCurrentPlant.id})},handleExitFullScreen:function e(){var t=this.oLayoutModel.getProperty("/actionButtonsInfo/midColumn/exitFullScreen");this.oRouter.navTo("detail",{layout:t,plant_id:this._oCurrentPlant.id})},handleClose:function e(){var t=this.oLayoutModel.getProperty("/actionButtonsInfo/midColumn/closeColumn");this.oRouter.navTo("master",{layout:t})},onChangeActiveSwitch:function e(t){var n=t.getSource();if(t.getParameter("state")){return}var a=this.getView();if(!this.byId("dialogCancellation")){f.load({name:"plants.ui.view.fragments.detail.DetailCancellation",id:a.getId(),controller:this}).then(e=>{const t=e;a.byId("cancellationDate").setDateValue(new Date);a.addDependent(t);t.openBy(n,true)})}else{this.byId("dialogCancellation").openBy(n,true)}},onIconPressSetPreview:function e(t){var n=t.getSource();var a=n.getBindingContext("images").getPath();var o=this.oComponent.getModel("images").getProperty(a);var i=n.getBindingContext("plants").getPath();var s=this.oComponent.getModel("plants").getProperty(i);var l=o["filename"];var r=JSON.stringify(l);s["filename_previewimage"]=o["filename"];this.oComponent.getModel("plants").updateBindings(false)},onSetInactive:function e(t){var n=this.oComponent.getModel("suggestions").getProperty("/cancellationReasonCollection");var a=n.find(e=>e.selected);var o=this.getView().getBindingContext("plants").getObject();o.cancellation_reason=a.text;var i=this.byId("cancellationDate");let l=i.getDateValue();var r=s.formatDate(l);o.cancellation_date=r;this.oComponent.getModel("plants").updateBindings(false);this.byId("dialogCancellation").close()},onChangeParent:function e(t){var n=this.getView().getModel("plants").getProperty("/PlantsCollection");var a=n.find(e=>e.plant_name===t.getParameter("newValue").trim());if(!t.getParameter("newValue").trim()||!a){var o=undefined}else{o={id:a.id,plant_name:a.plant_name,active:a.active}}if(t.getSource().data("parentType")==="parent_pollen"){this._oCurrentPlant.parent_plant_pollen=o}else{this._oCurrentPlant.parent_plant=o}},onPressGoToPlant:function e(t){if(!!t){_.getInstance().navToPlantDetails(t)}else{this.handleErrorMessageBox("Can't determine Plant Index")}},onSuggestNursery:function e(t){var a=[];var o=t.getParameter("suggestValue");if(o){a.push(new n("name",c.Contains,o))}var i=t.getSource();var s=i.getBinding("suggestionItems");s.filter(a);i.setFilterSuggests(false)},onPressButtonDeletePlant:function e(t,n,a){if(n.length<1){return}var i=t.getSource();var s=i.getBindingContext("plants").getObject();var l=!!this.getView().$().closest(".sapUiSizeCompact").length;const r={title:"Delete",stretch:false,onClose:this._confirmDeletePlant.bind(this,n,a,s),actions:["Delete","Cancel"],styleClass:l?"sapUiSizeCompact":""};o.confirm("Delete plant "+n+"?",r)},onPressButtonClonePlant:function e(t){var n=this.getModifiedPlants();var a=this.getModifiedImages();var o=this.getModifiedTaxa();if(n.length!==0||a.length!==0||o.length!==0){i.show("There are unsaved changes. Save modified data or reload data first.");return}this.applyToFragment("dialogClonePlant",e=>{const t=this._generatePlantNameWithRomanizedSuffix(this._oCurrentPlant.plant_name,2);const n=this.byId("inputClonedPlantName");n.setValue(t);e.open()})},_confirmDeletePlant:function e(t,n,a,o){if(o!=="Delete"){return}s.startBusyDialog("Deleting","Deleting "+t);$.ajax({url:s.getServiceUrl("plants/"),type:"DELETE",contentType:"application/json",data:JSON.stringify({plant_id:n}),context:this}).done(this._onPlantDeleted.bind(this,a)).fail(this.modelsHelper.onReceiveErrorGeneric.bind(this,"Plant (DELETE)"))},_onPlantDeleted:function e(t,n,a,o){s.stopBusyDialog();this.onAjaxSimpleSuccess(n,a,o);var i=this.getView().getModel("plants").getData().PlantsCollection;var l=i.indexOf(t);i.splice(l,1);this.getView().getModel("plants").refresh();var r=this.oComponent.oPlantsDataClone.PlantsCollection;var d=r.find(function(e){return e.plant_name===t.plant_name});if(d!==undefined){r.splice(r.indexOf(d),1)}this.handleClose()},onToggleEditMode:function e(t){var n=t.getSource();var a=n.getType();if(a==="Transparent"){n.setType("Emphasized");this.getView().getModel("status").setProperty("/details_editable",true)}else{n.setType("Transparent");this.getView().getModel("status").setProperty("/details_editable",false)}},onPressTag:function e(t){var n=t.getSource();var a=n.getBindingContext("plants").getPath();this.applyToFragment("menuDeleteTag",e=>{e.bindElement({path:a,model:"plants"});e.openBy(n,true)})},pressDeleteTag:function e(t){var n=t.getSource();var a=n.getBindingContext("plants");var o=a.getPath();var i=o.substr(o.lastIndexOf("/")+1);this.oComponent.getModel("plants").getData().PlantsCollection[this._currentPlantIndex].tags.splice(i,1);this.oComponent.getModel("plants").refresh()},onOpenAddTagDialog:function e(n){var a=n.getSource();this.applyToFragment("dialogAddTag",e=>e.openBy(a,true),o.bind(this));function o(e){var n={ObjectStatusCollection:[{selected:false,text:"None",state:"None"},{selected:false,text:"Indication01",state:"Indication01"},{selected:false,text:"Success",state:"Success"},{selected:true,text:"Information",state:"Information"},{selected:false,text:"Error",state:"Error"},{selected:false,text:"Warning",state:"Warning"}],Value:""};var a=new t(n);e.setModel(a,"tagTypes")}},onAddTag:function e(t){var n=this.byId("dialogAddTag");var a=n.getModel("tagTypes");var o=a.getData();o.Value=o.Value.trim();if(o.Value.length===0){i.show("Enter text first.");return}var s=o.ObjectStatusCollection.find(function(e){return e.selected});var l=this.oComponent.getModel("plants").getData().PlantsCollection[this._currentPlantIndex];if(l.tags){var r=l.tags.find(function(e){return e.text===o.Value});if(r){i.show("Tag already exists.");return}}var d={text:o.Value,state:s.state,plant_id:l.id};if(l.tags){l.tags.push(d)}else{l.tags=[d]}this.oComponent.getModel("plants").updateBindings(false);this.byId("dialogAddTag").close()},onPressButtonRenamePlant:function e(t){var n=this.getModifiedPlants();var a=this.getModifiedImages();var o=this.getModifiedTaxa();if(n.length!==0||a.length!==0||o.length!==0){i.show("There are unsaved changes. Save modified data or reload data first.");return}this.applyToFragment("dialogRenamePlant",e=>{var t=this.byId("inputNewPlantName");t.setValue(this._oCurrentPlant.plant_name);e.open()})},onLiveChangeNewPlantName:function e(t,n){var a=t.getParameter("value");if(n==="clone"){this.byId("btnClonePlantSubmit").setEnabled(a.length>0)}else if(n==="rename"){this.byId("btnRenamePlantSubmit").setEnabled(a.length>0)}else if(n==="descendant"){this.byId("btnDescendantDialogCreate").setEnabled(a.length>0)}},onPressButtonSubmitClonePlant:function e(t){var n=this.byId("inputClonedPlantName").getValue().trim();if(n===""){i.show("Empty not allowed.");return}if(this.isPlantNameInPlantsModel(n)){i.show("Plant Name already exists.");return}s.startBusyDialog("Cloning...",'"'+this._oCurrentPlant.plant_name+'" to "'+n+'"');$.ajax({url:s.getServiceUrl("plants/"+this._oCurrentPlant.id+"/clone?plant_name_clone="+n),type:"POST",contentType:"application/json",context:this}).done(this._onReceivingPlantCloned).fail(this.modelsHelper.onReceiveErrorGeneric.bind(this,"Clone Plant (POST)"))},_onReceivingPlantCloned:function e(t){this.applyToFragment("dialogClonePlant",e=>e.close());w.getInstance().addMessageFromBackend(t.message);var n=t.plant;var a=this.oComponent.getModel("plants").getProperty("/PlantsCollection");a.push(n);this.oComponent.getModel("plants").updateBindings(false);var o=s.getClonedObject(n);this.oComponent.oPlantsDataClone.PlantsCollection.push(o);i.show(t.message.message);_.getInstance().navToPlantDetails(n.id);s.stopBusyDialog()},onPressButtonSubmitRenamePlant:function e(t){var n=this.byId("inputNewPlantName").getValue().trim();if(n===""){i.show("Empty not allowed.");return}if(this.isPlantNameInPlantsModel(n)){i.show("Plant Name already exists.");return}s.startBusyDialog("Renaming...",'"'+this._oCurrentPlant.plant_name+'" to "'+n+'"');var a={OldPlantName:this._oCurrentPlant.plant_name,NewPlantName:n};$.ajax({url:s.getServiceUrl("plants/"),type:"PUT",contentType:"application/json",data:JSON.stringify(a),context:this}).done(this._onReceivingPlantNameRenamed).fail(this.modelsHelper.onReceiveErrorGeneric.bind(this,"Plant (PUT)"))},_onReceivingPlantNameRenamed:function e(t){s.stopBusyDialog();i.show(t.message.message);w.getInstance().addMessageFromBackend(t.message);s.startBusyDialog("Loading...","Loading plants and images data");this.modelsHelper.reloadPlantsFromBackend();this.modelsHelper.resetImagesRegistry();this._requestImagesForPlant(this._oCurrentPlant.id);this.modelsHelper.reloadTaxaFromBackend();this.applyToFragment("dialogRenamePlant",e=>e.close())},_requestImagesForPlant:function e(t){var n=encodeURIComponent(t);var a="plants/"+n+"/images/";$.ajax({url:s.getServiceUrl(a),context:this,async:true}).done(this._onReceivingImagesForPlant.bind(this,t)).fail(this.modelsHelper.onReceiveErrorGeneric.bind(this,"Plant Images (GET)"))},_onReceivingImagesForPlant:function e(t,n){this.addPhotosToRegistry(n);this.oComponent.imagesPlantsLoaded.add(t);this.resetImagesCurrentPlant(t);this.oComponent.getModel("images").updateBindings(false)},onPressButtonCreateDescendantPlant:function e(n){var a=this.getModifiedPlants();var o=this.getModifiedImages();var s=this.getModifiedTaxa();if(a.length!==0||o.length!==0||s.length!==0){i.show("There are unsaved changes. Save modified data or reload data first.");return}this.applyToFragment("dialogCreateDescendant",e=>{var n="seed (collected)";var a={propagationType:n,parentPlant:this.getPlantById(this._currentPlantId).plant_name,parentPlantPollen:undefined,descendantPlantName:undefined};var o=new t(a);e.setModel(o,"descendant");this.updatePlantNameSuggestion();e.open()})},onDescendantDialogCreate:function e(t){var n=this.byId("dialogCreateDescendant").getModel("descendant").getData();if(!n.propagationType||!n.propagationType.length){i.show("Choose propagation type.");return}if(!n.parentPlant||!this.isPlantNameInPlantsModel(n.parentPlant)){i.show("Check parent plant.");return}var a=this.getSuggestionItem("propagationTypeCollection",n.propagationType);if(a.hasParentPlantPollen===true&&!!n.parentPlantPollen&&!this.isPlantNameInPlantsModel(n.parentPlantPollen)){i.show("Check parent plant pollen.");return}if(!n.descendantPlantName||!n.descendantPlantName.trim().length){i.show("Enter new plant name.");return}if(this.isPlantNameInPlantsModel(n.descendantPlantName)){i.show("Plant with that name already exists.");return}var o=this.getPlantByName(n.parentPlant);var s={id:undefined,plant_name:n.descendantPlantName,field_number:a.hasParentPlantPollen?"-":o.field_number,geographic_origin:a.hasParentPlantPollen?"-":o.geographic_origin,nursery_source:"-",propagation_type:n.propagationType,active:true,taxon_id:a.hasParentPlantPollen?undefined:o.taxon_id,parent_plant:{id:o.id,plant_name:o.plant_name,active:o.active},last_update:undefined,descendant_plants_all:[],sibling_plants:[],same_taxon_plants:[],tags:[]};if(!!n.parentPlantPollen&&n.parentPlantPollen.length){var l=this.getPlantByName(n.parentPlantPollen);s.parent_plant_pollen={id:l.id,plant_name:n.parentPlantPollen,active:l.active}}this.saveNewPlant(s);this.applyToFragment("dialogCreateDescendant",e=>e.close())},_generatePlantNameWithRomanizedSuffix:function e(t,n){for(var a=n;a<100;a++){var o=s.romanize(a);var i=t+" "+o;if(!this.isPlantNameInPlantsModel(i)){return i}}throw new Error("Could not generate plant name with romanized suffix.")},_generateNewPlantNameSuggestion:function e(t,n){if(!!n){var a=(t.botanical_name||t.plant_name)+" × "+(n.botanical_name||n.plant_name);if(this.isPlantNameInPlantsModel(a)){a=this._generatePlantNameWithRomanizedSuffix(a,2)}}else{var o=t.plant_name;var i=/\sM{0,4}(CM|CD|D?C{0,3})(XC|XL|L?X{0,3})(IX|IV|V?I{0,3})$/;var l=o.match(i);if(!!l){var r=l.pop();var d=s.arabize(r)+1;o=o.substr(0,t.plant_name.lastIndexOf(" "))}else{var d=2}var a=this._generatePlantNameWithRomanizedSuffix(o,d)}return a},updatePlantNameSuggestion:function e(){const t=this.byId("autoNameDescendantPlantName");if(!t.getSelected()){return}const n=this.byId("dialogCreateDescendant").getModel("descendant");let a=n.getData();if(!a.propagationType||!a.propagationType.length){return}const o=this.getSuggestionItem("propagationTypeCollection",a.propagationType);if(a.parentPlant&&a.parentPlant.trim().length){const e=this.getPlantByName(a.parentPlant);const t=a.parentPlantPollen&&o.hasParentPlantPollen?this.getPlantByName(a.parentPlantPollen):undefined;var i=this._generateNewPlantNameSuggestion(e,t)}else{i=""}const s=this.byId("dialogCreateDescendant").getModel("descendant");s.setProperty("/descendantPlantName",i)},onDescendantDialogChangeParent:function e(t,n){var a=t.getParameter("newValue").trim();if(!a||!this.isPlantNameInPlantsModel(a)){t.getSource().setValue("");return}this.updatePlantNameSuggestion()},onDescendantDialogSwitchParents:function e(){var t=this.byId("dialogCreateDescendant").getModel("descendant");var n=t.getProperty("/parentPlant");t.setProperty("/parentPlant",t.getProperty("/parentPlantPollen"));t.setProperty("/parentPlantPollen",n);this.updatePlantNameSuggestion()},onSwitchImageEditDescription:function e(t){const n=this.getView().getModel("status");if(n.getProperty("/images_editable")){n.setProperty("/images_editable",false)}else{n.setProperty("/images_editable",true)}},onOpenFindSpeciesDialog:function e(){this.applyToFragment("dialogFindSpecies",e=>e.open(),e=>{var n=new t;this.getView().setModel(n,"kewSearchResults")})},onButtonFindSpecies:function e(t){const n=this.byId("inputFindSpecies").getValue();const a=this.byId("cbFindSpeciesIncludeKew").getSelected();const o=this.byId("cbGenus").getSelected();const i=this.getView().getModel("kewSearchResults");this.TaxonomyUtil.findSpecies(n,a,o,i)},onFindSpeciesChoose:function e(t){const n=this.byId("tableFindSpeciesResults").getSelectedItem();const a=this.byId("textFindSpeciesAdditionalName").getText().trim();const o=this._getFragment("dialogFindSpecies");this.TaxonomyUtil.chooseSpecies(n,a,o,this._oCurrentPlant,this,this.getView())},onFindSpeciesTableSelectedOrDataUpdated:function e(t){const n=this.byId("tableFindSpeciesResults").getSelectedItem();const a=this.byId("textFindSpeciesAdditionalName");const o=this.byId("inputFindSpeciesAdditionalName");this.TaxonomyUtil.findSpeciesTableSelectedOrDataUpdated(a,o,n)},onFindSpeciesAdditionalNameLiveChange:function e(t){this.TaxonomyUtil.findSpeciesAdditionalNameLiveChange(this.getView())},onDialogFindSpeciesBeforeOpen:function e(t){this.TaxonomyUtil.findSpeciesBeforeOpen(this.getView())},onShowMap:function e(t){this.applyToFragment("dialogLeafletMap",e=>e.open())},onRefetchGbifImages:function e(t,n){const a=this.getView().getModel("taxon");this.TaxonomyUtil.refetchGbifImages(t,a,this._oCurrentPlant)},onCloseLeafletMap:function e(t){this.applyToFragment("dialogLeafletMap",e=>e.close())},afterCloseLeafletMap:function e(t){this.applyToFragment("dialogLeafletMap",e=>e.destroy())},onIconPressUnassignImageFromTaxon:function e(t){const n=t.getSource();const a=this.oComponent.getModel("taxon");this.ImageToTaxon.unassignImageFromTaxon(n,a)},onIconPressAssignImageToTaxon:function e(t){const n=t.getSource();const a=this.oComponent.getModel("taxon");this.ImageToTaxon.assignImageToTaxon(n,a)},onEditPropertyValueDelete:function e(t){var n=this.oComponent.getModel("properties");const a=this.oComponent.getModel("propertiesTaxa");const o=t.getSource().getBindingContext("properties");this.propertiesUtil.editPropertyValueDelete(n,a,o,this._oCurrentPlant)},onCloseDialogEditPropertyValue:function e(t){this.applyToFragment("dialogEditPropertyValue",e=>e.close())},onCloseAddPropertiesDialog:function e(t){t.getParameter("openBy").setType("Transparent");t.getSource().destroy()},onOpenDialogAddProperty:function e(t){const n=t.getSource();const a=n.getModel("propertyNames");this.propertiesUtil.openDialogAddProperty(this.getView(),this._oCurrentPlant,n)},onCloseNewPropertyNameDialog:function e(t){this.propertiesUtil.closeNewPropertyNameDialog()},onAddProperty:function e(t){this.propertiesUtil.addProperty(this.getView(),t.getSource())},onNewPropertyNameCreate:function e(t){var n=t.getSource();this.propertiesUtil.createNewPropertyName(n,this.getView())},onOpenDialogNewProperty:function e(t){const n=this.getView().getBindingContext("plants").getObject();var a=t.getSource();this.propertiesUtil.openDialogNewProperty(n,a)},onEditPropertyValueTag:function e(t){var n=t.getSource();var a=n.getBindingContext("properties").getPath();this.applyToFragment("dialogEditPropertyValue",e=>{e.bindElement({path:a,model:"properties"});e.openBy(n,true)})},activateRadioButton:function e(t){const n=t.getSource();const a=n.data("radiobuttonId");const o=this.byId(a);o.setSelected(true)},onSoilMixSelect:function e(t){const n=t.getSource();const a=n.getSelectedContexts();if(a.length!==1){i.show("No or more than one soil selected");throw new Error("No or more than one soil selected")}var o=a[0].getObject();this.applyToFragment("dialogEvent",e=>{const t=e.getModel("editOrNewEvent");const n=s.getClonedObject(o);t.setProperty("/soil",n)})},onOpenDialogAddEvent:function e(n){this.applyToFragment("dialogEvent",e=>{this.eventsUtil._loadSoils(this.getView());if(!!e.getModel("editOrNewEvent")&&e.getModel("editOrNewEvent").getProperty("/mode")!=="new"){e.getModel("editOrNewEvent").destroy();e.setModel(null,"editOrNewEvent");const t=this.getView().getModel("i18n");const n=t.getResourceBundle();e.setTitle(n.getText("header_event"));const a=this.getView().byId("btnEventUpdateSave");a.setText("Add")}if(!e.getModel("editOrNewEvent")){let n=this.eventsUtil._getInitialEvent(this._oCurrentPlant.id);n.mode="new";const a=new t(n);e.setModel(a,"editOrNewEvent")}this.getView().addDependent(e);e.open()})},onEditEvent:function e(t){const n=t.getSource();const a=n.getBindingContext("events").getObject();this.eventsUtil.editEvent(a,this.getView(),this._oCurrentPlant.id)},onOpenDialogEditSoil:function e(t){const n=t.getSource();const a=n.getBindingContext("soils").getObject();this.eventsUtil.openDialogEditSoil(this.getView(),a)},onOpenDialogNewSoil:function e(t){this.eventsUtil.openDialogNewSoil(this.getView())},onAddOrEditEvent:function e(t){this.eventsUtil.addOrEditEvent(this.getView(),this._oCurrentPlant)},onUpdateOrCreateSoil:function e(t){const n=t.getSource().getBindingContext("editedSoil").getObject();const a=this.byId("dialogEvent").getModel("soils");this.eventsUtil.updateOrCreateSoil(n,a)},onCancelEditSoil:function e(t){this.applyToFragment("dialogEditSoil",e=>e.close())},onDeleteEventsTableRow:function e(t){const n=t.getParameter("listItem").getBindingContext("events").getObject();const a=this.oComponent.getModel("events");this.eventsUtil.deleteEventsTableRow(n,a,this._oCurrentPlant)},onIconPressUnassignImageFromEvent:function e(t){const n=t.getParameter("listItem").getBindingContextPath("events");const a=this.oComponent.getModel("events");this.imageEventHandlers.unassignImageFromEvent(n,a)},onAssignEventToImage:function e(t){const n=t.getSource();const a=this.getView().getModel("events");const o=this.byId("dialogAssignEventToImage");this.imageEventHandlers.assignEventToImage(n,a,o)},onIconPressAssignImageToEvent:function e(t){const n=t.getSource();this.imageEventHandlers.assignImageToEvent(n)},onAddPlantNameToUntaggedImage:function e(t){const n=t.getSource();const a=n.getBindingContext("images").getObject();const o=t.getParameter("selectedRow");const i=o.getBindingContext("plants").getObject();const s=this.oComponent.getModel("images");this.imageEventHandlers.assignPlantToImage(i,a,s);s.updateBindings(true);n.setValue("")},onPressImagePlantToken:function e(t){const n=t.getSource();const a=n.getBindingContext("images").getObject();if(!a.plant_id||a.plant_id<=0)throw new Error("Unexpected error: No Plant ID");if(a.plant_id===this._oCurrentPlant.id)return;_.getInstance().navToPlant(this.getPlantById(a.plant_id),this.oComponent)},onIconPressDeleteImage:function e(t){const n=t.getSource();const a=n.getBindingContext("images").getObject();var i=!!this.getView().$().closest(".sapUiSizeCompact").length;o.confirm("Delete this image?",{title:"Delete",onClose:this.confirmDeleteImage.bind(this,a),actions:["Delete","Cancel"],styleClass:i?"sapUiSizeCompact":""})},onInputImageNewKeywordSubmit:function e(t){const n=t.getSource();n.setValue("");const a=t.getParameter("value").trim();if(!a){return}const o=n.getParent().getBindingContext("images").getObject();let s=o.keywords;if(s.find(e=>e.keyword===a)){i.show("Keyword already in list");return}s.push({keyword:a});const l=this.oComponent.getModel("images");l.updateBindings(false)},onTokenizerKeywordImageTokenDelete:function e(t){const n=t.getParameter("tokens");if(n.length>1)throw new Error("Unexpected error: More than one token to be deleted at once");const a=n[0];const o=a.getKey();const i=t.getSource();const s=i.getBindingContext("images").getObject();const l=this.oComponent.getModel("images");this.imageEventHandlers.removeKeywordImageTokenFromModel(o,s,l)},onTokenizerPlantImageTokenDelete:function e(t){const n=t.getParameter("tokens");if(n.length>1)throw new Error("Unexpected error: More than one token to be deleted at once");const a=n[0];const o=a.getKey();const i=t.getSource();const s=i.getBindingContext("images").getObject();const l=this.oComponent.getModel("images");this.imageEventHandlers.removePlantImageTokenFromModel(o,s,l)},onUploadPlantPhotosToServer:function e(t){var n=this.byId("idPlantPhotoUpload");if(!n.getValue()){return}var a="plants/"+this._oCurrentPlant.id+"/images/";s.startBusyDialog("Uploading...","Image File(s)");var o=s.getServiceUrl(a);n.setUploadUrl(o);n.upload()},handleUploadPlantImagesAborted:function e(t){},handleUploadPlantImagesComplete:function e(t){var n=JSON.parse(t.getParameter("responseRaw"));if(!n){const e="Upload complete, but can't determine status.";w.getInstance().addMessage(E.Warning,e)}w.getInstance().addMessageFromBackend(n.message);if(n.images.length>0){this.modelsHelper.addToImagesRegistry(n.images);this.resetImagesCurrentPlant(this._oCurrentPlant.id);this.oComponent.getModel("images").updateBindings(false)}s.stopBusyDialog();i.show(n.message.message)},onHandleTypeMissmatch:function e(t){const n=t.getSource();const a=t.getParameter("fileType");this.imageEventHandlers.handleTypeMissmatch(n,a)}});return N});