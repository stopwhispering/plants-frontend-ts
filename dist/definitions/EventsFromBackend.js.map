{"version":3,"file":"EventsFromBackend.js","names":[],"sources":["../../src/definitions/EventsFromBackend.ts"],"sourcesContent":["\r\n/**\r\n * @namespace plants.ui.definitions\r\n */\r\n/**\r\n/* This file was automatically generated from pydantic models by running pydantic2ts.\r\n/* Do not modify it by hand - just update the pydantic models and then re-run the script\r\n*/\r\n\r\nimport { PMessage } from \"./MessagesFromBackend\";\r\n\r\nexport type ShapeTop = \"square\" | \"round\" | \"oval\" | \"hexagonal\";\r\nexport type ShapeSide = \"very flat\" | \"flat\" | \"high\" | \"very high\";\r\nexport type PEvents = PEvent[];\r\n/**\r\n * message types processed by error/success handlers in ui5 web frontend\r\n */\r\nexport type MessageType = \"Information\" | \"None\" | \"Success\" | \"Warning\" | \"Error\" | \"Debug\";\r\n\r\nexport interface PEvent {\r\n  id: number;\r\n  date: string;\r\n  event_notes?: string;\r\n  observation?: PObservation;\r\n  // pot_id?: number;\r\n  // pot_event_type?: string;\r\n  soil?: PSoil;\r\n  // soil_event_type?: string;\r\n  plant_id: number;\r\n  pot?: PPot;\r\n  images?: PImage[];\r\n}\r\nexport interface PObservation {\r\n  id?: number;\r\n  diseases?: string;\r\n  stem_max_diameter?: number;\r\n  height?: number;\r\n  observation_notes?: string;\r\n}\r\nexport interface PSoil {\r\n  id?: number;\r\n  soil_name: string;\r\n  mix: string;\r\n  description?: string;\r\n}\r\nexport interface PPot {\r\n  id?: number;\r\n  material: string;\r\n  shape_top: ShapeTop;\r\n  shape_side: ShapeSide;\r\n  diameter_width?: number;\r\n}\r\nexport interface PImage {\r\n  id?: number;\r\n  filename: string;\r\n}\r\nexport interface PEventCreateOrUpdate {\r\n  id?: number;\r\n  date: string;\r\n  event_notes?: string;\r\n  observation?: PObservation;\r\n  // pot_id?: number;\r\n  // pot_event_type?: string;\r\n  soil?: PSoil;\r\n  // soil_event_type?: string;\r\n  plant_id: number;\r\n  pot?: PPot;\r\n  images?: PImage[];\r\n}\r\nexport interface PEventCreateOrUpdateRequest {\r\n  plants_to_events: {\r\n    [k: string]: PEventCreateOrUpdate[];\r\n  };\r\n}\r\nexport interface PImageDelete {\r\n  filename: string;\r\n}\r\nexport interface PImagesDelete {\r\n  images: PImageDelete[];\r\n}\r\n\r\nexport interface PResultsEventResource {\r\n  events: PEvents;\r\n  message: PMessage;\r\n}\r\nexport interface PResultsSoilsResource {\r\n  SoilsCollection: PSoilWithCount[];\r\n}\r\nexport interface PSoilWithCount {\r\n  id: number;\r\n  soil_name: string;\r\n  mix: string;\r\n  description?: string;\r\n  plants_count: number;\r\n}\r\nexport interface PResultsUpdateCreateSoil {\r\n  soil: PSoil;\r\n  message: PMessage;\r\n}\r\nexport interface PSoilCreate {\r\n  id?: number;\r\n  soil_name: string;\r\n  mix: string;\r\n  description?: string;\r\n}"],"mappings":""}