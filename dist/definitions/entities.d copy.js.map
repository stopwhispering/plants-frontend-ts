{"version":3,"file":"entities.d copy.js","names":[],"sources":["../../src/definitions/entities.d copy.ts"],"sourcesContent":["import ManagedObject from \"sap/ui/base/ManagedObject\";\r\n\r\n/**\r\n * @namespace plants.ui.definitions.entities\r\n */\r\nexport interface PMessage {\r\n    type: MessageType;\r\n    message: string;\r\n    additionalText: string;\r\n    description?: string;\r\n}\r\n\r\nexport interface PConfirmation{\r\n    action: string;\r\n    resource: string;\r\n    message: PMessage;\r\n}\r\n\r\nexport interface CancellationReason {\r\n    selected: boolean;\r\n    text: string;\r\n    icon: string;\r\n    state: string;\r\n}\r\n\r\nexport interface Plant {\r\n    id: int\r\n    plant_name: string;\r\n    field_number: string;\r\n    geographic_origin: string;\r\n    nursery_source: string;\r\n    propagation_type: string;\r\n    active: bool;\r\n    cancellation_reason?: string;\r\n    cancellation_date?: any;\r\n    generation_notes?: string;\r\n    taxon_id: int;\r\n    taxon_authors?: string;\r\n    botanical_name?: string;\r\n\r\n    // parent_plant_id: int;\r\n    parent_plant: ParentalPlant;\r\n    // parent_plant_pollen_id: int;\r\n    parent_plant_pollen?: ParentalPlant;\r\n    plant_notes?: string;\r\n    filename_previewimage?: string;\r\n    hide: bool;\r\n    last_update: any;\r\n\r\n    descendant_plants_all: any[];\r\n    sibling_plants: any[];\r\n    same_taxon_plants: any[];\r\n\r\n    url_preview?: string;  //todo remove?\r\n    current_soil?: any;\r\n    latest_image?: any;\r\n    tags: any[];\r\n}\r\n\r\nexport interface NewPlant extends Plant {\r\n    id: undefined;\r\n}\r\n\r\nexport interface ParentalPlant {\r\n    //flowering plant or pollen donor pant\r\n    id: int | undefined;\r\n    plant_name: string | undefined;\r\n    active: bool | undefined;\r\n}\r\n\r\nexport interface PPot {\r\n    id?: number;\r\n    material: string;\r\n    shape_top: ShapeTop;\r\n    shape_side: ShapeSide;\r\n    diameter_width: number;\r\n}\r\n\r\nexport interface PObservation {\r\n    id?: number;\r\n    diseases?: string;\r\n    stem_max_diameter?: number;\r\n    height?: number;\r\n    observation_notes?: string;\r\n}\r\nexport interface PSoil {\r\n    id?: number;  // undefined only initially when creating the dialog\r\n    soil_name: string;\r\n    mix: string;\r\n    description?: string;\r\n}\r\n\r\nexport interface PEvent {\r\n    id: number;\r\n    date: string;\r\n    event_notes?: string;\r\n    observation_id?: number;\r\n    observation?: PObservation;\r\n    pot_id?: number;\r\n    pot_event_type?: 'cancel' | 'Repotting';\r\n    soil_id?: number;\r\n    soil?: PSoil;\r\n    pot_event_type?: 'cancel' | 'Repotting';\r\n    plant_id: number;\r\n    pot?: PPot;\r\n    images?: PImage[];\r\n  }\r\n\r\nexport interface PlantIdToEventsMap {\r\n    [key: int]: PEvent[];  //plant_it to Events array\r\n}\r\n\r\nexport interface PEventCreateOrUpdate {\r\n    id?: number;  // only difference to PEvent\r\n    date: string;\r\n    event_notes?: string;\r\n    observation_id?: number;\r\n    observation?: PObservation;\r\n    pot_id?: number;\r\n    pot_event_type?: 'cancel' | 'Repotting';\r\n    soil_id?: number;\r\n    soil?: PSoil;\r\n    pot_event_type?: 'cancel' | 'Repotting';\r\n    plant_id: number;\r\n    pot?: PPot;\r\n    images?: PImage[];\r\n}\r\n\r\nexport interface PEvents extends Array<PEvent|PEventCreateOrUpdate> { }\r\n\r\nexport interface PEventCreateOrUpdateRequest {\r\n    plants_to_events: {\r\n      [k: string]: PEventCreateOrUpdate[];\r\n    };\r\n  }\r\n\r\nexport interface IdToFragmentMap {\r\n    [key: string]: string;  // e.g. dialogRenamePlant: \"plants.ui.view.fragments.DetailRename\"\r\n}\r\n\r\nexport interface PlantsCollection {\r\n    PlantsCollection: Plant[];\r\n}\r\n\r\nexport interface ObjectStatusData {\r\n    // ObjectStatus is reserved word\r\n    selected: boolean;\r\n    text: string;\r\n    state: string;\r\n}\r\n\r\nexport interface ObjectStatusCollection {\r\n    ObjectStatusCollection: ObjectStatusData[];\r\n}\r\n\r\nexport interface Tag {\r\n    text: string;\r\n    state: string;\r\n    plant_id: int;\r\n}\r\n\r\nexport interface BackendResultPlantCloned {\r\n    action: str\r\n    resource: str\r\n    message: BackendMessage\r\n    plant: Plant\r\n}\r\n\r\nexport interface Taxon {\r\n    id: int;\r\n    name: string;\r\n    is_custom: bool;\r\n    subsp: string;\r\n    species: string;\r\n    subgen: string;\r\n    genus: string;\r\n    family: string;\r\n    phylum: string;\r\n    kingdom: string;\r\n    rank: string;\r\n    taxonomic_status: string;\r\n    name_published_in_year: int;\r\n    synonym: bool;\r\n    fq_id: string;\r\n    authors: string;\r\n    basionym: string;\r\n    synonyms_concat: string;\r\n    distribution_concat: string;\r\n    hybrid: bool;\r\n    hybridgenus: bool;\r\n    gbif_id: string;\r\n    powo_id: string;\r\n    custom_notes: string;\r\n    ipni_id_short: string;\r\n    distribution: any;\r\n    images: any[];\r\n    trait_categories: any[];\r\n    occurrenceImages: any[];\r\n    latest_image: any;\r\n    tags: any[];\r\n}\r\n\r\nexport interface TaxonMap {\r\n    [key: int]: Taxon;\r\n}\r\n\r\nexport interface TaxonData {\r\n    TaxaDict: TaxonMap;\r\n}\r\n\r\nexport interface EventEditDataSegments{\r\n    observation: 'cancel' | 'status';\r\n    pot: 'cancel' | 'repot';\r\n\tsoil: 'cancel';\r\n}\r\n\r\nexport interface EventEditData {\r\n    // for new event or editing existing event\r\n    date: any;\r\n    event_notes?: string;\r\n    pot: PPot;\r\n    observation: PObservation;\r\n    soil: PSoil;\r\n    segments? : EventEditDataSegments;  // deleted before saving to backend\r\n    mode: 'new' | 'edit' | undefined;\r\n    old_event?: EventEditData;\r\n    plant_id: int;\r\n}\r\n\r\nexport interface SoilEditData {\r\n    // for new soil or editing existing soil\r\n    dialog_title: string,\r\n    btn_text: string;\r\n    new: boolean;\r\n    id?: int;  // undefined for new soil\r\n    soil_name: string;\r\n    description: string;\r\n    mix: string;\r\n}\r\n\r\nexport interface PResultsUpdateCreateSoil {\r\n    soil: PSoil;\r\n    message: PMessage;\r\n  }\r\n  "],"mappings":""}