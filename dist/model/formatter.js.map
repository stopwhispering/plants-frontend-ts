{"version":3,"file":"formatter.js","names":["formatter","activeInactive","active","countPlants","plants","undefined","length","toString","addDummyIfEmpty","s","propertyStateByType","propertyType","colorByPreviewOrNot","sImage","sPlantPreviewImage","sSplit","indexOf","sImageFilename","split","sPlantPreviewImageFilename","aImage","pop","aPreview","join","timestampToDateShort","ts","substr","tokenFormat","key","plant_name","messageCount","aMessages","btnEnabledUntagged","midColumnVisible","endColumnVisible","ipniOrCustomName","fqId","is_custom","sourceAndCount","sSource","iCount","iCountInactive","existsAndNotEmpty","obj","Array","isArray","Object","keys","a","last_image_warning","sLastImageDate","iDaysSince","Util","getDaysFromToday","visibleByPropagationType","sPropagationType","show_parent_plant_pollen_by_propagation_type","show_parent_plant_by_propagation_type","visibleByGeographicOrigin","sGeographicOrigin","createDescendantParentPollenVisibleByPropagationType","propagationType","that","getSuggestionItem","getSrcAvatarImageS","filename_previewimage","getImageUrl","getSrcAvatarImageL","getSrcImageThumbnail","filename","getSrcImage","getSrcImage120px","getSrcImageOccurrenceThumbnail","gbif_id","occurrence_id","img_no","path","getServiceUrl","getSrcMasterHoverImage"],"sources":["../../src/model/formatter.ts"],"sourcesContent":["import * as Util from \"plants/ui/customClasses/Util\";\r\nimport BaseController from \"../controller/BaseController\";\r\nimport { LPropagationTypeData } from \"../definitions/PlantsLocal\";\r\n\r\n/**\r\n * @namespace plants.ui.model\r\n */\r\n// export default class formatter extends ManagedObject{\r\nexport default class formatter{\r\n// export default {\t\r\n\r\n\tpublic activeInactive(active: boolean): string {\r\n\t\tswitch (active) {\r\n\t\t\tcase true:\r\n\t\t\t\treturn '';\r\n\t\t\tcase false:\r\n\t\t\t\treturn 'Status: inactive';\r\n\t\t\tcase null:\r\n\t\t\t\treturn 'Status: unknown';\r\n\t\t\tdefault:\r\n\t\t\t\treturn active;\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic countPlants(plants: []): string|undefined{\r\n\t\tif(plants!==undefined){\r\n\t\t\treturn plants.length.toString();\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic addDummyIfEmpty(s: string): string{\r\n\t\tif (s.length === 0){\r\n\t\t\treturn '_';\r\n\t\t} else {\r\n\t\t\treturn s;\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic propertyStateByType(propertyType: string){\r\n\t\t// returns an objecte status state (e.g. success for green) based on \r\n\t\t// the supplied trait status; used for traits display\r\n\t\tif(propertyType === 'plant'){\r\n\t\t\treturn 'Success';  // green\r\n\t\t} else if(propertyType === 'taxon'){\r\n\t\t\treturn 'None';\r\n\t\t} else {\r\n\t\t\treturn 'Warning';  //orange\r\n\t\t}\r\n\t}\r\n\t\r\n\t// todo repair\r\n\tpublic colorByPreviewOrNot(sImage: string, sPlantPreviewImage: string){\r\n\t\tif(!!sImage && !!sPlantPreviewImage){\r\n\t\t\t// uri may be split via forward or backward slashes\r\n\t\t\tvar sSplit = (sPlantPreviewImage.indexOf('/') === -1) ? '\\\\' : '/';\r\n\t\t\t\r\n\t\t\tvar sImageFilename = sImage.split(sSplit)[sImage.split(sSplit).length-1];\r\n\t\t\tvar sPlantPreviewImageFilename = sPlantPreviewImage.split(sSplit)[sPlantPreviewImage.split(sSplit).length-1];\r\n\t\t\t// # sPlantPreviewImage has a suffix before the file type (e.g. 300_300), except temporily set\r\n\t\t\t// # just get the base filenames without suffix and file type\r\n\t\t\tvar aImage = sImageFilename.split('.');\r\n\t\t\taImage.pop();\r\n\t\t\tvar aPreview = sPlantPreviewImageFilename.split('.');\r\n\t\t\taPreview.pop();\r\n\t\t\tif (aPreview.length >= 2){\r\n\t\t\t\taPreview.pop();\r\n\t\t\t}\r\n\t\t\t//if image is current preview image, then return blue, otherwise yellow\r\n\t\t\tif(aPreview.join('.') === aImage.join('.')){\r\n\t\t\t\treturn 'blue';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn '#E69A17';  // orange\r\n\t}\r\n\r\n\tpublic timestampToDateShort(ts: string){\r\n\t\tif (ts === '1900-01-01'){\r\n\t\t\t// dummy date if no image at all; required for correct sorting\r\n\t\t\treturn '';\r\n\t\t} else if (ts !== undefined && ts !== null && ts.length > 15){\r\n\t\t\treturn ts.substr(2,8);  // \"2018-11-10\"\r\n\t\t} else {\r\n\t\t\treturn ts;\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic tokenFormat(key: string, plant_name: string){\r\n\t\tif(key===plant_name){\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic messageCount(aMessages: []){\r\n\t\tif(aMessages){\r\n\t\t\treturn aMessages.length;\r\n\t\t} else {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic btnEnabledUntagged(midColumnVisible: boolean, endColumnVisible: boolean){\r\n\t\treturn (midColumnVisible && !endColumnVisible);\r\n\t}\r\n\t\r\n\tpublic ipniOrCustomName(fqId: string, is_custom: boolean){\r\n\t\tif(is_custom){\r\n\t\t\treturn 'Custom Entry';\r\n\t\t} else {\r\n\t\t\treturn fqId;\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic sourceAndCount(sSource: string, iCount: boolean, iCountInactive: boolean){\r\n\t\tif (!iCount && !iCountInactive){\r\n\t\t\treturn sSource;\r\n\t\t} else if (!!iCount && !!iCountInactive){\r\n\t\t\treturn sSource + ' (' +  iCount + ' +' + iCountInactive + ' inactive )';\r\n\t\t} else if (!!iCount){\r\n\t\t\treturn sSource + ' (' + iCount + ')';\r\n\t\t} else if (!!iCountInactive){\r\n\t\t\treturn sSource + ' (' + iCountInactive + ' inactive )';\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic existsAndNotEmpty(obj: any){\r\n\t\tswitch (typeof(obj)){\r\n\t\t\tcase 'string':\r\n\t\t\t\treturn (obj.length === 0) ? false : true;\r\n\r\n\t\t\t// object might be an array, dict or null object\r\n\t\t\tcase 'object':\r\n\t\t\t\tif(Array.isArray(obj)){\r\n\t\t\t\t\treturn (obj.length === 0) ? false : true;\r\n\t\t\t\t} else if (obj === null){\r\n\t\t\t\t\treturn false;\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// probably dict\r\n\t\t\t\t\treturn (Object.keys(obj).length === 0) ? false : true;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t\t\r\n\t\t\tcase 'undefined':\r\n\t\t\t\treturn false;\r\n\r\n\t\t\tcase 'number':\r\n\t\t\t\treturn (obj === 0) ? false : true;\r\n\t\t\t\t\r\n\t\t\t\tdefault:\r\n\t\t\t\tvar a = 1;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\t\r\n\t// ArrayLength(aArray){\r\n\t// \tif(aArray === null || aArray === undefined){\r\n\t// \t\treturn 0;\r\n\t// \t}\r\n\t// \treturn aArray.length;\r\n\t// },\r\n\t\r\n\tpublic last_image_warning(sLastImageDate: string){\r\n\t\t//we always get a day; if we don't have one, backend supplies \"1900-01-01\"\r\n\t\tif(sLastImageDate===\"1900-01-01\"){\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tvar iDaysSince = Util.getDaysFromToday(sLastImageDate);\r\n\t\treturn (iDaysSince > 380) ? true : false;\r\n\t}\r\n\r\n\t// // todo redo this functionality or remove it\r\n\t// avatarSrc(oPlant, sPreviewImage){\r\n\t// \t// updated when filter/settings confirmed, sets chosen preview image in plants table\r\n\t// \t// default: favourite image; set in component\r\n\t// \tswitch (sPreviewImage){\r\n\t// \t\tcase 'favourite_image':\r\n\t// \t\t\treturn oPlant.url_preview;\r\n\t// \t\tcase 'latest_image':\r\n\t// \t\t\ttry{\r\n\t// \t\t\t\treturn oPlant.latest_image.path_thumb;\r\n\t// \t\t\t} catch(e) {\r\n\t// \t\t\t\treturn undefined;\t\r\n\t// \t\t\t}\r\n\t// \t}\r\n\t// },\r\n\t\r\n\tpublic visibleByPropagationType(sPropagationType: string){\r\n\t\tswitch (sPropagationType){\r\n\t\t\tcase 'seed (purchased)':\r\n\t\t\t\treturn true;\r\n\t\t\tcase 'seed (collected)':\r\n\t\t\t\treturn true;\r\n\t\t\tdefault:\r\n\t\t\t\treturn false;\r\n\t\t}\t\t\r\n\t}\r\n\r\n\t// todo replace\r\n\tpublic show_parent_plant_pollen_by_propagation_type(sPropagationType: string){\r\n\t\tswitch (sPropagationType){\r\n\t\t\tcase 'seed (collected)':\r\n\t\t\t\treturn true;\r\n\t\t\tdefault:\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t// todo replace\r\n\tpublic show_parent_plant_by_propagation_type(sPropagationType: string){\r\n\t\tswitch (sPropagationType){\r\n\t\t\tcase 'acquired as plant':\r\n\t\t\t\treturn false;\r\n\t\t\tcase 'seed (purchased)':\r\n\t\t\t\treturn false;\r\n\t\t\tdefault:\r\n\t\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic visibleByGeographicOrigin(sGeographicOrigin: string){\r\n\t\tif (!!sGeographicOrigin && sGeographicOrigin.length >= 3){\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic createDescendantParentPollenVisibleByPropagationType(propagationType: LPropagationTypeData){\r\n\t\tif (!propagationType){\r\n\t\t\t// undefined or empty string\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tconst that = <BaseController><unknown>this;\r\n\r\n\t\tvar propagationType = that.getSuggestionItem('propagationTypeCollection', propagationType);\r\n\t\treturn propagationType['hasParentPlantPollen'] === true;\r\n\t}\r\n\r\n\tpublic getSrcAvatarImageS(filename_previewimage: string): string|undefined{\r\n\t\t// get url for image in avatar size s (default), i.e. 3 rem\r\n\t\tif (filename_previewimage)\r\n\t\t\treturn Util.getImageUrl(filename_previewimage, 'rem', 3, 3);\r\n\t}\r\n\r\n\tpublic getSrcAvatarImageL(filename_previewimage: string): string|undefined{\r\n\t\t// get url for image in avatar size l, i.e. 5 rem{\r\n\t\tif (filename_previewimage)\r\n\t\t\treturn Util.getImageUrl(filename_previewimage, 'rem', 5, 5);\r\n\t}\r\n\r\n\tpublic getSrcImageThumbnail(filename: string){\r\n\t\t// get url for image in thumbnail size for details images list\r\n\t\treturn Util.getImageUrl(filename, 'px', 288, 288);\r\n\t}\r\n\r\n\tpublic getSrcImage(filename: string): string|undefined{\r\n\t\t// get url for image in full size\r\n\t\tif (filename)\r\n\t\t\treturn Util.getImageUrl(filename);\r\n\t}\r\n\r\n\tpublic getSrcImage120px(filename: string){\r\n\t\t// get url for thumbnail image in taxon images list\r\n\t\treturn Util.getImageUrl(filename, 'px', 120, 120);\r\n\t}\r\n\r\n\tpublic getSrcImageOccurrenceThumbnail(gbif_id: int, occurrence_id: int, img_no: int){\r\n\t\t// get url for thumbnail image in taxon images list for occurrences\r\n\t\tvar path = 'occurrence_thumbnail?gbif_id=' + gbif_id + '&occurrence_id=' + occurrence_id + '&img_no=' + img_no;\r\n\t\treturn Util.getServiceUrl(path);\r\n\t}\r\n\r\n\tpublic getSrcMasterHoverImage(filename: string){\r\n\t\t// get url for image in preview popup openened when hovering in master list\r\n\t\treturn Util.getImageUrl(filename, 'px', 1200, 800);\r\n\t}\r\n\r\n}"],"mappings":"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"}